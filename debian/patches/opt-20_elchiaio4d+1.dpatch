#!/bin/sh /usr/share/dpatch/dpatch-run

## elchiaio4d by Andy Grobb (Elchi) and Rolf Ahrenberg 
## (see HISTORY-ElchiAIO for all contributors)
##
## the frames an balck square fix by Thomas Günther and Gerhard Stein are 
## already included
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: ELCHI AIO Version 4d osd improvement patch

@DPATCH@
diff -Nur vdr.orig/config.c vdr/config.c
--- vdr.orig/config.c	2004-07-22 20:19:11.000000000 +0200
+++ vdr/config.c	2004-08-01 13:40:47.000000000 +0200
@@ -15,6 +15,8 @@
 #include "plugin.h"
 #include "recording.h"
 
+const char *ConfigDirectory = NULL;
+
 // IMPORTANT NOTE: in the 'sscanf()' calls there is a blank after the '%d'
 // format characters in order to allow any number of blanks after a numeric
 // value!
@@ -287,6 +289,50 @@
   memset(CaCaps, sizeof(CaCaps), 0);
   CurrentChannel = -1;
   CurrentVolume = MAXVOLUME;
+  Theme = 0;
+  SmallFonts = 1;
+  ChannelLogo = 1;
+  LogoColorScheme = 1;
+  Symbol = 1;
+  TimeBar = 0;
+  ProgressBar = 0;
+  OSDxoffset = 0;
+  ShowWeekdays = 0;
+  ShowRecDate = 1;
+  ShowRecTime = 1;
+  ShowRecLength = 0;
+  BgColor = 0;
+  BgClrBackground = 0x88000000;
+  BgClrChannelName = 0x88000000;
+  BgClrChannelDate = 0x88FFFFFF;
+  BgClrEpgTime = 0x88000000;
+  BgClrEpgData = 0x88000000;
+  BgClrTitleLine = 0xFFFFFF00;
+  BgClrScrolLine = 0xFFFFFF00;
+  BgClrHelpRed = 0xFF1111CC;
+  BgClrHelpGreen = 0xFF22CC22;
+  BgClrHelpYellow = 0xFF22BBCC;
+  BgClrHelpBlue = 0xFFCC0000;
+  BgClrErrorLine = 0xFF1111CC;
+  BgClrInfoLine = 0xFF22CC22;
+  BgClrConfirmLine = 0xFF22BBCC;
+  ClrChannelName = 1;
+  ClrChannelDate = 1;
+  ClrEpgTime = 4;
+  ClrTitle = 7;
+  ClrSubTitle = 7;
+  ClrMenuFont = 1;
+  ClrTitleLine = 0;
+  ClrScrolLine = 0;
+  ClrVolumeBar = 3;
+  ClrTimeBar1 = 0;
+  ClrTimeBar2 = 8;
+  ClrSymbolOn = 4;
+  ClrSymbolOff = 8;
+  ClrErrorFont = 1;
+  ClrInfoFont = 0;
+  ClrConfirmFont = 0;
+  MenuCommandPos = 1;
 }
 
 cSetup& cSetup::operator= (const cSetup &s)
@@ -439,6 +485,49 @@
   else if (!strcasecmp(Name, "CaCaps"))              return ParseCaCaps(Value);
   else if (!strcasecmp(Name, "CurrentChannel"))      CurrentChannel     = atoi(Value);
   else if (!strcasecmp(Name, "CurrentVolume"))       CurrentVolume      = atoi(Value);
+  else if (!strcasecmp(Name, "Theme"))               Theme              = atoi(Value);
+  else if (!strcasecmp(Name, "SmallFonts"))          SmallFonts         = atoi(Value);
+  else if (!strcasecmp(Name, "ChannelLogo"))         ChannelLogo        = atoi(Value);
+  else if (!strcasecmp(Name, "LogoColorScheme"))     LogoColorScheme    = atoi(Value);
+  else if (!strcasecmp(Name, "Symbol"))              Symbol             = atoi(Value);
+  else if (!strcasecmp(Name, "TimeBar"))             TimeBar            = atoi(Value);
+  else if (!strcasecmp(Name, "ProgressBar"))         ProgressBar        = atoi(Value);
+  else if (!strcasecmp(Name, "OSDxoffset"))          OSDxoffset         = atoi(Value);
+  else if (!strcasecmp(Name, "ShowWeekdays"))        ShowWeekdays       = atoi(Value);
+  else if (!strcasecmp(Name, "ShowRecDate"))         ShowRecDate        = atoi(Value);
+  else if (!strcasecmp(Name, "ShowRecTime"))         ShowRecTime        = atoi(Value);
+  else if (!strcasecmp(Name, "ShowRecLength"))       ShowRecLength      = atoi(Value);
+  else if (!strcasecmp(Name, "MenuCommandPos"))      MenuCommandPos     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrBackground"))     BgClrBackground    = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrChannelName"))    BgClrChannelName   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrChannelDate"))    BgClrChannelDate   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrEpgTime"))        BgClrEpgTime       = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrEpgData"))        BgClrEpgData       = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrTitleLine"))      BgClrTitleLine     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrScrolLine"))      BgClrScrolLine     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpRed"))        BgClrHelpRed       = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpGreen"))      BgClrHelpGreen     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpYellow"))     BgClrHelpYellow    = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpBlue"))       BgClrHelpBlue      = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrErrorLine"))      BgClrErrorLine     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrInfoLine"))       BgClrInfoLine      = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrConfirmLine"))    BgClrConfirmLine   = atoi(Value);
+  else if (!strcasecmp(Name, "ClrChannelName"))      ClrChannelName     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrChannelDate"))      ClrChannelDate     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrEpgTime"))          ClrEpgTime         = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTitle"))            ClrTitle           = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSubTitle"))         ClrSubTitle        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrMenuFont"))         ClrMenuFont        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTitleLine"))        ClrTitleLine       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrScrolLine"))        ClrScrolLine       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrVolumeBar"))        ClrVolumeBar       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTimeBar1"))         ClrTimeBar1        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTimeBar2"))         ClrTimeBar2        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSymbolOn"))         ClrSymbolOn        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSymbolOff"))        ClrSymbolOff       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrErrorFont"))        ClrErrorFont       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrInfoFont"))         ClrInfoFont        = atoi(Value);
+  else if (!strcasecmp(Name, "ClrConfirmFont"))      ClrConfirmFont     = atoi(Value);
   else
      return false;
   return true;
@@ -489,6 +578,49 @@
   StoreCaCaps("CaCaps");
   Store("CurrentChannel",     CurrentChannel);
   Store("CurrentVolume",      CurrentVolume);
+  Store("Theme",              Theme);
+  Store("SmallFonts",         SmallFonts);
+  Store("ChannelLogo",        ChannelLogo);
+  Store("LogoColorScheme",    LogoColorScheme);
+  Store("Symbol",             Symbol);
+  Store("TimeBar",            TimeBar);
+  Store("ProgressBar",        ProgressBar);
+  Store("OSDxoffset",         OSDxoffset);
+  Store("ShowWeekdays",       ShowWeekdays);
+  Store("ShowRecDate",        ShowRecDate);
+  Store("ShowRecTime",        ShowRecTime);
+  Store("ShowRecLength",      ShowRecLength);
+  Store("MenuCommandPos",     MenuCommandPos);
+  Store("BgClrBackground",    BgClrBackground);
+  Store("BgClrChannelName",   BgClrChannelName);
+  Store("BgClrChannelDate",   BgClrChannelDate);
+  Store("BgClrEpgTime",       BgClrEpgTime);
+  Store("BgClrEpgData",       BgClrEpgData);
+  Store("BgClrTitleLine",     BgClrTitleLine);
+  Store("BgClrScrolLine",     BgClrScrolLine);
+  Store("BgClrHelpRed",       BgClrHelpRed);
+  Store("BgClrHelpGreen",     BgClrHelpGreen);
+  Store("BgClrHelpYellow",    BgClrHelpYellow);
+  Store("BgClrHelpBlue",      BgClrHelpBlue);
+  Store("BgClrErrorLine",     BgClrErrorLine);
+  Store("BgClrInfoLine",      BgClrInfoLine);
+  Store("BgClrConfirmLine",   BgClrConfirmLine);
+  Store("ClrChannelName",     ClrChannelName); 
+  Store("ClrChannelDate",     ClrChannelDate);
+  Store("ClrEpgTime",         ClrEpgTime);
+  Store("ClrTitle",           ClrTitle);
+  Store("ClrSubTitle",        ClrSubTitle);
+  Store("ClrMenuFont",        ClrMenuFont);
+  Store("ClrTitleLine",       ClrTitleLine);
+  Store("ClrScrolLine",       ClrScrolLine);
+  Store("ClrVolumeBar",       ClrVolumeBar);
+  Store("ClrTimeBar1",        ClrTimeBar1);
+  Store("ClrTimeBar2",        ClrTimeBar2); 
+  Store("ClrSymbolOn",        ClrSymbolOn);
+  Store("ClrSymbolOff",       ClrSymbolOff);
+  Store("ClrErrorFont",       ClrErrorFont);
+  Store("ClrInfoFont",        ClrInfoFont);
+  Store("ClrConfirmFont",     ClrConfirmFont);
 
   Sort();
 
@@ -498,3 +630,184 @@
      }
   return false;
 }
+
+// --- cColorSchemeFile ------------------------------------------------------
+
+cColorSchemeSetup::cColorSchemeSetup(void)
+{
+  BgClrBackground  = 0x88000000;
+  BgClrChannelName = BgClrBackground;
+  BgClrChannelDate = 0x88FFFFFF;
+  BgClrEpgTime     = BgClrBackground;
+  BgClrEpgData     = BgClrBackground;
+  BgClrTitleLine   = 0xFFFFFF00;
+  BgClrScrolLine   = BgClrTitleLine;
+  BgClrHelpRed     = 0xFF1111CC;
+  BgClrHelpGreen   = 0xFF22CC22;
+  BgClrHelpYellow  = 0xFF22BBCC;
+  BgClrHelpBlue    = 0xFFCC0000;
+  BgClrErrorLine   = 0xFF1111CC;
+  BgClrInfoLine    = 0xFF22CC22;
+  BgClrConfirmLine = 0xFF22BBCC;
+
+  ClrChannelName   = 1;
+  ClrChannelDate   = 1;
+  ClrEpgTime       = 4;
+  ClrTitle         = 7;
+  ClrSubTitle      = 7;
+  ClrMenuFont      = 1;
+  ClrTitleLine     = 0;
+  ClrScrolLine     = 0;
+  ClrVolumeBar     = 3;
+  ClrTimeBar1      = 0;
+  ClrTimeBar2      = 8;
+  ClrSymbolOn      = 4;
+  ClrSymbolOff     = 8;
+  ClrErrorFont     = 1;
+  ClrInfoFont      = 0;
+  ClrConfirmFont   = 0;
+
+  strcpy(Description,  "");
+  strcpy(DescriptionX, "");
+}
+
+bool cColorSchemeSetup::Load(const char *FileName)
+{
+  if (cConfig<cSetupLine>::Load(FileName, true)) {
+     bool result = true;
+     for (cSetupLine *l = First(); l; l = Next(l)) {
+         bool error = false;
+         if (!Parse(l->Name(), l->Value())) {
+            error = true;
+            }
+         if (error) {
+            esyslog("ERROR: unknown color scheme config parameter: %s = %s", l->Name(), l->Value());
+            result = false;
+            }
+         }
+     return result;
+     }
+  return false;
+}
+
+bool cColorSchemeSetup::Parse(const char *Name, const char *Value)
+{
+  char *xDescription = NULL;
+
+  asprintf(&xDescription, "Description%d", Setup.OSDLanguage);
+
+       if (!strcasecmp(Name, "BgClrBackground"))  BgClrBackground  = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrChannelName")) BgClrChannelName = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrChannelDate")) BgClrChannelDate = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrEpgTime"))     BgClrEpgTime     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrEpgData"))     BgClrEpgData     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrTitleLine"))   BgClrTitleLine   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrScrolLine"))   BgClrScrolLine   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpRed"))     BgClrHelpRed     = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpGreen"))   BgClrHelpGreen   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpYellow"))  BgClrHelpYellow  = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrHelpBlue"))    BgClrHelpBlue    = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrErrorLine"))   BgClrErrorLine   = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrInfoLine"))    BgClrInfoLine    = atoi(Value);
+  else if (!strcasecmp(Name, "BgClrConfirmLine")) BgClrConfirmLine = atoi(Value);
+  else if (!strcasecmp(Name, "ClrChannelName"))   ClrChannelName   = atoi(Value);
+  else if (!strcasecmp(Name, "ClrChannelDate"))   ClrChannelDate   = atoi(Value);
+  else if (!strcasecmp(Name, "ClrEpgTime"))       ClrEpgTime       = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTitle"))         ClrTitle         = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSubTitle"))      ClrSubTitle      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrMenuFont"))      ClrMenuFont      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTitleLine"))     ClrTitleLine     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrScrolLine"))     ClrScrolLine     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrVolumeBar"))     ClrVolumeBar     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTimeBar1"))      ClrTimeBar1      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrTimeBar2"))      ClrTimeBar2      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSymbolOn"))      ClrSymbolOn      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrSymbolOff"))     ClrSymbolOff     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrErrorFont"))     ClrErrorFont     = atoi(Value);
+  else if (!strcasecmp(Name, "ClrInfoFont"))      ClrInfoFont      = atoi(Value);
+  else if (!strcasecmp(Name, "ClrConfirmFont"))   ClrConfirmFont   = atoi(Value);
+  else if (!strcasecmp(Name, "Description"))      strn0cpy(Description, Value, MaxFileName);
+  else if (!strcasecmp(Name, xDescription))       strn0cpy(DescriptionX, Value, MaxFileName);
+
+  free(xDescription);
+  return true;
+}
+
+cSetupLine *cColorSchemeSetup::Get(const char *Name)
+{
+  for (cSetupLine *l = First(); l; l = Next(l)) {
+      if (strcasecmp(l->Name(), Name) == 0)
+         return l;
+      }
+  return NULL;
+}
+
+void cColorSchemeSetup::Store(const char *Name, const char *Value)
+{
+  if (Name && *Name) {
+     cSetupLine *l = Get(Name);
+     if (l)
+        Del(l);
+     if (Value)
+        Add(new cSetupLine(Name, Value));
+     }
+}
+
+void cColorSchemeSetup::Store(const char *Name, int Value)
+{
+  char *buffer = NULL;
+  asprintf(&buffer, "%d", Value);
+  Store(Name, buffer);
+  free(buffer);
+}
+
+bool cColorSchemeSetup::Save(void)
+{
+  char *xDescription = NULL;
+
+  if (!cConfig<cSetupLine>::FileName())
+     return false;
+
+  asprintf(&xDescription, "Description%d", Setup.OSDLanguage);
+
+  Store("BgClrBackground",    BgClrBackground);
+  Store("BgClrChannelName",   BgClrChannelName);
+  Store("BgClrChannelDate",   BgClrChannelDate);
+  Store("BgClrEpgTime",       BgClrEpgTime);
+  Store("BgClrEpgData",       BgClrEpgData);
+  Store("BgClrTitleLine",     BgClrTitleLine);
+  Store("BgClrScrolLine",     BgClrScrolLine);
+  Store("BgClrHelpRed",       BgClrHelpRed);
+  Store("BgClrHelpGreen",     BgClrHelpGreen);
+  Store("BgClrHelpYellow",    BgClrHelpYellow);
+  Store("BgClrHelpBlue",      BgClrHelpBlue);
+  Store("BgClrErrorLine",     BgClrErrorLine);
+  Store("BgClrInfoLine",      BgClrInfoLine);
+  Store("BgClrConfirmLine",   BgClrConfirmLine);
+  Store("ClrChannelName",     ClrChannelName); 
+  Store("ClrChannelDate",     ClrChannelDate);
+  Store("ClrEpgTime",         ClrEpgTime);
+  Store("ClrTitle",           ClrTitle);
+  Store("ClrSubTitle",        ClrSubTitle);
+  Store("ClrMenuFont",        ClrMenuFont);
+  Store("ClrTitleLine",       ClrTitleLine);
+  Store("ClrScrolLine",       ClrScrolLine);
+  Store("ClrVolumeBar",       ClrVolumeBar);
+  Store("ClrTimeBar1",        ClrTimeBar1);
+  Store("ClrTimeBar2",        ClrTimeBar2); 
+  Store("ClrSymbolOn",        ClrSymbolOn);
+  Store("ClrSymbolOff",       ClrSymbolOff);
+  Store("ClrErrorFont",       ClrErrorFont);
+  Store("Description",        Description);
+  Store(xDescription,         DescriptionX);
+
+  free(xDescription);
+
+  Sort();
+
+  if (cConfig<cSetupLine>::Save()) {
+     isyslog("saved color scheme setup: %s", cConfig<cSetupLine>::FileName());
+     return true;
+     }
+  return false;
+}
diff -Nur vdr.orig/config.h vdr/config.h
--- vdr.orig/config.h	2004-07-22 20:19:11.000000000 +0200
+++ vdr/config.h	2004-08-01 13:40:47.000000000 +0200
@@ -22,6 +22,8 @@
 #define VDRVERSION  "1.2.6"
 #define VDRVERSNUM   10206  // Version * 10000 + Major * 100 + Minor
 
+#define ELCHIAIOVERSION 413
+
 #define MAXPRIORITY 99
 #define MAXLIFETIME 99
 
@@ -32,6 +34,8 @@
 
 #define MaxFileName 256
 
+extern const char *ConfigDirectory;
+
 class cCommand : public cListObject {
 private:
   char *title;
@@ -240,6 +244,48 @@
   int CaCaps[MAXDEVICES][MAXCACAPS];
   int CurrentChannel;
   int CurrentVolume;
+  int BgColor;
+  int BgClrBackground;
+  int BgClrChannelName;
+  int BgClrChannelDate;
+  int BgClrEpgTime; 
+  int BgClrEpgData; 
+  int BgClrTitleLine;
+  int BgClrScrolLine;
+  int BgClrHelpRed;
+  int BgClrHelpGreen;
+  int BgClrHelpYellow;
+  int BgClrHelpBlue; 
+  int BgClrErrorLine;
+  int BgClrInfoLine;
+  int BgClrConfirmLine;
+  int ClrChannelName;
+  int ClrChannelDate;
+  int ClrEpgTime;
+  int ClrTitle;
+  int ClrSubTitle;
+  int ClrMenuFont;
+  int ClrTitleLine;
+  int ClrScrolLine;
+  int ClrVolumeBar;
+  int ClrTimeBar1;
+  int ClrTimeBar2;
+  int ClrSymbolOn;
+  int ClrSymbolOff;
+  int ClrErrorFont;
+  int ClrInfoFont;
+  int ClrConfirmFont;
+  int Red, Green, Blue, Transparency;
+  int Theme;
+  int SmallFonts;
+  int ChannelLogo;
+  int LogoColorScheme;
+  int Symbol;
+  int TimeBar;
+  int ProgressBar;
+  int OSDxoffset;
+  int ShowWeekdays, ShowRecDate, ShowRecTime, ShowRecLength;
+  int MenuCommandPos;
   int __EndData__;
   cSetup(void);
   cSetup& operator= (const cSetup &s);
@@ -249,4 +295,50 @@
 
 extern cSetup Setup;
 
+class cColorSchemeSetup : public cConfig<cSetupLine> {
+private:
+  bool Parse(const char *Name, const char *Value);
+  cSetupLine *Get(const char *Name);
+  void Store(const char *Name, const char *Value);
+  void Store(const char *Name, int Value);
+public:
+  int __BeginData__;
+  char Description[MaxFileName];
+  char DescriptionX[MaxFileName];
+  int BgClrBackground;
+  int BgClrChannelName;
+  int BgClrChannelDate;
+  int BgClrEpgTime;
+  int BgClrEpgData;
+  int BgClrTitleLine;
+  int BgClrScrolLine;
+  int BgClrHelpRed;
+  int BgClrHelpGreen;
+  int BgClrHelpYellow;
+  int BgClrHelpBlue;
+  int BgClrErrorLine;
+  int BgClrInfoLine;
+  int BgClrConfirmLine;
+  int ClrChannelName;
+  int ClrChannelDate;
+  int ClrEpgTime;
+  int ClrTitle;
+  int ClrSubTitle;
+  int ClrMenuFont;
+  int ClrTitleLine;
+  int ClrScrolLine;
+  int ClrVolumeBar;
+  int ClrTimeBar1;
+  int ClrTimeBar2;
+  int ClrSymbolOn;
+  int ClrSymbolOff;
+  int ClrErrorFont;
+  int ClrInfoFont;
+  int ClrConfirmFont;
+  int __EndData__;
+  cColorSchemeSetup(void);
+  bool Load(const char *FileName);
+  bool Save(void);
+};
+
 #endif //__CONFIG_H
diff -Nur vdr.orig/dvbplayer.c vdr/dvbplayer.c
--- vdr.orig/dvbplayer.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/dvbplayer.c	2004-08-01 13:40:47.000000000 +0200
@@ -173,7 +173,7 @@
 //XXX+ also used in recorder.c - find a better place???
 // The size of the array used to buffer video data:
 // (must be larger than MINVIDEODATA - see remux.h)
-#define VIDEOBUFSIZE  MEGABYTE(1)
+#define VIDEOBUFSIZE  MEGABYTE(4)
 
 // The number of frames to back up when resuming an interrupted replay session:
 #define RESUMEBACKUP (10 * FRAMESPERSEC)
diff -Nur vdr.orig/eit.c vdr/eit.c
--- vdr.orig/eit.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/eit.c	2004-08-01 13:40:47.000000000 +0200
@@ -280,6 +280,16 @@
    return szEndTime;
 }
 /**  */
+const char * cEventInfo::GetWeekdayString() const
+{
+   static char szWeekday[4];
+
+   struct tm tm_r;
+   strn0cpy(szWeekday, WeekDayName(localtime_r(&tTime, &tm_r)->tm_wday), sizeof(szWeekday));
+
+   return szWeekday;
+}
+/**  */
 time_t cEventInfo::GetTime() const
 {
    return tTime;
diff -Nur vdr.orig/eit.h vdr/eit.h
--- vdr.orig/eit.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/eit.h	2004-08-01 13:40:47.000000000 +0200
@@ -60,6 +60,7 @@
   const unsigned char GetTableID(void) const;
   const char *GetTimeString(void) const;
   const char *GetEndTimeString(void) const;
+  const char *GetWeekdayString(void) const;
   const char *GetDate(void) const;
   bool IsFollowing(void) const;
   bool IsPresent(void) const;
diff -Nur vdr.orig/font.c vdr/font.c
--- vdr.orig/font.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/font.c	2004-08-01 13:40:47.000000000 +0200
@@ -12,6 +12,8 @@
 
 #include "fontfix.c"
 #include "fontosd.c"
+#include "fontsym.c"
+#include "fontsml.c"
 
 cFont::cFont(eDvbFont Font)
 {
@@ -24,7 +26,9 @@
   switch (Font) {
     default:
     FONTINDEX(Osd);
+    FONTINDEX(Sml);
     FONTINDEX(Fix);
+    FONTINDEX(Sym);
     // TODO others...
     }
 }
diff -Nur vdr.orig/font.h vdr/font.h
--- vdr.orig/font.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/font.h	2004-08-01 13:40:47.000000000 +0200
@@ -12,13 +12,17 @@
 
 enum eDvbFont {
   fontOsd,
+  fontSml,
   fontFix,
+  fontSym,
 /* TODO as soon as we have the font files...
   fontTtxSmall,
   fontTtxLarge,
 */
   };
 
+#define fontOsd2 fontSml
+
 class cFont {
 public:
   enum { NUMCHARS = 256 };
diff -Nur vdr.orig/fontsml.c vdr/fontsml.c
--- vdr.orig/fontsml.c	1970-01-01 01:00:00.000000000 +0100
+++ vdr/fontsml.c	2004-08-01 13:40:47.000000000 +0200
@@ -0,0 +1,5602 @@
+cFont::tPixelData FontSml[][24] = {
+  {             // 32
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 33
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000010,  // ..*...
+     0x00000010,  // ..*...
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 34
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000036,  // **.**
+     0x00000036,  // **.**
+     0x00000036,  // **.**
+     0x00000036,  // **.**
+     0x00000036,  // **.**
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 35
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x000003FE,  // .*********
+     0x000003FE,  // .*********
+     0x00000090,  // ...*..*...
+     0x00000090,  // ...*..*...
+     0x00000090,  // ...*..*...
+     0x000007FC,  // *********.
+     0x000007FC,  // *********.
+     0x00000120,  // ..*..*....
+     0x00000120,  // ..*..*....
+     0x00000120,  // ..*..*....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 36
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000020,  // .....*....
+     0x000000F8,  // ...*****..
+     0x000001FC,  // ..*******.
+     0x0000032C,  // .**..*.**.
+     0x00000320,  // .**..*....
+     0x000003A0,  // .***.*....
+     0x000001E0,  // ..****....
+     0x000000F8,  // ...*****..
+     0x0000003C,  // .....****.
+     0x00000026,  // .....*..**
+     0x00000326,  // .**..*..**
+     0x000003AE,  // .***.*.***
+     0x000001FC,  // ..*******.
+     0x000000F8,  // ...*****..
+     0x00000020,  // .....*....
+     0x00000020,  // .....*....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 37
+     16, 22,
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00007860,  // ..****....**....
+     0x0000CCC0,  // .**..**..**.....
+     0x0000CCC0,  // .**..**..**.....
+     0x0000CD80,  // .**..**.**......
+     0x0000CD80,  // .**..**.**......
+     0x00007B00,  // ..****.**.......
+     0x00000300,  // .......**.......
+     0x00000678,  // ......**..****..
+     0x000006CC,  // ......**.**..**.
+     0x00000CCC,  // .....**..**..**.
+     0x00000CCC,  // .....**..**..**.
+     0x000018CC,  // ....**...**..**.
+     0x00001878,  // ....**....****..
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+  },
+  {             // 38
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000780,  // ...****......
+     0x00000FC0,  // ..******.....
+     0x00000CC0,  // ..**..**.....
+     0x00000CC0,  // ..**..**.....
+     0x00000780,  // ...****......
+     0x00000F80,  // ..*****......
+     0x00001DD8,  // .***.***.**..
+     0x000018D8,  // .**...**.**..
+     0x00001878,  // .**....****..
+     0x00001870,  // .**....***...
+     0x00001CF8,  // .***..*****..
+     0x00000FDC,  // ..******.***.
+     0x0000078E,  // ...****...***
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 39
+     3, 22,
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000004,  // .*.
+     0x00000004,  // .*.
+     0x00000004,  // .*.
+     0x00000004,  // .*.
+     0x00000004,  // .*.
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+     0x00000000,  // ...
+  },
+  {             // 40
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000008,  // ...*..
+     0x00000018,  // ..**..
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000060,  // **....
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000018,  // ..**..
+     0x00000008,  // ...*..
+  },
+  {             // 41
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000020,  // .*....
+     0x00000030,  // .**...
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x0000000C,  // ...**.
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000030,  // .**...
+     0x00000020,  // .*....
+  },
+  {             // 42
+     7, 22,
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000010,  // ...*...
+     0x00000054,  // .*.*.*.
+     0x0000007C,  // .*****.
+     0x00000010,  // ...*...
+     0x0000007C,  // .*****.
+     0x00000054,  // .*.*.*.
+     0x00000010,  // ...*...
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+  },
+  {             // 43
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 44
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000008,  // ..*..
+     0x00000008,  // ..*..
+     0x00000010,  // .*...
+     0x00000000,  // .....
+  },
+  {             // 45
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x0000007C,  // *****. added by hand to avoid flickering!!!
+     0x0000007C,  // *****.
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 46
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 47
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 48
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x00000198,  // ..**..**..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x000001F8,  // ..******..
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 49
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000030,  // .....**...
+     0x000001F0,  // ..*****...
+     0x000001F0,  // ..*****...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 50
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000003F8,  // .*******..
+     0x0000030C,  // .**....**.
+     0x0000000C,  // .......**.
+     0x0000001C,  // ......***.
+     0x00000038,  // .....***..
+     0x00000070,  // ....***...
+     0x000000E0,  // ...***....
+     0x000001C0,  // ..***.....
+     0x00000380,  // .***......
+     0x00000300,  // .**.......
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 51
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F8,  // ...*****..
+     0x000001FC,  // ..*******.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000018,  // ......**..
+     0x00000070,  // ....***...
+     0x00000078,  // ....****..
+     0x0000001C,  // ......***.
+     0x0000000C,  // .......**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000001F8,  // ..******..
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 52
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000018,  // ......**..
+     0x00000038,  // .....***..
+     0x00000078,  // ....****..
+     0x000000D8,  // ...**.**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000318,  // .**...**..
+     0x00000618,  // **....**..
+     0x000007FC,  // *********.
+     0x000007FC,  // *********.
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 53
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000003F8,  // .*******..
+     0x000003F8,  // .*******..
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x000003F0,  // .******...
+     0x000003F8,  // .*******..
+     0x0000031C,  // .**...***.
+     0x0000000C,  // .......**.
+     0x0000000C,  // .......**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003F8,  // .*******..
+     0x000001F0,  // ..*****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 54
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001FC,  // ..*******.
+     0x0000018C,  // ..**...**.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000370,  // .**.***...
+     0x000003F8,  // .*******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000038C,  // .***...**.
+     0x000001F8,  // ..******..
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 55
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x0000000C,  // .......**.
+     0x00000018,  // ......**..
+     0x00000030,  // .....**...
+     0x00000030,  // .....**...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000000C0,  // ...**.....
+     0x000000C0,  // ...**.....
+     0x00000180,  // ..**......
+     0x00000180,  // ..**......
+     0x00000180,  // ..**......
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 56
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000039C,  // .***..***.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x000001F8,  // ..******..
+     0x0000039C,  // .***..***.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000039C,  // .***..***.
+     0x000001F8,  // ..******..
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 57
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000031C,  // .**...***.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000001FC,  // ..*******.
+     0x000000EC,  // ...***.**.
+     0x0000000C,  // .......**.
+     0x0000000C,  // .......**.
+     0x00000318,  // .**...**..
+     0x000003F8,  // .*******..
+     0x000001F0,  // ..*****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 58
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 59
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000008,  // ..*..
+     0x00000008,  // ..*..
+     0x00000010,  // .*...
+     0x00000000,  // .....
+  },
+  {             // 60
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000000C,  // .......**.
+     0x0000003C,  // .....****.
+     0x000000F0,  // ...****...
+     0x000001C0,  // ..***.....
+     0x00000300,  // .**.......
+     0x000001C0,  // ..***.....
+     0x000000F0,  // ...****...
+     0x0000003C,  // .....****.
+     0x0000000C,  // .......**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 61
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000003F8,  // ..*******..
+     0x000003F8,  // ..*******..
+     0x00000000,  // ...........
+     0x000003F8,  // ..*******..
+     0x000003F8,  // ..*******..
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 62
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000300,  // .**.......
+     0x000003C0,  // .****.....
+     0x000000F0,  // ...****...
+     0x00000038,  // .....***..
+     0x0000000C,  // .......**.
+     0x00000038,  // .....***..
+     0x000000F0,  // ...****...
+     0x000003C0,  // .****.....
+     0x00000300,  // .**.......
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 63
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000001F0,  // ..*****...
+     0x000003F8,  // .*******..
+     0x00000318,  // .**...**..
+     0x00000318,  // .**...**..
+     0x00000038,  // .....***..
+     0x00000070,  // ....***...
+     0x000000E0,  // ...***....
+     0x000000C0,  // ...**.....
+     0x000000C0,  // ...**.....
+     0x000000C0,  // ...**.....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000C0,  // ...**.....
+     0x000000C0,  // ...**.....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 64
+     18, 22,
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000FC0,  // .......******.....
+     0x00003FF0,  // .....**********...
+     0x00007038,  // ....***......***..
+     0x0000C018,  // ...**.........**..
+     0x00018F4C,  // ..**...****.*..**.
+     0x00019DCC,  // ..**..***.***..**.
+     0x000318CC,  // .**...**...**..**.
+     0x0003318C,  // .**..**...**...**.
+     0x00033198,  // .**..**...**..**..
+     0x00033198,  // .**..**...**..**..
+     0x00033330,  // .**..**..**..**...
+     0x00033FE0,  // .**..*********....
+     0x00019DC0,  // ..**..***.***.....
+     0x0001C000,  // ..***.............
+     0x0000E000,  // ...***............
+     0x00007FC0,  // ....*********.....
+     0x00001F80,  // ......******......
+     0x00000000,  // ..................
+  },
+  {             // 65
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 66
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00001FE0,  // .********....
+     0x00001FF0,  // .*********...
+     0x00001838,  // .**.....***..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x00001830,  // .**.....**...
+     0x00001FF0,  // .*********...
+     0x00001FF8,  // .**********..
+     0x0000181C,  // .**......***.
+     0x0000180C,  // .**.......**.
+     0x0000180C,  // .**.......**.
+     0x0000181C,  // .**......***.
+     0x00001FF8,  // .**********..
+     0x00001FF0,  // .*********...
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 67
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x000003E0,  // .....*****....
+     0x00000FF8,  // ...*********..
+     0x00001C1C,  // ..***.....***.
+     0x0000180C,  // ..**.......**.
+     0x00003800,  // .***..........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003800,  // .***..........
+     0x0000180C,  // ..**.......**.
+     0x00001C1C,  // ..***.....***.
+     0x00000FF8,  // ...*********..
+     0x000003E0,  // .....*****....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 68
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003FE0,  // .*********....
+     0x00003FF0,  // .**********...
+     0x00003038,  // .**......***..
+     0x00003018,  // .**.......**..
+     0x0000300C,  // .**........**.
+     0x0000300C,  // .**........**.
+     0x0000300C,  // .**........**.
+     0x0000300C,  // .**........**.
+     0x0000300C,  // .**........**.
+     0x0000300C,  // .**........**.
+     0x00003018,  // .**.......**..
+     0x00003038,  // .**......***..
+     0x00003FF0,  // .**********...
+     0x00003FE0,  // .*********....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 69
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FF8,  // ..*********..
+     0x00000FF8,  // ..*********..
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 70
+     12, 22,
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x000007FC,  // ..*********.
+     0x000007FC,  // ..*********.
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x000007F8,  // ..********..
+     0x000007F8,  // ..********..
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000600,  // ..**........
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+  },
+  {             // 71
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x000007E0,  // .....******....
+     0x00001FF8,  // ...**********..
+     0x0000381C,  // ..***......***.
+     0x0000300C,  // ..**........**.
+     0x0000700C,  // .***........**.
+     0x00006000,  // .**............
+     0x00006000,  // .**............
+     0x0000607C,  // .**......*****.
+     0x0000607C,  // .**......*****.
+     0x0000700C,  // .***........**.
+     0x0000300C,  // ..**........**.
+     0x0000381C,  // ..***......***.
+     0x00001FFC,  // ...***********.
+     0x000007EC,  // .....******.**.
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 72
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003FF8,  // .***********..
+     0x00003FF8,  // .***********..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 73
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 74
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000018,  // ......**..
+     0x00000618,  // **....**..
+     0x00000618,  // **....**..
+     0x00000738,  // ***..***..
+     0x000003F0,  // .******...
+     0x000001E0,  // ..****....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 75
+     13, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x0000181C,  // ..**......***.
+     0x00001838,  // ..**.....***..
+     0x00001870,  // ..**....***...
+     0x000018E0,  // ..**...***....
+     0x000019C0,  // ..**..***.....
+     0x00001B80,  // ..**.***......
+     0x00001F00,  // ..*****.......
+     0x00001F80,  // ..******......
+     0x000019C0,  // ..**..***.....
+     0x000018E0,  // ..**...***....
+     0x00001870,  // ..**....***...
+     0x00001838,  // ..**.....***..
+     0x0000181C,  // ..**......***.
+     0x0000180E,  // ..**.......***
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 76
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x000007FC,  // .*********.
+     0x000007FC,  // .*********.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 77
+     16, 22,
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x0000C00C,  // .**..........**.
+     0x0000C00C,  // .**..........**.
+     0x0000E01C,  // .***........***.
+     0x0000E01C,  // .***........***.
+     0x0000F03C,  // .****......****.
+     0x0000F03C,  // .****......****.
+     0x0000D86C,  // .**.**....**.**.
+     0x0000D86C,  // .**.**....**.**.
+     0x0000CCCC,  // .**..**..**..**.
+     0x0000CCCC,  // .**..**..**..**.
+     0x0000C48C,  // .**...*..*...**.
+     0x0000C78C,  // .**...****...**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+  },
+  {             // 78
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003818,  // .***......**..
+     0x00003C18,  // .****.....**..
+     0x00003C18,  // .****.....**..
+     0x00003618,  // .**.**....**..
+     0x00003318,  // .**..**...**..
+     0x00003318,  // .**..**...**..
+     0x00003198,  // .**...**..**..
+     0x00003198,  // .**...**..**..
+     0x000030D8,  // .**....**.**..
+     0x00003078,  // .**.....****..
+     0x00003078,  // .**.....****..
+     0x00003038,  // .**......***..
+     0x00003018,  // .**.......**..
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 79
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 80
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000FF0,  // ..********...
+     0x00000FF8,  // ..*********..
+     0x00000C1C,  // ..**.....***.
+     0x00000C0C,  // ..**......**.
+     0x00000C0C,  // ..**......**.
+     0x00000C1C,  // ..**.....***.
+     0x00000FF8,  // ..*********..
+     0x00000FF0,  // ..********...
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 81
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x000070DC,  // .***....**.***.
+     0x000030D8,  // ..**....**.**..
+     0x00003878,  // ..***....****..
+     0x00001FF0,  // ...*********...
+     0x000007D8,  // .....*****.**..
+     0x00000018,  // ...........**..
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 82
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003FE0,  // .*********....
+     0x00003FF0,  // .**********...
+     0x00003038,  // .**......***..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003038,  // .**......***..
+     0x00003FF0,  // .**********...
+     0x00003FE0,  // .*********....
+     0x00003030,  // .**......**...
+     0x00003030,  // .**......**...
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 83
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x000003C0,  // ....****.....
+     0x00000FF0,  // ..********...
+     0x00001C38,  // .***....***..
+     0x00001818,  // .**......**..
+     0x00001C00,  // .***.........
+     0x00000F80,  // ..*****......
+     0x000003E0,  // ....*****....
+     0x00000070,  // .......***...
+     0x00000038,  // ........***..
+     0x00000018,  // .........**..
+     0x00001818,  // .**......**..
+     0x00001C38,  // .***....***..
+     0x00000FF0,  // ..********...
+     0x000007E0,  // ...******....
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 84
+     12, 22,
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000FFC,  // .**********.
+     0x00000FFC,  // .**********.
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x000000C0,  // .....**.....
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+  },
+  {             // 85
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00001830,  // ..**.....**...
+     0x00001FF0,  // ..*********...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 86
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 87
+     18, 22,
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x0003060C,  // .**.....**.....**.
+     0x0003060C,  // .**.....**.....**.
+     0x0003060C,  // .**.....**.....**.
+     0x00030F0C,  // .**....****....**.
+     0x00018F18,  // ..**...****...**..
+     0x00018918,  // ..**...*..*...**..
+     0x00019998,  // ..**..**..**..**..
+     0x00019998,  // ..**..**..**..**..
+     0x0000D9B0,  // ...**.**..**.**...
+     0x0000D9B0,  // ...**.**..**.**...
+     0x0000D0B0,  // ...**.*....*.**...
+     0x000070E0,  // ....***....***....
+     0x00006060,  // ....**......**....
+     0x00006060,  // ....**......**....
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+  },
+  {             // 88
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x0000180C,  // .**.......**.
+     0x0000180C,  // .**.......**.
+     0x00000C18,  // ..**.....**..
+     0x00000E38,  // ..***...***..
+     0x00000630,  // ...**...**...
+     0x00000360,  // ....**.**....
+     0x000001C0,  // .....***.....
+     0x000001C0,  // .....***.....
+     0x00000360,  // ....**.**....
+     0x00000630,  // ...**...**...
+     0x00000E38,  // ..***...***..
+     0x00000C18,  // ..**.....**..
+     0x0000180C,  // .**.......**.
+     0x0000180C,  // .**.......**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 89
+     13, 22,
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x00000C30,  // ..**....**...
+     0x00000E70,  // ..***..***...
+     0x00000660,  // ...**..**....
+     0x000003C0,  // ....****.....
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 90
+     12, 22,
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000FFC,  // .**********.
+     0x00000FFC,  // .**********.
+     0x0000000C,  // .........**.
+     0x00000018,  // ........**..
+     0x00000030,  // .......**...
+     0x00000060,  // ......**....
+     0x000000C0,  // .....**.....
+     0x000001C0,  // ....***.....
+     0x00000180,  // ....**......
+     0x00000300,  // ...**.......
+     0x00000600,  // ..**........
+     0x00000C00,  // .**.........
+     0x00000FFC,  // .**********.
+     0x00000FFC,  // .**********.
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+  },
+  {             // 91
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x0000003C,  // ****.
+     0x0000003C,  // ****.
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x0000003C,  // ****.
+     0x0000003C,  // ****.
+  },
+  {             // 92
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000030,  // **...
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x00000006,  // ...**
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 93
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x0000003C,  // ****.
+     0x0000003C,  // ****.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000003C,  // ****.
+     0x0000003C,  // ****.
+  },
+  {             // 94
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000020,  // ....*....
+     0x00000070,  // ...***...
+     0x000000D8,  // ..**.**..
+     0x000000D8,  // ..**.**..
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 95
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000FFE,  // ***********
+     0x00000FFE,  // ***********
+  },
+  {             // 96
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000018,  // **..
+     0x0000000C,  // .**.
+     0x00000006,  // ..**
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 97
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 98
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x000006F0,  // .**.****...
+     0x000007F8,  // .********..
+     0x00000718,  // .***...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000718,  // .***...**..
+     0x000007F8,  // .********..
+     0x000006F0,  // .**.****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 99
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F8,  // ...*****..
+     0x000001FC,  // ..*******.
+     0x0000018C,  // ..**...**.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000018C,  // ..**...**.
+     0x000001FC,  // ..*******.
+     0x000000F8,  // ...*****..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 100
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x000001EC,  // ...****.**.
+     0x000003FC,  // ..********.
+     0x0000031C,  // ..**...***.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000031C,  // ..**...***.
+     0x000003FC,  // ..********.
+     0x000001EC,  // ...****.**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 101
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000038C,  // .***...**.
+     0x000001FC,  // ..*******.
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 102
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x0000000E,  // ...***
+     0x0000001E,  // ..****
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000007E,  // ******
+     0x0000007E,  // ******
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 103
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000001EC,  // ...****.**.
+     0x000003FC,  // ..********.
+     0x0000030C,  // ..**....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000031C,  // ..**...***.
+     0x000003FC,  // ..********.
+     0x000001EC,  // ...****.**.
+     0x0000000C,  // ........**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000000E0,  // ....***....
+  },
+  {             // 104
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000378,  // .**.****..
+     0x000003FC,  // .********.
+     0x0000038C,  // .***...**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 105
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 106
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000000C,  // ..**.
+     0x0000003C,  // ****.
+     0x00000038,  // ***..
+  },
+  {             // 107
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000180,  // .**......
+     0x00000180,  // .**......
+     0x00000180,  // .**......
+     0x00000180,  // .**......
+     0x0000018C,  // .**...**.
+     0x00000198,  // .**..**..
+     0x000001B0,  // .**.**...
+     0x000001E0,  // .****....
+     0x000001F0,  // .*****...
+     0x000001B0,  // .**.**...
+     0x00000198,  // .**..**..
+     0x0000019C,  // .**..***.
+     0x0000018C,  // .**...**.
+     0x0000018E,  // .**...***
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 108
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 109
+     16, 22,
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x0000DE78,  // .**.****..****..
+     0x0000FFFC,  // .**************.
+     0x0000E38C,  // .***...***...**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x0000C30C,  // .**....**....**.
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+     0x00000000,  // ................
+  },
+  {             // 110
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000378,  // .**.****..
+     0x000003FC,  // .********.
+     0x0000038C,  // .***...**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 111
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 112
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000006F0,  // .**.****...
+     0x000007F8,  // .********..
+     0x00000718,  // .***...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000718,  // .***...**..
+     0x000007F8,  // .********..
+     0x000006F0,  // .**.****...
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+  },
+  {             // 113
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000001EC,  // ...****.**.
+     0x000003FC,  // ..********.
+     0x0000031C,  // ..**...***.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000031C,  // ..**...***.
+     0x000003FC,  // ..********.
+     0x000001EC,  // ...****.**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+  },
+  {             // 114
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000036,  // .**.**
+     0x00000036,  // .**.**
+     0x00000038,  // .***..
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000030,  // .**...
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 115
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000078,  // ...****..
+     0x000000FC,  // ..******.
+     0x0000018C,  // .**...**.
+     0x00000180,  // .**......
+     0x000001F8,  // .******..
+     0x0000007C,  // ...*****.
+     0x0000000C,  // ......**.
+     0x0000018C,  // .**...**.
+     0x000001F8,  // .******..
+     0x000000F0,  // ..****...
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 116
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000007E,  // ******
+     0x0000007E,  // ******
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000001E,  // ..****
+     0x0000000E,  // ...***
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 117
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003FC,  // .********.
+     0x000001EC,  // ..****.**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 118
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000090,  // ...*..*...
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 119
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x0000318C,  // .**...**...**.
+     0x0000318C,  // .**...**...**.
+     0x0000318C,  // .**...**...**.
+     0x00001998,  // ..**..**..**..
+     0x00001998,  // ..**..**..**..
+     0x00001A58,  // ..**.*..*.**..
+     0x00000A50,  // ...*.*..*.*...
+     0x00000E70,  // ...***..***...
+     0x00000660,  // ....**..**....
+     0x00000660,  // ....**..**....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 120
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000039C,  // .***..***.
+     0x00000198,  // ..**..**..
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000000F0,  // ...****...
+     0x00000198,  // ..**..**..
+     0x0000039C,  // .***..***.
+     0x0000030C,  // .**....**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 121
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000090,  // ...*..*...
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000001C0,  // ..***.....
+     0x000001C0,  // ..***.....
+  },
+  {             // 122
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x000001FC,  // .*******.
+     0x000001FC,  // .*******.
+     0x0000000C,  // ......**.
+     0x00000018,  // .....**..
+     0x00000030,  // ....**...
+     0x00000060,  // ...**....
+     0x000000C0,  // ..**.....
+     0x00000180,  // .**......
+     0x000001FC,  // .*******.
+     0x000001FC,  // .*******.
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 123
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x0000000C,  // ....**.
+     0x00000018,  // ...**..
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000060,  // .**....
+     0x000000C0,  // **.....
+     0x00000060,  // .**....
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000030,  // ..**...
+     0x00000018,  // ...**..
+     0x0000000C,  // ....**.
+  },
+  {             // 124
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+  },
+  {             // 125
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000060,  // **....
+     0x00000030,  // .**...
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000000C,  // ...**.
+     0x00000006,  // ....**
+     0x0000000C,  // ...**.
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000030,  // .**...
+     0x00000060,  // **....
+  },
+  {             // 126
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000001CC,  // ..***..**.
+     0x000003FC,  // .********.
+     0x00000338,  // .**..***..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 127
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 128
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 129
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 130
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 131
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 132
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 133
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 134
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 135
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 136
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 137
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 138
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 139
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 140
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 141
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 142
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 143
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 144
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 145
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 146
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 147
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 148
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 149
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 150
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 151
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 152
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 153
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 154
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 155
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 156
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 157
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 158
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 159
+     0, 22,
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+     0x00000000,  // 
+  },
+  {             // 160
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 161
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000008,  // ...*..
+     0x00000008,  // ...*..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+  },
+  {             // 162
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000010,  // ......*...
+     0x00000010,  // ......*...
+     0x000000F8,  // ...*****..
+     0x000001FC,  // ..*******.
+     0x000001AC,  // ..**.*.**.
+     0x00000320,  // .**..*....
+     0x00000320,  // .**..*....
+     0x00000320,  // .**..*....
+     0x00000320,  // .**..*....
+     0x000001AC,  // ..**.*.**.
+     0x000001FC,  // ..*******.
+     0x000000F8,  // ...*****..
+     0x00000040,  // ....*.....
+     0x00000040,  // ....*.....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 163
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000300,  // .**.......
+     0x00000180,  // ..**......
+     0x000003F0,  // .******...
+     0x000000C0,  // ...**.....
+     0x000000C0,  // ...**.....
+     0x00000180,  // ..**......
+     0x00000304,  // .**.....*.
+     0x000007FC,  // *********.
+     0x000006F8,  // **.*****..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 164
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x000003FC,  // .********.
+     0x0000030C,  // .**....**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 165
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x000000F0,  // ...****...
+     0x000003FC,  // .********.
+     0x00000060,  // ....**....
+     0x000003FC,  // .********.
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 166
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+  },
+  {             // 167
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003C0,  // .****.....
+     0x000001F0,  // ..*****...
+     0x000001B8,  // ..**.***..
+     0x0000031C,  // .**...***.
+     0x0000030C,  // .**....**.
+     0x0000038C,  // .***...**.
+     0x000001CC,  // ..***..**.
+     0x000000F8,  // ...*****..
+     0x00000038,  // .....***..
+     0x0000001C,  // ......***.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000001F8,  // ..******..
+     0x000000F0,  // ...****...
+  },
+  {             // 168
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x0000006C,  // **.**.
+     0x0000006C,  // **.**.
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 169
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001830,  // ...**.....**...
+     0x00002008,  // ..*.........*..
+     0x00002388,  // ..*...***...*..
+     0x00004444,  // .*...*...*...*.
+     0x00004844,  // .*..*....*...*.
+     0x00004804,  // .*..*........*.
+     0x00004804,  // .*..*........*.
+     0x00004804,  // .*..*........*.
+     0x00004444,  // .*...*...*...*.
+     0x00002388,  // ..*...***...*..
+     0x00002008,  // ..*.........*..
+     0x00001830,  // ...**.....**...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 170
+     7, 22,
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000038,  // ..***..
+     0x0000004C,  // .*..**.
+     0x0000001C,  // ...***.
+     0x00000024,  // ..*..*.
+     0x0000006C,  // .**.**.
+     0x00000034,  // ..**.*.
+     0x00000000,  // .......
+     0x0000007C,  // .*****.
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+  },
+  {             // 171
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x0000006C,  // ...**.**.
+     0x000000D8,  // ..**.**..
+     0x000001B0,  // .**.**...
+     0x000001B0,  // .**.**...
+     0x000000D8,  // ..**.**..
+     0x0000006C,  // ...**.**.
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 172
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000007FC,  // .*********.
+     0x000007FC,  // .*********.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x0000000C,  // ........**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 173
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x0000007C,  // *****.
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 174
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x000007C0,  // ....*****.....
+     0x00001830,  // ..**.....**...
+     0x00002008,  // .*.........*..
+     0x000027C8,  // .*..*****..*..
+     0x00004424,  // *...*....*..*.
+     0x00004424,  // *...*....*..*.
+     0x00004424,  // *...*....*..*.
+     0x000047C4,  // *...*****...*.
+     0x00004484,  // *...*..*....*.
+     0x00004444,  // *...*...*...*.
+     0x00002428,  // .*..*....*.*..
+     0x00002008,  // .*.........*..
+     0x00001830,  // ..**.....**...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 175
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x0000003E,  // *****
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 176
+     7, 22,
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000038,  // ..***..
+     0x0000006C,  // .**.**.
+     0x00000044,  // .*...*.
+     0x0000006C,  // .**.**.
+     0x00000038,  // ..***..
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+  },
+  {             // 177
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 178
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000038,  // .***..
+     0x0000007C,  // *****.
+     0x0000004C,  // *..**.
+     0x0000000C,  // ...**.
+     0x00000018,  // ..**..
+     0x00000030,  // .**...
+     0x0000007C,  // *****.
+     0x0000007C,  // *****.
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 179
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000038,  // .***..
+     0x0000007C,  // *****.
+     0x0000004C,  // *..**.
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x0000004C,  // *..**.
+     0x0000007C,  // *****.
+     0x00000038,  // .***..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 180
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000006,  // ..**
+     0x0000000C,  // .**.
+     0x00000018,  // **..
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 181
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000039C,  // .***..***.
+     0x000003FC,  // .********.
+     0x0000036C,  // .**.**.**.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+  },
+  {             // 182
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000FC,  // ...******.
+     0x000001C8,  // ..***..*..
+     0x000003C8,  // .****..*..
+     0x000003C8,  // .****..*..
+     0x000003C8,  // .****..*..
+     0x000003C8,  // .****..*..
+     0x000003C8,  // .****..*..
+     0x000001C8,  // ..***..*..
+     0x000000C8,  // ...**..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+     0x00000048,  // ....*..*..
+  },
+  {             // 183
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 184
+     5, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x0000001C,  // .***.
+     0x00000006,  // ...**
+     0x00000036,  // **.**
+     0x0000003C,  // ****.
+  },
+  {             // 185
+     6, 22,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000078,  // ****..
+     0x00000078,  // ****..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 186
+     7, 22,
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000038,  // ..***..
+     0x0000006C,  // .**.**.
+     0x00000044,  // .*...*.
+     0x00000044,  // .*...*.
+     0x0000006C,  // .**.**.
+     0x00000038,  // ..***..
+     0x00000000,  // .......
+     0x0000007C,  // .*****.
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+     0x00000000,  // .......
+  },
+  {             // 187
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x000001B0,  // .**.**...
+     0x000000D8,  // ..**.**..
+     0x0000006C,  // ...**.**.
+     0x0000006C,  // ...**.**.
+     0x000000D8,  // ..**.**..
+     0x000001B0,  // .**.**...
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 188
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00003030,  // ..**......**...
+     0x0000F030,  // ****......**...
+     0x0000F060,  // ****.....**....
+     0x000030C0,  // ..**....**.....
+     0x000030C0,  // ..**....**.....
+     0x00003188,  // ..**...**...*..
+     0x00003118,  // ..**...*...**..
+     0x00003338,  // ..**..**..***..
+     0x00000678,  // .....**..****..
+     0x000006D8,  // .....**.**.**..
+     0x00000CFC,  // ....**..******.
+     0x00001818,  // ...**......**..
+     0x00001818,  // ...**......**..
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 189
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00003030,  // ..**......**...
+     0x0000F030,  // ****......**...
+     0x0000F060,  // ****.....**....
+     0x000030C0,  // ..**....**.....
+     0x000030C0,  // ..**....**.....
+     0x000031B8,  // ..**...**.***..
+     0x0000317C,  // ..**...*.*****.
+     0x0000334C,  // ..**..**.*..**.
+     0x0000060C,  // .....**.....**.
+     0x00000618,  // .....**....**..
+     0x00000C30,  // ....**....**...
+     0x0000187C,  // ...**....*****.
+     0x0000187C,  // ...**....*****.
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 190
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00007030,  // .***......**...
+     0x0000F830,  // *****.....**...
+     0x00009860,  // *..**....**....
+     0x000030C0,  // ..**....**.....
+     0x000030C0,  // ..**....**.....
+     0x00009988,  // *..**..**...*..
+     0x0000F918,  // *****..*...**..
+     0x00007338,  // .***..**..***..
+     0x00000678,  // .....**..****..
+     0x000006D8,  // .....**.**.**..
+     0x00000CFC,  // ....**..******.
+     0x00001818,  // ...**......**..
+     0x00001818,  // ...**......**..
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 191
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000000E0,  // ...***....
+     0x000001C0,  // ..***.....
+     0x00000380,  // .***......
+     0x00000318,  // .**...**..
+     0x00000318,  // .**...**..
+     0x000003F8,  // .*******..
+     0x000001F0,  // ..*****...
+  },
+  {             // 192
+     13, 22,
+     0x00000600,  // ...**........
+     0x00000300,  // ....**.......
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 193
+     13, 22,
+     0x00000060,  // .......**....
+     0x000000C0,  // ......**.....
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 194
+     13, 22,
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 195
+     13, 22,
+     0x00000320,  // ....**..*....
+     0x000005A0,  // ...*.**.*....
+     0x000004C0,  // ...*..**.....
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 196
+     13, 22,
+     0x00000000,  // .............
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 197
+     13, 22,
+     0x00000000,  // .............
+     0x00000180,  // .....**......
+     0x00000240,  // ....*..*.....
+     0x00000240,  // ....*..*.....
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x000003C0,  // ....****.....
+     0x000003C0,  // ....****.....
+     0x00000660,  // ...**..**....
+     0x00000660,  // ...**..**....
+     0x00000C30,  // ..**....**...
+     0x00000C30,  // ..**....**...
+     0x00000FF0,  // ..********...
+     0x00001FF8,  // .**********..
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 198
+     18, 22,
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00001FFC,  // ......***********.
+     0x00001FFC,  // ......***********.
+     0x00003600,  // .....**.**........
+     0x00003600,  // .....**.**........
+     0x00006600,  // ....**..**........
+     0x00006600,  // ....**..**........
+     0x0000C7F8,  // ...**...********..
+     0x0000C7F8,  // ...**...********..
+     0x0000FE00,  // ...*******........
+     0x0001FE00,  // ..********........
+     0x00018600,  // ..**....**........
+     0x00018600,  // ..**....**........
+     0x000307FC,  // .**.....*********.
+     0x000307FC,  // .**.....*********.
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+     0x00000000,  // ..................
+  },
+  {             // 199
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x000003E0,  // .....*****....
+     0x00000FF8,  // ...*********..
+     0x00001C1C,  // ..***.....***.
+     0x0000180C,  // ..**.......**.
+     0x00003800,  // .***..........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003000,  // .**...........
+     0x00003800,  // .***..........
+     0x0000180C,  // ..**.......**.
+     0x00001C1C,  // ..***.....***.
+     0x00000FF8,  // ...*********..
+     0x000003E0,  // .....*****....
+     0x00000180,  // ......**......
+     0x000000C0,  // .......**.....
+     0x000006C0,  // ....**.**.....
+     0x00000780,  // ....****......
+  },
+  {             // 200
+     13, 22,
+     0x00000300,  // ....**.......
+     0x00000180,  // .....**......
+     0x000000C0,  // ......**.....
+     0x00000000,  // .............
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FF8,  // ..*********..
+     0x00000FF8,  // ..*********..
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 201
+     13, 22,
+     0x00000030,  // ........**...
+     0x00000060,  // .......**....
+     0x000000C0,  // ......**.....
+     0x00000000,  // .............
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FF8,  // ..*********..
+     0x00000FF8,  // ..*********..
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 202
+     13, 22,
+     0x000000C0,  // ......**.....
+     0x000001E0,  // .....****....
+     0x00000330,  // ....**..**...
+     0x00000000,  // .............
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FF8,  // ..*********..
+     0x00000FF8,  // ..*********..
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 203
+     13, 22,
+     0x00000000,  // .............
+     0x00000330,  // ....**..**...
+     0x00000330,  // ....**..**...
+     0x00000000,  // .............
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FF8,  // ..*********..
+     0x00000FF8,  // ..*********..
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000C00,  // ..**.........
+     0x00000FFC,  // ..**********.
+     0x00000FFC,  // ..**********.
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 204
+     6, 22,
+     0x00000060,  // **....
+     0x00000030,  // .**...
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 205
+     6, 22,
+     0x00000006,  // ....**
+     0x0000000C,  // ...**.
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 206
+     6, 22,
+     0x00000018,  // ..**..
+     0x0000003C,  // .****.
+     0x00000042,  // *....*
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 207
+     6, 22,
+     0x00000000,  // ......
+     0x00000066,  // **..**
+     0x00000066,  // **..**
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 208
+     14, 22,
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00003FE0,  // ..*********....
+     0x00003FF0,  // ..**********...
+     0x00003038,  // ..**......***..
+     0x00003018,  // ..**.......**..
+     0x0000300C,  // ..**........**.
+     0x0000300C,  // ..**........**.
+     0x0000FE0C,  // *******.....**.
+     0x0000FE0C,  // *******.....**.
+     0x0000300C,  // ..**........**.
+     0x0000300C,  // ..**........**.
+     0x00003018,  // ..**.......**..
+     0x00003038,  // ..**......***..
+     0x00003FF0,  // ..**********...
+     0x00003FE0,  // ..*********....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 209
+     14, 22,
+     0x00000320,  // .....**..*....
+     0x000005A0,  // ....*.**.*....
+     0x000004C0,  // ....*..**.....
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003818,  // .***......**..
+     0x00003C18,  // .****.....**..
+     0x00003C18,  // .****.....**..
+     0x00003618,  // .**.**....**..
+     0x00003318,  // .**..**...**..
+     0x00003318,  // .**..**...**..
+     0x00003198,  // .**...**..**..
+     0x00003198,  // .**...**..**..
+     0x000030D8,  // .**....**.**..
+     0x00003078,  // .**.....****..
+     0x00003078,  // .**.....****..
+     0x00003038,  // .**......***..
+     0x00003018,  // .**.......**..
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 210
+     15, 22,
+     0x00000C00,  // ....**.........
+     0x00000600,  // .....**........
+     0x00000300,  // ......**.......
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 211
+     15, 22,
+     0x000000C0,  // ........**.....
+     0x00000180,  // .......**......
+     0x00000300,  // ......**.......
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 212
+     15, 22,
+     0x00000180,  // .......**......
+     0x000003C0,  // ......****.....
+     0x00000660,  // .....**..**....
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 213
+     15, 22,
+     0x00000320,  // ......**..*....
+     0x000005A0,  // .....*.**.*....
+     0x000004C0,  // .....*..**.....
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 214
+     15, 22,
+     0x00000000,  // ...............
+     0x00000660,  // .....**..**....
+     0x00000660,  // .....**..**....
+     0x00000000,  // ...............
+     0x000007C0,  // .....*****.....
+     0x00001FF0,  // ...*********...
+     0x00003838,  // ..***.....***..
+     0x00003018,  // ..**.......**..
+     0x0000701C,  // .***.......***.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000600C,  // .**.........**.
+     0x0000701C,  // .***.......***.
+     0x00003018,  // ..**.......**..
+     0x00003838,  // ..***.....***..
+     0x00001FF0,  // ...*********...
+     0x000007C0,  // .....*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 215
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000606,  // **......**
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x000000F0,  // ...****...
+     0x00000198,  // ..**..**..
+     0x0000030C,  // .**....**.
+     0x00000606,  // **......**
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 216
+     15, 22,
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x000007CC,  // .....*****..**.
+     0x00001FF8,  // ...**********..
+     0x00003830,  // ..***.....**...
+     0x00003078,  // ..**.....****..
+     0x000070DC,  // .***....**.***.
+     0x0000618C,  // .**....**...**.
+     0x0000630C,  // .**...**....**.
+     0x0000620C,  // .**...*.....**.
+     0x0000660C,  // .**..**.....**.
+     0x00006C1C,  // .**.**.....***.
+     0x00003818,  // ..***......**..
+     0x00003838,  // ..***.....***..
+     0x00006FF0,  // .**.********...
+     0x0000C7C0,  // **...*****.....
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+     0x00000000,  // ...............
+  },
+  {             // 217
+     14, 22,
+     0x00000600,  // ....**........
+     0x00000300,  // .....**.......
+     0x00000180,  // ......**......
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00001830,  // ..**.....**...
+     0x00001FF0,  // ..*********...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 218
+     14, 22,
+     0x000000C0,  // .......**.....
+     0x00000180,  // ......**......
+     0x00000300,  // .....**.......
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00001830,  // ..**.....**...
+     0x00001FF0,  // ..*********...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 219
+     14, 22,
+     0x00000180,  // ......**......
+     0x000003C0,  // .....****.....
+     0x00000660,  // ....**..**....
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00001830,  // ..**.....**...
+     0x00001FF0,  // ..*********...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 220
+     14, 22,
+     0x00000000,  // ..............
+     0x00000C60,  // ...**...**....
+     0x00000C60,  // ...**...**....
+     0x00000000,  // ..............
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00003018,  // .**.......**..
+     0x00001830,  // ..**.....**...
+     0x00001FF0,  // ..*********...
+     0x000007C0,  // ....*****.....
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+     0x00000000,  // ..............
+  },
+  {             // 221
+     13, 22,
+     0x00000060,  // .......**....
+     0x000000C0,  // ......**.....
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x0000300C,  // **........**.
+     0x0000300C,  // **........**.
+     0x00001818,  // .**......**..
+     0x00001818,  // .**......**..
+     0x00000C30,  // ..**....**...
+     0x00000E70,  // ..***..***...
+     0x00000660,  // ...**..**....
+     0x000003C0,  // ....****.....
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000180,  // .....**......
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+     0x00000000,  // .............
+  },
+  {             // 222
+     12, 22,
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000C00,  // .**.........
+     0x00000C00,  // .**.........
+     0x00000C00,  // .**.........
+     0x00000FF0,  // .********...
+     0x00000FF8,  // .*********..
+     0x00000C1C,  // .**.....***.
+     0x00000C0C,  // .**......**.
+     0x00000C0C,  // .**......**.
+     0x00000C1C,  // .**.....***.
+     0x00000FF8,  // .*********..
+     0x00000FF0,  // .********...
+     0x00000C00,  // .**.........
+     0x00000C00,  // .**.........
+     0x00000C00,  // .**.........
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+     0x00000000,  // ............
+  },
+  {             // 223
+     9, 22,
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000070,  // ...***...
+     0x000000F8,  // ..*****..
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x000001B8,  // .**.***..
+     0x000001B8,  // .**.***..
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x0000018C,  // .**...**.
+     0x000001BC,  // .**.****.
+     0x000001B8,  // .**.***..
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+     0x00000000,  // .........
+  },
+  {             // 224
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000180,  // ...**......
+     0x000000C0,  // ....**.....
+     0x00000060,  // .....**....
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 225
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000060,  // .....**....
+     0x000000C0,  // ....**.....
+     0x00000180,  // ...**......
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 226
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000000C0,  // ....**.....
+     0x000001E0,  // ...****....
+     0x00000330,  // ..**..**...
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 227
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000190,  // ...**..*...
+     0x000002D0,  // ..*.**.*...
+     0x00000260,  // ..*..**....
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 228
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000330,  // ..**..**...
+     0x00000330,  // ..**..**...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 229
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000000C0,  // ....**.....
+     0x00000120,  // ...*..*....
+     0x00000120,  // ...*..*....
+     0x000000C0,  // ....**.....
+     0x000003F0,  // ..******...
+     0x00000738,  // .***..***..
+     0x00000618,  // .**....**..
+     0x00000038,  // ......***..
+     0x000003F8,  // ..*******..
+     0x00000718,  // .***...**..
+     0x00000618,  // .**....**..
+     0x00000618,  // .**....**..
+     0x0000073C,  // .***..****.
+     0x000003CC,  // ..****..**.
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 230
+     17, 22,
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00007EF0,  // ...******.****...
+     0x0000E7F8,  // ..***..********..
+     0x0000C30C,  // ..**....**....**.
+     0x0000070C,  // .......***....**.
+     0x00007FFC,  // ...*************.
+     0x0000E300,  // ..***...**.......
+     0x0000C300,  // ..**....**.......
+     0x0000C38C,  // ..**....***...**.
+     0x0000E7FC,  // ..***..*********.
+     0x00007AF0,  // ...****.*.****...
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+     0x00000000,  // .................
+  },
+  {             // 231
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F8,  // ...*****..
+     0x000001FC,  // ..*******.
+     0x0000018C,  // ..**...**.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000018C,  // ..**...**.
+     0x000001FC,  // ..*******.
+     0x000000F8,  // ...*****..
+     0x00000060,  // ....**....
+     0x00000030,  // .....**...
+     0x000001B0,  // ..**.**...
+     0x000001E0,  // ..****....
+  },
+  {             // 232
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000C0,  // ...**.....
+     0x00000060,  // ....**....
+     0x00000030,  // .....**...
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000038C,  // .***...**.
+     0x000001FC,  // ..*******.
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 233
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000030,  // .....**...
+     0x00000060,  // ....**....
+     0x000000C0,  // ...**.....
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000038C,  // .***...**.
+     0x000001FC,  // ..*******.
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 234
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x000000F0,  // ...****...
+     0x00000198,  // ..**..**..
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000038C,  // .***...**.
+     0x000001FC,  // ..*******.
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 235
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000F0,  // ...****...
+     0x000001F8,  // ..******..
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x000003FC,  // .********.
+     0x00000300,  // .**.......
+     0x00000300,  // .**.......
+     0x0000038C,  // .***...**.
+     0x000001FC,  // ..*******.
+     0x000000F0,  // ...****...
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 236
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000018,  // **..
+     0x0000000C,  // .**.
+     0x00000006,  // ..**
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 237
+     4, 22,
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000006,  // ..**
+     0x0000000C,  // .**.
+     0x00000018,  // **..
+     0x00000000,  // ....
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x0000000C,  // .**.
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+     0x00000000,  // ....
+  },
+  {             // 238
+     4, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // ..**..
+     0x0000003C,  // .****.
+     0x00000066,  // **..**
+     0x00000000,  // ......
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000018,  // ..**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 239
+     4, 22,
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000036,  // **.**
+     0x00000036,  // **.**
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000018,  // .**..
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+     0x00000000,  // .....
+  },
+  {             // 240
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000300,  // ..**.......
+     0x000001B0,  // ...**.**...
+     0x000001C0,  // ...***.....
+     0x00000260,  // ..*..**....
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 241
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000C8,  // ...**..*..
+     0x00000168,  // ..*.**.*..
+     0x00000130,  // ..*..**...
+     0x00000000,  // ..........
+     0x00000378,  // .**.****..
+     0x000003FC,  // .********.
+     0x0000038C,  // .***...**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 242
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000180,  // ...**......
+     0x000000C0,  // ....**.....
+     0x00000060,  // .....**....
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 243
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000030,  // ......**...
+     0x00000060,  // .....**....
+     0x000000C0,  // ....**.....
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 244
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000000C0,  // ....**.....
+     0x000001E0,  // ...****....
+     0x00000330,  // ..**..**...
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 245
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000190,  // ...**..*...
+     0x000002D0,  // ..*.**.*...
+     0x00000260,  // ..*..**....
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 246
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000198,  // ...**..**..
+     0x00000198,  // ...**..**..
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000001F0,  // ...*****...
+     0x000003F8,  // ..*******..
+     0x00000318,  // ..**...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000318,  // ..**...**..
+     0x000003F8,  // ..*******..
+     0x000001F0,  // ...*****...
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 247
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x000003FC,  // .********.
+     0x000003FC,  // .********.
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 248
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x000000E6,  // ....***..**
+     0x000003FC,  // ..********.
+     0x00000318,  // ..**...**..
+     0x0000063C,  // .**...****.
+     0x0000066C,  // .**..**.**.
+     0x000006CC,  // .**.**..**.
+     0x0000078C,  // .****...**.
+     0x00000318,  // ..**...**..
+     0x000007F8,  // .********..
+     0x00000CE0,  // **..***....
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+  },
+  {             // 249
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x000000C0,  // ...**.....
+     0x00000060,  // ....**....
+     0x00000030,  // .....**...
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003FC,  // .********.
+     0x000001EC,  // ..****.**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 250
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000018,  // ......**..
+     0x00000030,  // .....**...
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003FC,  // .********.
+     0x000001EC,  // ..****.**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 251
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000060,  // ....**....
+     0x000000F0,  // ...****...
+     0x00000198,  // ..**..**..
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003FC,  // .********.
+     0x000001EC,  // ..****.**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 252
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000031C,  // .**...***.
+     0x000003FC,  // .********.
+     0x000001EC,  // ..****.**.
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+  },
+  {             // 253
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000018,  // ......**..
+     0x00000030,  // .....**...
+     0x00000060,  // ....**....
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000090,  // ...*..*...
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000001C0,  // ..***.....
+     0x000001C0,  // ..***.....
+  },
+  {             // 254
+     11, 22,
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000000,  // ...........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x000006F0,  // .**.****...
+     0x000007F8,  // .********..
+     0x00000718,  // .***...**..
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x0000060C,  // .**.....**.
+     0x00000718,  // .***...**..
+     0x000007F8,  // .********..
+     0x000006F0,  // .**.****...
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+     0x00000600,  // .**........
+  },
+  {             // 255
+     10, 22,
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000000,  // ..........
+     0x00000000,  // ..........
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x0000030C,  // .**....**.
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000198,  // ..**..**..
+     0x00000090,  // ...*..*...
+     0x000000F0,  // ...****...
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x00000060,  // ....**....
+     0x000001C0,  // ..***.....
+     0x000001C0,  // ..***.....
+  },
+  };
diff -Nur vdr.orig/fontsym.c vdr/fontsym.c
--- vdr.orig/fontsym.c	1970-01-01 01:00:00.000000000 +0100
+++ vdr/fontsym.c	2004-08-01 13:40:47.000000000 +0200
@@ -0,0 +1,1724 @@
+cFont::tPixelData FontSym[][29] = {
+  {             // 32
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 33
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x01ffdffc,  // ...###########.###########..
+     0x01bfdfec,  // ...##.########.########.##..
+     0x018fdf8c,  // ...##...######.######...##..
+     0x0183de0c,  // ...##.....####.####.....##..
+     0x0181dc0c,  // ...##......###.###......##..
+     0x0180d80c,  // ...##.......##.##.......##..
+     0x0180d80c,  // ...##.......##.##.......##..
+     0x0180d80c,  // ...##.......##.##.......##..
+     0x0180d80c,  // ...##.......##.##.......##..
+     0x0181dc0c,  // ...##......###.###......##..
+     0x0183de0c,  // ...##.....####.####.....##..
+     0x018fdf8c,  // ...##...######.######...##..
+     0x01bfdfec,  // ...##.########.########.##..
+     0x01ffdffc,  // ...###########.###########..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 34
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x0180000c,  // ...##...................##..
+     0x019fffcc,  // ...##..###############..##..
+     0x019fffcc,  // ...##..###############..##..
+     0x0180000c,  // ...##...................##..
+     0x019fffcc,  // ...##..###############..##..
+     0x019fffcc,  // ...##..###############..##..
+     0x0180000c,  // ...##...................##..
+     0x019fffcc,  // ...##..###############..##..
+     0x019fffcc,  // ...##..###############..##..
+     0x0180000c,  // ...##...................##..
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 35
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x0180000c,  // ...##...................##..
+     0x0180000c,  // ...##...................##..
+     0x0180078c,  // ...##............####...##..
+     0x01800ccc,  // ...##...........##..##..##..
+     0x01bff86c,  // ...##.###########....##.##..
+     0x01bff86c,  // ...##.###########....##.##..
+     0x019c0ccc,  // ...##..###......##..##..##..
+     0x019c078c,  // ...##..###.......####...##..
+     0x0180000c,  // ...##...................##..
+     0x0180000c,  // ...##...................##..
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 36
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x0180000c,  // ...##...................##..
+     0x0180000c,  // ...##...................##..
+     0x018f078c,  // ...##...####.....####...##..
+     0x01998ccc,  // ...##..##..##...##..##..##..
+     0x01b0d86c,  // ...##.##....##.##....##.##..
+     0x01998ccc,  // ...##..##..##...##..##..##..
+     0x018f078c,  // ...##...####.....####...##..
+     0x0180000c,  // ...##...................##..
+     0x0180000c,  // ...##...................##..
+     0x0180000c,  // ...##...................##..
+     0x01fffffc,  // ...#######################..
+     0x01fffffc,  // ...#######################..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 37
+      28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x01f8fcfc,  // ...######...######..######..
+     0x01fdfdfc,  // ...#######.#######.#######..
+     0x018d8180,  // ...##...##.##......##.......
+     0x018d8180,  // ...##...##.##......##.......
+     0x018d8180,  // ...##...##.##......##.......
+     0x018d8180,  // ...##...##.##......##.......
+     0x01f9f180,  // ...######..#####...##.......
+     0x01e1f180,  // ...####....#####...##.......
+     0x01b18180,  // ...##.##...##......##.......
+     0x01998180,  // ...##..##..##......##.......
+     0x018d8180,  // ...##...##.##......##.......
+     0x018d8180,  // ...##...##.##......##.......
+     0x018dfdfc,  // ...##...##.#######.#######..
+     0x018cfcfc,  // ...##...##..######..######..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 38
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00007c00,  // .............#####..........
+     0x00007fc0,  // .............#########......
+     0x00007ff0,  // .............###########....
+     0x000071f8,  // .............###...######...
+     0x00007078,  // .............###.....####...
+     0x00007070,  // .............###.....###....
+     0x00007060,  // .............###.....##.....
+     0x00007000,  // .............###............
+     0x00007000,  // .............###............
+     0x00007000,  // .............###............
+     0x00007000,  // .............###............
+     0x001ff000,  // .......#########............
+     0x00fff800,  // ....#############...........
+     0x01fffc00,  // ...###############..........
+     0x01fffc00,  // ...###############..........
+     0x00fff800,  // ....#############...........
+     0x003ff000,  // ......##########............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 39 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 40 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 41
+   28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000001,  // ...........................#
+     0x00000003,  // ..........................##
+     0x00000007,  // .........................###
+     0x0000000f,  // ........................####
+     0x0000003f,  // ......................######
+     0x000000ff,  // ....................########
+     0x000003ff,  // ..................##########
+     0x00000fff,  // ................############
+     0x00003fff,  // ..............##############
+     0x0001ffff,  // ...........#################
+     0x000fffff,  // ........####################
+     0x00ffffff,  // ....########################
+     0x0fffffff,  // ############################
+  },
+  {             // 42
+      28,  27,
+     0x00000000,  // ............................
+     0x0000000f,  // ........................####
+     0x000000ff,  // ....................########
+     0x000007ff,  // .................###########
+     0x00003fff,  // ..............##############
+     0x0000ffff,  // ............################
+     0x0003ffff,  // ..........##################
+     0x000fffff,  // ........####################
+     0x003fffff,  // ......######################
+     0x007fffff,  // .....#######################
+     0x00ffffff,  // ....########################
+     0x01ffffff,  // ...#########################
+     0x03ffffff,  // ..##########################
+     0x07ffffff,  // .###########################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+  },
+  {             // 43
+     28, 27,
+     0x0fffffff,  // ############################
+     0x00ffffff,  // ....########################
+     0x000fffff,  // ........####################
+     0x0001ffff,  // ...........#################
+     0x00003fff,  // ..............##############
+     0x00000fff,  // ................############
+     0x000003ff,  // ..................##########
+     0x000000ff,  // ....................########
+     0x0000003f,  // ......................######
+     0x0000000f,  // ........................####
+     0x00000007,  // .........................###
+     0x00000003,  // ..........................##
+     0x00000001,  // ...........................#
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 44
+     28, 27,
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x07ffffff,  // .###########################
+     0x03ffffff,  // ..##########################
+     0x01ffffff,  // ...#########################
+     0x00ffffff,  // ....########################
+     0x007fffff,  // .....#######################
+     0x003fffff,  // ......######################
+     0x000fffff,  // ........####################
+     0x0003ffff,  // ..........##################
+     0x0000ffff,  // ............################
+     0x00003fff,  // ..............##############
+     0x000007ff,  // .................###########
+     0x000000ff,  // ....................########
+     0x0000000f,  // ........................####
+     0x00000000,  // ............................
+  },
+  {             // 45
+     28,  27,
+     0x00003fff,  // ..............##############
+     0x0003ffff,  // ..........##################
+     0x001fffff,  // .......#####################
+     0x007fffff,  // .....#######################
+     0x00ffffff,  // ....########################
+     0x01ffffff,  // ...#########################
+     0x01ffffff,  // ...#########################
+     0x03ffffff,  // ..##########################
+     0x03ffffff,  // ..##########################
+     0x03ffffff,  // ..##########################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+  },
+  {             // 46
+     28, 27,
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x07ffffff,  // .###########################
+     0x03ffffff,  // ..##########################
+     0x03ffffff,  // ..##########################
+     0x03ffffff,  // ..##########################
+     0x01ffffff,  // ...#########################
+     0x01ffffff,  // ...#########################
+     0x00ffffff,  // ....########################
+     0x007fffff,  // .....#######################
+     0x001fffff,  // .......#####################
+     0x0003ffff,  // ..........##################
+     0x00003fff,  // ..............##############
+  },
+  {             // 47
+     28, 27,
+     0x0fffc000,  // ##############..............
+     0x0ffffc00,  // ##################..........
+     0x0fffff80,  // #####################.......
+     0x0fffffe0,  // #######################.....
+     0x0ffffff0,  // ########################....
+     0x0ffffff8,  // #########################...
+     0x0ffffff8,  // #########################...
+     0x0ffffffc,  // ##########################..
+     0x0ffffffc,  // ##########################..
+     0x0ffffffc,  // ##########################..
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+  },
+  {             // 48
+     28, 27,
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0fffffff,  // ############################
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0ffffffe,  // ###########################.
+     0x0ffffffc,  // ##########################..
+     0x0ffffffc,  // ##########################..
+     0x0ffffffc,  // ##########################..
+     0x0ffffff8,  // #########################...
+     0x0ffffff8,  // #########################...
+     0x0ffffff0,  // ########################....
+     0x0fffffe0,  // #######################.....
+     0x0fffff80,  // #####################.......
+     0x0ffffc00,  // ##################..........
+     0x0fffc000,  // ##############..............
+  },
+  {             // 49
+     14, 27,
+     0x00000000,  // ..............
+     0x00003c00,  // ####..........
+     0x00003f80,  // #######.......
+     0x00003fe0,  // #########.....
+     0x00003ff0,  // ##########....
+     0x00003ff8,  // ###########...
+     0x00003ff8,  // ###########...
+     0x00003ffc,  // ############..
+     0x00003ffc,  // ############..
+     0x00003ffc,  // ############..
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffc,  // ############..
+     0x00003ffc,  // ############..
+     0x00003ffc,  // ############..
+     0x00003ff8,  // ###########...
+     0x00003ff8,  // ###########...
+     0x00003ff0,  // ##########....
+     0x00003fe0,  // #########.....
+     0x00003f80,  // #######.......
+     0x00003c00,  // ####..........
+     0x00000000,  // ..............
+  },
+  {             // 50
+     14, 27,
+     0x00000000,  // ..............
+     0x0000000f,  // ..........####
+     0x0000007f,  // .......#######
+     0x000001ff,  // .....#########
+     0x000003ff,  // ....##########
+     0x000007ff,  // ...###########
+     0x000007ff,  // ...###########
+     0x00000fff,  // ..############
+     0x00000fff,  // ..############
+     0x00000fff,  // ..############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00001fff,  // .#############
+     0x00000fff,  // ..############
+     0x00000fff,  // ..############
+     0x00000fff,  // ..############
+     0x000007ff,  // ...###########
+     0x000007ff,  // ...###########
+     0x000003ff,  // ....##########
+     0x000001ff,  // .....#########
+     0x0000007f,  // .......#######
+     0x0000000f,  // ..........####
+     0x00000000,  // ..............
+  },
+  {             // 51
+     12, 27,
+     0x00000000,  // ............
+     0x00000c00,  // ##..........
+     0x00000f80,  // #####.......
+     0x00000fe0,  // #######.....
+     0x00000ff0,  // ########....
+     0x00000ff8,  // #########...
+     0x00000ff8,  // #########...
+     0x00000ffc,  // ##########..
+     0x00000ffc,  // ##########..
+     0x00000ffc,  // ##########..
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffe,  // ###########.
+     0x00000ffc,  // ##########..
+     0x00000ffc,  // ##########..
+     0x00000ffc,  // ##########..
+     0x00000ff8,  // #########...
+     0x00000ff8,  // #########...
+     0x00000ff0,  // ########....
+     0x00000fe0,  // #######.....
+     0x00000f80,  // #####.......
+     0x00000c00,  // ##..........
+     0x00000000,  // ............
+  },
+  {             // 52
+     24, 27,
+     0x00ffc000,  // ##########..............
+     0x00fffc00,  // ##############..........
+     0x00ffff80,  // #################.......
+     0x00ffffe0,  // ###################.....
+     0x00fffff0,  // ####################....
+     0x00fffff8,  // #####################...
+     0x00fffff8,  // #####################...
+     0x00fffffc,  // ######################..
+     0x00fffffc,  // ######################..
+     0x00fffffc,  // ######################..
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+  },
+  {             // 53
+     24, 27,
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00ffffff,  // ########################
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00fffffe,  // #######################.
+     0x00fffffc,  // ######################..
+     0x00fffffc,  // ######################..
+     0x00fffffc,  // ######################..
+     0x00fffff8,  // #####################...
+     0x00fffff8,  // #####################...
+     0x00fffff0,  // ####################....
+     0x00ffffe0,  // ###################.....
+     0x00ffff80,  // #################.......
+     0x00fffc00,  // ##############..........
+     0x00ffc000,  // ##########..............
+  },
+  {             // 54
+     14, 27,
+     0x00003fff,  // ##############
+     0x00003ffe,  // #############.
+     0x00003ffe,  // #############.
+     0x00003ffc,  // ############..
+     0x00003ffc,  // ############..
+     0x00003ff8,  // ###########...
+     0x00003ff8,  // ###########...
+     0x00003ff0,  // ##########....
+     0x00003ff0,  // ##########....
+     0x00003fe0,  // #########.....
+     0x00003fe0,  // #########.....
+     0x00003fc0,  // ########......
+     0x00003fc0,  // ########......
+     0x00003f80,  // #######.......
+     0x00003f80,  // #######.......
+     0x00003f00,  // ######........
+     0x00003f00,  // ######........
+     0x00003e00,  // #####.........
+     0x00003e00,  // #####.........
+     0x00003c00,  // ####..........
+     0x00003c00,  // ####..........
+     0x00003800,  // ###...........
+     0x00003800,  // ###...........
+     0x00003000,  // ##............
+     0x00003000,  // ##............
+     0x00002000,  // #.............
+     0x00002000,  // #.............
+  },
+  {             // 55 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 56 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 57
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03c00000,  // ..####......................
+     0x03e00000,  // ..#####.....................
+     0x03fc0000,  // ..########..................
+     0x03fe0000,  // ..#########.................
+     0x03ffc000,  // ..############..............
+     0x03ffe000,  // ..#############.............
+     0x03e7fc00,  // ..#####..#########..........
+     0x03e3fe00,  // ..#####...#########.........
+     0x03e07fc0,  // ..#####......#########......
+     0x03e03fe0,  // ..#####.......#########.....
+     0x03e007fc,  // ..#####..........#########..
+     0x03e007fc,  // ..#####..........#########..
+     0x03e03fe0,  // ..#####.......#########.....
+     0x03e07fc0,  // ..#####......#########......
+     0x03e3fe00,  // ..#####...#########.........
+     0x03e7fc00,  // ..#####..#########..........
+     0x03ffe000,  // ..#############.............
+     0x03ffc000,  // ..############..............
+     0x03fe0000,  // ..#########.................
+     0x03fc0000,  // ..########..................
+     0x03e00000,  // ..#####.....................
+     0x03c00000,  // ..####......................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 58
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0381c000,  // ..###......###..............
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x0381c000,  // ..###......###..............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 59
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0381c000,  // ..###......###..............
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x0381c000,  // ..###......###..............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 60
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0381c000,  // ..###......###..............
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x0381c000,  // ..###......###..............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 61
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00fe07f0,  // ....#######......#######....
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 62
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0000381c,  // ..............###......###..
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x0000381c,  // ..............###......###..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 63
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0000381c,  // ..............###......###..
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x0000381c,  // ..............###......###..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 64
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0000381c,  // ..............###......###..
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x0000381c,  // ..............###......###..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 65
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 66
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0381c000,  // ..###......###..............
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x0381c000,  // ..###......###..............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 67
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x0000381c,  // ..............###......###..
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x0000381c,  // ..............###......###..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 68 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 69 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 70
+     28,  21,
+     0x00000000,  // ............................
+     0x00e00000,  // ....###.....................
+     0x00f80000,  // ....#####...................
+     0x00ff0000,  // ....########................
+     0x00ffc000,  // ....##########..............
+     0x00fff000,  // ....############...........
+     0x00fffe00,  // ....###############.........
+     0x00ffff80,  // ....#################.......
+     0x00ffffe0,  // ....###################.....
+     0x00fffff8,  // ....#####################...
+     0x00fffff8,  // ....#####################...
+     0x00ffffe0,  // ....###################.....
+     0x00ffff80,  // ....#################.......
+     0x00fffe00,  // ....###############.........
+     0x00fff000,  // ....############............
+     0x00ffc000,  // ....##########..............
+     0x00ff0000,  // ....########................
+     0x00f80000,  // ....#####...................
+     0x00e00000,  // ....###.....................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 71
+     28,  21,
+     0x00000000,  // ............................
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+  },
+  {             // 72
+     28,  21,
+     0x00000000,  // ............................
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+  },
+  {             // 73
+     28,  21,
+     0x00000000,  // ............................
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+  },
+  {             // 74
+     28,  21,
+     0x00000000,  // ............................
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x007f0fe0,  // .....#######....#######.....
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 75
+     28,  21,
+     0x00000000,  // ............................
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+  },
+  {             // 76
+     28,  21,
+     0x00000000,  // ............................
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+  },
+  {             // 77
+     28,  21,
+     0x00000000,  // ............................
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+  },
+  {             // 78
+     28,  27,
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 79
+     28,  21,
+     0x00000000,  // ............................
+     0x03c1e000,  // ..####.....####.............
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03c1e000,  // ..####.....####.............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 80
+     28,  21,
+     0x00000000,  // ............................
+     0x0000783c,  // .............####.....####..
+     0x0001f8fc,  // ...........######...######..
+     0x0003e1f0,  // ..........#####....#####....
+     0x000fc7e0,  // ........######...######.....
+     0x001f0f80,  // .......#####....#####.......
+     0x007e3f00,  // .....######...######........
+     0x00f87c00,  // ....#####....#####..........
+     0x03f1f800,  // ..######...######...........
+     0x03f1f800,  // ..######...######...........
+     0x00f87c00,  // ....#####....#####..........
+     0x007e3f00,  // .....######...######........
+     0x001f0f80,  // .......#####....#####.......
+     0x000fc7e0,  // ........######...######.....
+     0x0003e1f0,  // ..........#####....#####....
+     0x0001f8fc,  // ...........######...######..
+     0x0000783c,  // .............####.....####..
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 81 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 82 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 83
+     28,  21,
+     0x03e1c000,  // ..#####....###..............
+     0x03e1e000,  // ..#####....####.............
+     0x03e1f800,  // ..#####....######...........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e03f00,  // ..#####.......######........
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e007e0,  // ..#####..........######.....
+     0x03e001f0,  // ..#####............#####....
+     0x03e000fc,  // ..#####.............######..
+     0x03e000fc,  // ..#####.............######..
+     0x03e001f0,  // ..#####............#####....
+     0x03e007e0,  // ..#####..........######.....
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e03f00,  // ..#####.......######........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e1f800,  // ..#####....######...........
+     0x03e1e000,  // ..#####....####.............
+     0x03e1c000,  // ..#####....###..............
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+  },
+  {             // 84
+     28,  21,
+     0x03e1c000,  // ..#####....###..............
+     0x03e1e000,  // ..#####....####.............
+     0x03e1f800,  // ..#####....######...........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e03f00,  // ..#####.......######........
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e007e0,  // ..#####..........######.....
+     0x03e001f0,  // ..#####............#####....
+     0x03e000fc,  // ..#####.............######..
+     0x03e000fc,  // ..#####.............######..
+     0x03e001f0,  // ..#####............#####....
+     0x03e007e0,  // ..#####..........######.....
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e03f00,  // ..#####.......######........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e1f800,  // ..#####....######...........
+     0x03e1e000,  // ..#####....####.............
+     0x03e1c000,  // ..#####....###..............
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+  },
+  {             // 85
+     28,  21,
+     0x03e1c000,  // ..#####....###..............
+     0x03e1e000,  // ..#####....####.............
+     0x03e1f800,  // ..#####....######...........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e03f00,  // ..#####.......######........
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e007e0,  // ..#####..........######.....
+     0x03e001f0,  // ..#####............#####....
+     0x03e000fc,  // ..#####.............######..
+     0x03e000fc,  // ..#####.............######..
+     0x03e001f0,  // ..#####............#####....
+     0x03e007e0,  // ..#####..........######.....
+     0x03e00f80,  // ..#####.........#####.......
+     0x03e03f00,  // ..#####.......######........
+     0x03e07c00,  // ..#####......#####..........
+     0x03e1f800,  // ..#####....######...........
+     0x03e1e000,  // ..#####....####.............
+     0x03e1c000,  // ..#####....###..............
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+  },
+  {             // 86
+     28,  21,
+     0x0000387c,  // ..............###....#####..
+     0x0000787c,  // .............####....#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x000fc07c,  // ........######.......#####..
+     0x001f007c,  // .......#####.........#####..
+     0x007e007c,  // .....######..........#####..
+     0x00f8007c,  // ....#####............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x00f8007c,  // ....#####............#####..
+     0x007e007c,  // .....######..........#####..
+     0x001f007c,  // .......#####.........#####..
+     0x000fc07c,  // ........######.......#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0000787c,  // .............####....#####..
+     0x0000387c,  // ..............###....#####..
+     0x00000000,  // ............................
+     0x03f80000,  // ..#######...................
+     0x03f80000,  // ..#######...................
+  },
+  {             // 87
+     28,  21,
+     0x0000387c,  // ..............###....#####..
+     0x0000787c,  // .............####....#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x000fc07c,  // ........######.......#####..
+     0x001f007c,  // .......#####.........#####..
+     0x007e007c,  // .....######..........#####..
+     0x00f8007c,  // ....#####............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x00f8007c,  // ....#####............#####..
+     0x007e007c,  // .....######..........#####..
+     0x001f007c,  // .......#####.........#####..
+     0x000fc07c,  // ........######.......#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0000787c,  // .............####....#####..
+     0x0000387c,  // ..............###....#####..
+     0x00000000,  // ............................
+     0x03f9fc00,  // ..#######..#######..........
+     0x03f9fc00,  // ..#######..#######..........
+  },
+  {             // 88
+     28,  21,
+     0x0000387c,  // ..............###....#####..
+     0x0000787c,  // .............####....#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x000fc07c,  // ........######.......#####..
+     0x001f007c,  // .......#####.........#####..
+     0x007e007c,  // .....######..........#####..
+     0x00f8007c,  // ....#####............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x03f0007c,  // ..######.............#####..
+     0x00f8007c,  // ....#####............#####..
+     0x007e007c,  // .....######..........#####..
+     0x001f007c,  // .......#####.........#####..
+     0x000fc07c,  // ........######.......#####..
+     0x0003e07c,  // ..........#####......#####..
+     0x0001f87c,  // ...........######....#####..
+     0x0000787c,  // .............####....#####..
+     0x0000387c,  // ..............###....#####..
+     0x00000000,  // ............................
+     0x03f9fcfe,  // ..#######..#######..#######.
+     0x03f9fcfe,  // ..#######..#######..#######.
+  },
+  {             // 89
+     28,  21,
+     0x01f1c000,  // ...#####...###..............
+     0x01f1e000,  // ...#####...####.............
+     0x01f1f800,  // ...#####...######...........
+     0x01f07c00,  // ...#####.....#####..........
+     0x01f03f00,  // ...#####......######........
+     0x01f00f80,  // ...#####........#####.......
+     0x01f007e0,  // ...#####.........######.....
+     0x01f001f0,  // ...#####...........#####....
+     0x01f000fc,  // ...#####............######..
+     0x01f000fc,  // ...#####............######..
+     0x01f001f0,  // ...#####...........#####....
+     0x01f007e0,  // ...#####.........######.....
+     0x01f00f80,  // ...#####........#####.......
+     0x01f03f00,  // ...#####......######........
+     0x01f07c00,  // ...#####.....#####..........
+     0x01f1f800,  // ...#####...######...........
+     0x01f1e000,  // ...#####...####.............
+     0x01f1c000,  // ...#####...###..............
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 90
+     28,  21,
+     0x000038f8,  // ..............###...#####...
+     0x000078f8,  // .............####...#####...
+     0x0001f8f8,  // ...........######...#####...
+     0x0003e0f8,  // ..........#####.....#####...
+     0x000fc0f8,  // ........######......#####...
+     0x001f00f8,  // .......#####........#####...
+     0x007e00f8,  // .....######.........#####...
+     0x00f800f8,  // ....#####...........#####...
+     0x03f000f8,  // ..######............#####...
+     0x03f000f8,  // ..######............#####...
+     0x00f800f8,  // ....#####...........#####...
+     0x007e00f8,  // .....######.........#####...
+     0x001f00f8,  // .......#####........#####...
+     0x000fc0f8,  // ........######......#####...
+     0x0003e0f8,  // ..........#####.....#####...
+     0x0001f8f8,  // ...........######...#####...
+     0x000078f8,  // .............####...#####...
+     0x000038f8,  // ..............###...#####...
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+     0x00000000,  // ............................
+  },
+  {             // 91 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  {             // 92 not used yet
+     6,  27,
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+     0x00000000,  // ......
+  },
+  };
diff -Nur vdr.orig/HISTORY-ElchiAIO vdr/HISTORY-ElchiAIO
--- vdr.orig/HISTORY-ElchiAIO	1970-01-01 01:00:00.000000000 +0100
+++ vdr/HISTORY-ElchiAIO	2004-08-01 13:40:47.000000000 +0200
@@ -0,0 +1,114 @@
+History ElchiAIO:
+-----------------
+
+version 1: 2002-12-25
+
+- changed stop cutting, recording und replay changed to line 1
+- changed subtiteltext in epg to fontosd-small
+- changed colorbuttontext and the menustateline to fontosd-small
+- added adjustable tranparency (parts of modcode from r.w. buchner)
+- added symbolpatch
+- added timebarpatch (code from maxime guilbot or olivier jacques???)
+- added rgb adjustable
+- changed volumebar (some cosmetic changes)
+- changed color for mute button
+
+version 2: 2003-01-01
+
+- added elchi style button (colors vanilla vdr <-> colors elchi) no color=1 at compiletime
+- moved color adjustment & transparency to a menu called color
+- progressbar (from matthias hilbig, andreas roedl, ulrich petri and andreas schultz)
+
+version 3: 2003-01-29
+
+- fixed a bug when channelnumber 
+- fixed a bug when channelinfo position is top
+- added mainmenu 0 from old aio
+- added replay beautypatch (from stefan huelswitt)
+- added adjustable fontcolors for channelinfo, mainmenu (parts of code from time plugin)
+- added adjustable channelinfo, helpbutton background colors
+- added adjustable colors for symbols on/off, volumebar and channelinfo timebar
+
+- not tested with vdr-1.1.21-22 and new ci driver
+- tested mit vdr-1.1.20 and driver from 2003-01-08
+
+version 3a: 2003-06-01
+
+- updated to vdr-1.2.0
+- added easyinput.diff (Thanks to Marcel Schaeben)
+- fixed bug when lcdplugin is used (breaked channelname)
+
+version 3b: 2003-09-17
+
+- updated to vdr-1.2.5
+- updated translations
+- fixed crash bug when '(NULL)' EPG titles
+- fixed volumebar text
+- fixed menu hotkeys
+- fixed some localization typos
+- added configurable 'Small Fonts' for titlebar & help buttons
+- added new shortcuts (play,rewind) for recordings menu
+- added configurable 'Show Weekdays' for timers and schedule (Thanks to Oskar Signell)
+- added recording_length-0.2 patch (Thanks to Tobias Faust)
+- merged easyinput-1.0 patch (Thanks to Patrick Maier)
+
+version 3c: 2003-11-14
+
+- updated to vdr-1.2.6
+- minimized the footprint of recording_length patch
+- modified easyinput patch to allow repeating keys and to shift cursor automatically
+  right if the last key is different than the current one.
+
+version 4: 2004-01-22
+
+- added and modified improved-osd-3a patch (Huge thanks to Sascha Volkenandt)
+  put your channel logos into $CONFIGDIR/logos/ - the logo feature can be disabled in SETUP/OSD-menu
+- merged fix from easyinput-1.1 patch (Thanks to Patrick Maier)
+- added findcmd patch to speedup recordings menu (Thanks to Jaakko Hyvätti)
+- added HDTV patch (Thanks to Reinhard Nissl)
+- fixed a few minor bugs (EGP,ShowWeekdays,...) and introduced many new ones :)
+
+version 4a: 2004-02-01
+
+- added and modified rename-0.2 patch (Thanks to Torsten Kunkel)
+  however recordings menu isn't automatically refreshed after renaming,
+  so you must do it manually by first close and then reopen the menu...
+- added shift-right-after-timeout feature into easyinput patch
+- fixed display channel info and other small bugs
+- added music symbol for radio channels (and reorganized the whole fontsym)
+- added ELCHIAIOVERSION define (config.h) for plugin developers
+- switching between themes doesn't reset colors and mess up texts anymore
+
+version 4b: 2004-02-08
+
+- changed "stop cutting/recording/replay" menu items back to the first line
+- added horizontal offset patch for OSD (SETUP/OSD/Horizontal Offset)
+- fixed help button layout (Thanks to Saxman2k @ VDRPortal)
+- fixed minor layout bug in "What's On Now" menu when using Scroll theme
+- fixed status line problems when using Scroll theme
+- renaming now automatically closes OSD
+- updated version number 
+
+version 4c: 2004-02-27
+
+- reworked the old 'COLOR' menu into separate 'OSD Themes' and 'Color Schemes' menus
+- added and modified the magnificent color-scheme patch (Thanks to gestein @ VDRPortal)
+  put your color schemes into $CONFIGDIR/schemes/
+- added option to select whether record/edit/replay commands are shown at the top or bottom of the mainmenu
+- added and slightly modified menu_selection-0.2a patch (Thanks to PeterD @ VDRPortal)
+- added russian translation for vdr-1.3.x
+- updated version number and it's also now written into logs during startup
+
+version 4d: 2004-03-14
+
+- added preliminary .xpm support for channel logos (Thanks to Sascha Volkenandt)
+  GIMP Howto: bicubic scale to 64x48, index to 16 colors, and save as xpm
+- color schemes use now only Description tags; please update your color scheme files
+- color edit menu allows now to edit also descriptions
+- color edit menu displays now active "variable color" in the scroll line and only relevant font color selections are shown
+- updated to menu_selection-0.3 patch; however status messages are currently disabled and the timeout is shortened
+- theme names are now included in translations
+- fixed "Symbols in Channelinfo" / "Logo in Channelinfo" theme bug
+- updated version number
+
+Please report any bugs/anomalies in VDRPortal forums - preferably with working fixes!
diff -Nur vdr.orig/i18n.c vdr/i18n.c
--- vdr.orig/i18n.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/i18n.c	2004-08-01 13:40:47.000000000 +0200
@@ -3739,6 +3739,1230 @@
     "Ennek a plugin-nak nincs setup-parametere!",
     "Aquest plugin no admet configuració!",
    },
+  { "Setup.OSD$Horizontal offset",
+    "Horizontale Offset",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Vaakakeskitys",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "OSD Themes",
+    "OSD Thema",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Kuvaruutunäytön teemat",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Theme",
+    "Thema",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Teema",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Vanilla",
+    "Vanilla",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Vanilja",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Elchi",
+    "Elchi",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Elchi",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Sascha Scroll",
+    "Sascha Scroll",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Saschan käärö",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Sascha Round",
+    "Sascha Round",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Saschan pyöreä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Small Fonts",
+    "Kleine Schrift",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Pienet kirjasimet",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Symbols in Channelinfo",
+    "Symbole in der Kanalinfo",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä symbolit kanavatiedossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Timebar in Channelinfo",
+    "Zeitbalken in der Kanalinfo",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä aikajana kanavatiedossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Logo in Channelinfo",
+    "Logo in der Kanalinfo",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä logo kanavatiedossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Color scheme for logos",
+    "Farbschema für Logos",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Käytä väriteemaa logossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Progressbar in 'Whats on Now?'",
+    "Zeitbalken in 'Was läuft jetzt?'",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä aikajana ohjelmistossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Show Weekdays",
+    "Wochentag anzeigen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä viikonpäivät",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Themes$Main Menu command position",
+    "Befehle Position im Hauptmenü",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Komentojen sijainti päävalikossa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Colors",
+    "Farben",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Värit",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Default Description",
+    "Standardbeschreibung",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Oletuskuvaus",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Localized Description",
+    "Übersetzte Beschreibung",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Suomennettu kuvaus",
+    "",//TODO  
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Variable Colors",
+    "Flexible Farben",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Vaihdettavat värit",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$  Transparency Value",
+    "  Transparenzwert max. 15",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "  Läpinäkyvyys",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$  Red Value",
+    "  Rotwert max. 15",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO   
+    "",//TODO
+    "  Punainen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO   
+  },
+  { "Setup.Colors$  Green Value",
+    "  Grünwert max. 15",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "  Vihreä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$  Blue Value",
+    "  Blauwert max. 15",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "  Sininen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Channel Name",
+    "Schriftfarbe Kanalname",
+    "",//TODO
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Kanavan nimen kirjasin",
+    "",//TODO   
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Channel Number",
+    "Schriftfarbe Kanalzahl",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Kanavan numeron kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor EPG Time",
+    "Schriftfarbe EPG Zeit",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Ohjelma-ajan kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor EPG Title",
+    "Schriftfarbe EPG Titel",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO 
+    "",//TODO
+    "Ohjelmanimen kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO   
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor EPG Subtitle",
+    "Schriftfarbe EPG Subtitel",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Ohjelmakuvauksen kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Main Menu",
+    "Schriftfarbe Hauptmenu",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Päävalikon kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Title Line",
+    "Schriftfarbe Titelzeile",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Otsikkorivin kirjasin",
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Scroll Line",
+    "Schriftfarbe Scrollzeile",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Valitun rivin kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Error Line",
+    "Schriftfarbe Status Fehler",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Virheviestin kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Info Line",
+    "Schriftfarbe Status Info",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Infoviestin kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Fontcolor Confirm Line",
+    "Schriftfarbe Status Bestätigung",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Varmenneviestin kirjasin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Volumebar",
+    "Lautstärkeregler",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Äänenvoimakkuus",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Symbol Light Active",
+    "Symbolleuchte brennt",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Symbolivalo päällä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO 
+  },
+  { "Setup.Colors$Symbol Light Off",
+    "Symbolleuchte ist aus",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Symbolivalo pois päältä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Timebar Background",
+    "Zeitbalken Hintergrund",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Aikajanan tausta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Timebar Variable",
+    "Zeitbalken Änderung",
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "",//TODO  
+    "",//TODO   
+    "",//TODO
+    "Aikajana",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Black",
+    "Schwarz",
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO  
+    "",//TODO
+    "musta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$White",
+    "Weiss",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "valkoinen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Red",
+    "Rot",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "punainen",
+    "",//TODO   
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Green",
+    "Grün",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO 
+    "",//TODO
+    "",//TODO
+    "vihreä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Yellow",
+    "Gelb",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "keltainen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Magenta",
+    "Magenta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "magenta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO   
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Blue",
+    "Blau",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "sininen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Cyan",
+    "Cyan",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "syaani",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Grey",
+    "Grau",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "harmaa",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO   
+  },
+  { "Setup.Colors$Transparent",
+    "Transparent",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "läpinäkyvä",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO  
+  },
+  { "Setup.Colors$Background",
+    "Background",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "tausta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Channel Name",
+    "Kanalname",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "kanavan nimi",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Channel Number",
+    "Kanalzahl",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "kanavan numero",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$EPG Time",
+    "EPG Zeit",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "ohjelma-aika",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$EPG Data",
+    "EPG Data",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "ohjelmatieto",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Title Line",
+    "Titelzeile",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "otsikkorivi",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Scroll Line",
+    "Scrollzeile",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "valittu rivi",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Red Button",
+    "Rote Taste",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "pun. näppäin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Green Button",
+    "Grüne Taste",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "vihr. näppäin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Yellow Button",
+    "Gelbe Taste",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "kelt. näppäin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Blue Button",
+    "Blaue Taste",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "sin. näppäin",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Error Line",
+    "Statuszeile Fehler",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "virheviesti",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Info Line",
+    "Statuszeile Information",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "infoviesti",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Colors$Confirm Line",
+    "Statuszeile Bestätigung",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "varmenneviesti",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Color Schemes",
+    "Farbschema",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Väriteemat",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Scheme$Current Color Scheme",
+    "Aktuelles Farbschema",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Nykyinen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Scheme$Save",
+    "Speichern",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Tallenna",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Scheme$Color scheme saved.",
+    "Farbschema gespeichert.",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Väriteema tallennettu.",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Scheme$Error while saving color scheme!",
+    "Fehler beim Speichern des Farbschemas!",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Väriteeman tallentaminen epäonnistui!",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Recording$Show Date",
+    "Aufnahmedatum anzeigen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä tallenteen päiväys",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Recording$Show Time",
+    "AufnahmeZeit anzeigen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä tallenteen ajankohta",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Setup.Recording$Show Length",
+    "Länge der Aufnahme anzeigen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Näytä tallenteen kesto",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
+  { "Rename recording",
+    "Aufzeichnung umbenennen",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "Nimeä tallenne",
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+    "",//TODO
+  },
   { NULL }
   };
 
diff -Nur vdr.orig/interface.c vdr/interface.c
--- vdr.orig/interface.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/interface.c	2004-08-01 13:42:59.000000000 +0200
@@ -14,6 +14,7 @@
 #include "i18n.h"
 #include "osd.h"
 #include "status.h"
+#include "theme.h"
 
 cInterface *Interface = NULL;
 
@@ -35,12 +36,17 @@
 
 void cInterface::Open(int NumCols, int NumLines)
 {
+  Open(NumCols, NumLines, false);
+}
+
+void cInterface::Open(int NumCols, int NumLines, bool logo)
+{
   if (!open++) {
      if (NumCols == 0)
         NumCols = Setup.OSDwidth;
      if (NumLines == 0)
         NumLines = Setup.OSDheight;
-     cOsd::Open(width = NumCols, height = NumLines);
+     cOsd::Open(width = NumCols, height = NumLines, logo);
      }
 }
 
@@ -214,6 +220,26 @@
 void cInterface::WriteText(int x, int y, const char *s, eDvbColor FgColor, eDvbColor BgColor)
 {
   if (open) {
+     if ((Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) && (x < 2)) {
+        char symbol[3] = "";
+        eDvbFont oldFont = Interface->SetFont(fontSym);
+        if (Setup.Theme == themeSaschaScroll) {
+           Fill(1, y, Setup.OSDwidth - 2, 1, BgColor);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+           Write(1, y, symbol, BgColor, clrBackground);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT);
+           Write(Setup.OSDwidth - 2, y, symbol, BgColor, clrBackground);
+           }
+        else {
+           Fill(0, y, Setup.OSDwidth, 1, BgColor);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+           Write(0, y, symbol, BgColor, clrBackground);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT);
+           Write(Setup.OSDwidth - 1, y, symbol, BgColor, clrBackground);
+           }
+        SetFont(oldFont);
+        }
+     else
      ClearEol(x, y, BgColor);
      int col = 0;
      for (;;) {
@@ -229,6 +255,7 @@
             p = buf;
             s = t + 1;
             }
+         if ((Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) && (x < 2)) x = Setup.Theme == themeSaschaScroll ? 2 : 1;
          Write(x, y, p, FgColor, BgColor);
          if (p == s)
             break;
@@ -239,7 +266,24 @@
 
 void cInterface::Title(const char *s)
 {
-  ClearEol(0, 0, clrCyan);
+  ClearEol(0, 0, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
+  if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) {
+     char symbol[3] = "";
+     eDvbFont oldFont = SetFont(fontSym);
+     if (Setup.Theme == themeSaschaScroll) {
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+        Write(0, 0, symbol, clrTitleLine, clrTransparent);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT);
+        Write(Setup.OSDwidth - 1, 0, symbol, clrTitleLine, clrTransparent);
+        }
+     else {
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT1);
+        Write(0, 0, symbol, clrTitleLine, clrTransparent);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT1);
+        Write(Setup.OSDwidth - 2, 0, symbol, clrTitleLine, clrTransparent);
+        }
+     SetFont(oldFont);
+     }
   const char *t = strchr(s, '\t');
   if (t) {
      char buffer[Width() + 1];
@@ -247,15 +291,27 @@
      if (n >= sizeof(buffer))
         n = sizeof(buffer) - 1;
      strn0cpy(buffer, s, n + 1);
-     Write(1, 0, buffer, clrBlack, clrCyan);
+     if (Setup.SmallFonts) {
+        eDvbFont OldFont = Interface->SetFont(fontSml);
+        Write(1, 0, buffer, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgtitleline, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
+        Interface->SetFont(OldFont);
+        }
+     else
+        Write(1, 0, buffer, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgtitleline, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
      t++;
-     Write(-(cOsd::WidthInCells(t) + 1), 0, t, clrBlack, clrCyan);
+     Write(-(cOsd::WidthInCells(t) + 1), 0, t, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgtitleline, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
      }
   else {
      int x = (Width() - strlen(s)) / 2;
      if (x < 0)
         x = 0;
-     Write(x, 0, s, clrBlack, clrCyan);
+     if (Setup.SmallFonts) {
+        eDvbFont OldFont = Interface->SetFont(fontSml);
+        Write(x, 0, s, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgtitleline, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
+        Interface->SetFont(OldFont);
+        }
+     else
+        Write(x, 0, s, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgtitleline, Setup.Theme == themeVanilla ? clrCyan : clrTitleLine);
      }
   cStatus::MsgOsdTitle(s);
 }
@@ -263,11 +319,12 @@
 void cInterface::Status(const char *s, eDvbColor FgColor, eDvbColor BgColor)
 {
   int Line = (abs(height) == 1) ? 0 : -2;
-  ClearEol(0, Line, s ? BgColor : clrBackground);
+  ClearEol((Setup.Theme == themeSaschaScroll) ? 1 : 0, Line, s ? BgColor == clrCyan ? (eDvbColor)clrInfoLine : BgColor : clrBackground);
   if (s) {
      int x = (Width() - int(strlen(s))) / 2;
      if (x < 0)
         x = 0;
+     if ((Setup.Theme == themeSaschaScroll) && (x < 1)) x = 1;
      Write(x, Line, s, FgColor, BgColor);
      }
   cStatus::MsgOsdStatusMessage(s);
@@ -277,7 +334,7 @@
 {
   Open(Setup.OSDwidth, -1);
   isyslog("info: %s", s);
-  Status(s, clrBlack, clrGreen);
+  Status(s, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrGreen : clrInfoLine);
   Wait();
   Status(NULL);
   Close();
@@ -287,7 +344,7 @@
 {
   Open(Setup.OSDwidth, -1);
   esyslog("ERROR: %s", s);
-  Status(s, clrWhite, clrRed);
+  Status(s, Setup.Theme == themeVanilla ? clrWhite : (eDvbColor)fgerrorfont, Setup.Theme == themeVanilla ? clrRed : clrErrorLine);
   Wait();
   Status(NULL);
   Close();
@@ -297,7 +354,7 @@
 {
   Open(Setup.OSDwidth, -1);
   isyslog("confirm: %s", s);
-  Status(s, clrBlack, clrYellow);
+  Status(s, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgconfirmfont, Setup.Theme == themeVanilla ? clrYellow : clrConfirmLine);
   eKeys k = Wait(Seconds);
   bool result = WaitForTimeout ? k == kNone : k == kOk;
   Status(NULL);
@@ -310,22 +367,57 @@
 {
   if (open) {
      const int w = Width() / 4;
-     cOsd::Fill(Index * w, -1, w, 1, Text ? BgColor : clrBackground);
+     if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) {
+        char symbol[3] = "";
+        eDvbFont oldFont = Interface->SetFont(fontSym);
+        Interface->Fill(Index * w + min((Width() % 4), Index), -1, w + ((Width() % 4) > Index ? 1 : 0), 1, Text ? BgColor : clrBackground);
+        if (Setup.Theme == themeSaschaScroll) {
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+           Interface->Write((Index * w + min((Width() % 4), Index)), -1, symbol, Text ? BgColor : clrBackground, Index == 0 ? clrTransparent : clrBackground);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT);
+           Interface->Write((Index * w + min((Width() % 4), Index) + w + ((Width() % 4) > Index ? 1 : 0) - 1), -1, symbol, Text ? BgColor : clrBackground, Index == 3 ? clrTransparent : clrBackground);
+           }
+        else {
+           if (Index == 0) {
+              snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT2);
+              Interface->Write(0, -1, symbol, Text ? BgColor : clrBackground, clrTransparent);
+              }
+           else if (Index == 3) {
+              snprintf(symbol, sizeof(symbol), "%c", FSYM_THINROUND_RIGHT2);
+              Interface->Write((Index * w + min((Width() % 4), Index) + w + ((Width() % 4) > Index ? 1 : 0) - 2), -1, symbol, Text ? BgColor : clrBackground, clrTransparent);
+              }
+           }
+        SetFont(oldFont);
+        }
+     else
+     cOsd::Fill(Index * w + min((Width() % 4), Index), -1, w + ((Width() % 4) > Index ? 1 : 0), 1, Text ? BgColor : clrBackground);
      if (Text) {
-        int l = (w - int(strlen(Text))) / 2;
+        int l;
+        eDvbFont oldFont = fontOsd;
+        if (Setup.SmallFonts) oldFont = Interface->SetFont(fontSml);
+        l = (w + ((Width() % 4) > Index ? 1 : 0) - cOsd::WidthInCells(Text)) / 2;
         if (l < 0)
            l = 0;
-        cOsd::Text(Index * w + l, -1, Text, FgColor, BgColor);
+        cOsd::Text(Index * w + min((Width() % 4), Index) + l, -1, Text, FgColor, BgColor);
+        if (Setup.SmallFonts) Interface->SetFont(oldFont);
         }
      }
 }
 
 void cInterface::Help(const char *Red, const char *Green, const char *Yellow, const char *Blue)
 {
-  HelpButton(0, Red,    clrBlack, clrRed);
-  HelpButton(1, Green,  clrBlack, clrGreen);
-  HelpButton(2, Yellow, clrBlack, clrYellow);
-  HelpButton(3, Blue,   clrWhite, clrBlue);
+  if (Setup.Theme == themeVanilla) {
+     HelpButton(0, Red,    clrBlack, clrRed);
+     HelpButton(1, Green,  clrBlack, clrGreen);
+     HelpButton(2, Yellow, clrBlack, clrYellow);
+     HelpButton(3, Blue,   clrWhite, clrBlue);
+     }
+  else {
+     HelpButton(0, Red,    clrWhite, clrHelpRed);
+     HelpButton(1, Green,  clrBlack, clrHelpGreen);
+     HelpButton(2, Yellow, clrBlack, clrHelpYellow);
+     HelpButton(3, Blue,   clrWhite, clrHelpBlue);
+     }
   cStatus::MsgOsdHelpKeys(Red, Green, Yellow, Blue);
 }
 
diff -Nur vdr.orig/interface.h vdr/interface.h
--- vdr.orig/interface.h	2004-05-30 00:23:11.000000000 +0200
+++ vdr/interface.h	2004-08-01 13:42:59.000000000 +0200
@@ -32,6 +32,7 @@
   ~cInterface();
   bool IsOpen(void) { return open > 0; }
   void Open(int NumCols = 0, int NumLines = 0);
+  void Open(int NumCols, int NumLines, bool logo);
   void Close(void);
   bool HasSVDRPConnection(void) { return SVDRP && SVDRP->HasConnection(); }
   void Interrupt(void) { interrupted = true; }
diff -Nur vdr.orig/Makefile vdr/Makefile
--- vdr.orig/Makefile	2004-07-22 20:19:11.000000000 +0200
+++ vdr/Makefile	2004-08-01 13:40:47.000000000 +0200
@@ -42,6 +42,9 @@
 OSDFONT = -adobe-helvetica-medium-r-normal--23-*-100-100-p-*-iso8859-1
 FIXFONT = -adobe-courier-bold-r-normal--25-*-100-100-m-*-iso8859-1
 
+# ElchiAIO
+OBJS += theme.o
+
 ifndef NO_KBD
 DEFINES += -DREMOTE_KBD
 endif
diff -Nur vdr.orig/menu.c vdr/menu.c
--- vdr.orig/menu.c	2004-07-22 20:19:11.000000000 +0200
+++ vdr/menu.c	2004-08-01 13:42:59.000000000 +0200
@@ -655,7 +655,7 @@
 {
   channel = Channel;
   if (channel->GroupSep())
-     SetColor(clrCyan, clrBackground);
+     SetColor(Setup.Theme == themeVanilla ? clrCyan : clrScrolLine, clrBackground);
   Set();
 }
 
@@ -966,9 +966,12 @@
 void cMenuTimerItem::Set(void)
 {
   char *buffer = NULL;
-  asprintf(&buffer, "%c\t%d\t%s\t%02d:%02d\t%02d:%02d\t%s",
+  timer->Matches();
+  asprintf(&buffer, "%c\t%d\t%s%s%s\t%02d:%02d\t%02d:%02d\t%s",
                     !timer->Active() ? ' ' : timer->FirstDay() ? '!' : timer->Recording() ? '#' : '>',
                     timer->Channel()->Number(),
+                    !Setup.ShowWeekdays ? "" : timer->IsSingleEvent() ? timer->GetWDayString(timer->StartTime()) : "",
+                    !Setup.ShowWeekdays ? "" : timer->IsSingleEvent() ? " " : "",
                     timer->PrintDay(timer->Day()),
                     timer->Start() / 100,
                     timer->Start() % 100,
@@ -996,7 +999,7 @@
   };
 
 cMenuTimers::cMenuTimers(void)
-:cOsdMenu(tr("Timers"), 2, CHNUMWIDTH, 10, 6, 6)
+:cOsdMenu(tr("Timers"), 2, CHNUMWIDTH, Setup.ShowWeekdays ? 7 : 4, 6, 6)
 {
   int i = 0;
   cTimer *timer;
@@ -1152,15 +1155,15 @@
         const char *Subtitle = eventInfo->GetSubtitle();
         const char *ExtendedDescription = eventInfo->GetExtendedDescription();
         if (!isempty(Title)) {
-           Add(item = new cMenuTextItem(Title, 1, Line, Setup.OSDwidth - 2, -1, clrCyan));
+           Add(item = new cMenuTextItem(Title, 1, Line, Setup.OSDwidth - 2, -1, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgtitle));
            Line += item->Height() + 1;
            }
         if (!isempty(Subtitle)) {
-           Add(item = new cMenuTextItem(Subtitle, 1, Line, Setup.OSDwidth - 2, -1, clrYellow));
+           Add(item = new cMenuTextItem(Subtitle, 1, Line, Setup.OSDwidth - 2, -1, Setup.Theme == themeVanilla ? clrYellow : (eDvbColor)fgsubtitle));
            Line += item->Height() + 1;
            }
         if (!isempty(ExtendedDescription))
-           Add(new cMenuTextItem(ExtendedDescription, 1, Line, Setup.OSDwidth - 2, Height() - Line - 2, clrCyan), true);
+           Add(new cMenuTextItem(ExtendedDescription, 1, Line, Setup.OSDwidth - 2, Height() - Line - 2, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgtitle), true);
         SetHelp(tr("Record"), NULL, NULL, CanSwitch ? tr("Switch") : NULL);
         }
      }
@@ -1186,16 +1189,72 @@
 class cMenuWhatsOnItem : public cOsdItem {
 public:
   const cEventInfo *eventInfo;
-  cMenuWhatsOnItem(const cEventInfo *EventInfo);
+  cMenuWhatsOnItem(const cEventInfo *EventInfo, bool ShowProgressBar);
+  ~cMenuWhatsOnItem();
+  virtual void Display(int Offset= -1, eDvbColor FgColor = clrWhite, eDvbColor BgColor = clrBackground);
+protected:
+  cBitmap *progressBar;
+  bool showProgressBar;
+  float percent;
+private:
+  void DrawProgressBar(eDvbColor FgColor, eDvbColor BgColor);
 };
 
-cMenuWhatsOnItem::cMenuWhatsOnItem(const cEventInfo *EventInfo)
+cMenuWhatsOnItem::cMenuWhatsOnItem(const cEventInfo *EventInfo, bool ShowProgressBar)
 {
   eventInfo = EventInfo;
   char *buffer = NULL;
+  const char *Time = eventInfo->GetTimeString();
+  const char *Title = eventInfo->GetTitle();
   cChannel *channel = Channels.GetByNumber(eventInfo->GetChannelNumber());
-  asprintf(&buffer, "%d\t%.*s\t%.*s\t%s", eventInfo->GetChannelNumber(), 6, channel ? channel->Name() : "???", 5, eventInfo->GetTimeString(), eventInfo->GetTitle());
+  if (ShowProgressBar && Setup.ProgressBar) {
+     asprintf(&buffer, "%.*s\t%.*s\t\t%s", 10, channel ? channel->Name() : "???", 5, Time, Title ? Title : "???");
+     progressBar = new cBitmap(60, 27, 2);
+     percent = (float)(time(NULL) - eventInfo->GetTime()) / (float)(eventInfo->GetDuration());
+     if (percent < 0) percent = 0;
+     if (percent > 1.0) percent = 1.0;
+     }
+  else
+     asprintf(&buffer, "%.*s\t%.*s\t%s", 10, channel ? channel->Name() : "???", 5, Time, Title ? Title : "???");
   SetText(buffer, false);
+  showProgressBar = ShowProgressBar && Setup.ProgressBar;
+}
+
+cMenuWhatsOnItem::~cMenuWhatsOnItem()
+{
+  if (showProgressBar)
+     delete progressBar;
+}
+
+void cMenuWhatsOnItem::DrawProgressBar(eDvbColor FgColor, eDvbColor BgColor)
+{
+  int width = progressBar->Width();
+  int height = progressBar->Height();
+
+  progressBar->Fill(0, 0, width, height, BgColor);
+  for (int i = 7; i < height - 7; i++) {
+      progressBar->SetPixel(0, i, FgColor);
+      progressBar->SetPixel(1, i, FgColor);
+      progressBar->SetPixel(2, i, FgColor);
+      progressBar->SetPixel(width - 3, i, FgColor);
+      progressBar->SetPixel(width - 2, i, FgColor);
+      progressBar->SetPixel(width - 1, i, FgColor);
+      }
+  progressBar->Fill(3, 7, (int)(percent * (width - 4)), height - 8, FgColor);
+}
+
+void cMenuWhatsOnItem::Display(int Offset, eDvbColor FgColor, eDvbColor BgColor)
+{
+  cOsdItem::Display(Offset, FgColor, BgColor);
+  if (showProgressBar) {
+     DrawProgressBar(userColor ? fgColor : FgColor, userColor ? bgColor: BgColor);
+     if (Setup.Theme == themeSaschaScroll)
+        Interface->SetBitmap(234, ((Offset + 2) * 27), *progressBar);
+     else if (Setup.Theme == themeSaschaRound)
+        Interface->SetBitmap(220, ((Offset + 2) * 27), *progressBar);
+     else
+        Interface->SetBitmap(206, ((Offset + 2) * 27), *progressBar);
+     }
 }
 
 // --- cMenuWhatsOn ----------------------------------------------------------
@@ -1223,7 +1282,7 @@
 }
 
 cMenuWhatsOn::cMenuWhatsOn(const cSchedules *Schedules, bool Now, int CurrentChannelNr)
-:cOsdMenu(Now ? tr("What's on now?") : tr("What's on next?"), CHNUMWIDTH, 7, 6)
+:cOsdMenu(Now ? tr("What's on now?") : tr("What's on next?"), 12, 6, 5)
 {
   const cSchedule *Schedule = Schedules->First();
   const cEventInfo **pArray = NULL;
@@ -1246,7 +1305,7 @@
   qsort(pArray, num, sizeof(cEventInfo *), CompareEventChannel);
 
   for (int a = 0; a < num; a++)
-      Add(new cMenuWhatsOnItem(pArray[a]), pArray[a]->GetChannelNumber() == CurrentChannelNr);
+      Add(new cMenuWhatsOnItem(pArray[a], Now), pArray[a]->GetChannelNumber() == CurrentChannelNr);
 
   currentChannel = CurrentChannelNr;
   free(pArray);
@@ -1327,6 +1386,9 @@
 {
   eventInfo = EventInfo;
   char *buffer = NULL;
+  if (Setup.ShowWeekdays)
+     asprintf(&buffer, "%.*s\t%.*s\t%.*s\t%s", 3, eventInfo->GetWeekdayString(), 5, eventInfo->GetDate(), 5, eventInfo->GetTimeString(), eventInfo->GetTitle());
+  else
   asprintf(&buffer, "%.*s\t%.*s\t%s", 5, eventInfo->GetDate(), 5, eventInfo->GetTimeString(), eventInfo->GetTitle());
   SetText(buffer, false);
 }
@@ -1349,7 +1411,7 @@
   };
 
 cMenuSchedule::cMenuSchedule(void)
-:cOsdMenu("", 6, 6)
+:cOsdMenu("", Setup.ShowWeekdays ? 5 : 6, 6, 6)
 {
   now = next = false;
   otherChannel = 0;
@@ -1525,7 +1587,7 @@
         }
      if (confirmed) {
         asprintf(&buffer, "%s...", command->Title());
-        Interface->Status(buffer);
+        Interface->Status(buffer, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrCyan : clrInfoLine);
         Interface->Flush();
         free(buffer);
         const char *Result = command->Execute(parameters);
@@ -1718,6 +1780,53 @@
   SetText(buffer, false);
 }
 
+// --- cMenuRenameRecording --------------------------------------------------
+
+class cMenuRenameRecording : public cOsdMenu {
+private:
+  int lifetime;
+  int priority;
+  char name[MaxFileName];
+  cRecording *recording;
+public:
+  cMenuRenameRecording(cRecording *Recording);
+  ~cMenuRenameRecording();
+  virtual eOSState ProcessKey(eKeys Key);
+  };
+
+cMenuRenameRecording::cMenuRenameRecording(cRecording *Recording)
+:cOsdMenu(tr("Rename recording"), 12)
+{
+  recording = Recording;
+  priority = recording->priority;
+  lifetime = recording->lifetime;
+  strncpy(name, recording->Name(), sizeof(name));
+
+  Add(new cMenuEditStrItem(tr("Name"),      name,     sizeof(name), tr(FileNameChars)));
+  Add(new cMenuEditIntItem(tr("Priority"), &priority, 0,            MAXPRIORITY      ));
+  Add(new cMenuEditIntItem(tr("Lifetime"), &lifetime, 0,            MAXLIFETIME      ));
+}
+
+cMenuRenameRecording::~cMenuRenameRecording()
+{
+}
+
+eOSState cMenuRenameRecording::ProcessKey(eKeys Key)
+{
+  eOSState state = cOsdMenu::ProcessKey(Key);
+
+  if (state == osUnknown) {
+     if (Key == kOk) {
+        if (recording->Rename(name, &priority, &lifetime))
+           return osRecordings; // rescan recordings by force
+        else
+           Interface->Error(tr("Error while accessing recording!"));
+        }
+     return osContinue;
+     }
+  return state;
+}
+
 // --- cMenuRecordings -------------------------------------------------------
 
 cRecordings cMenuRecordings::Recordings;
@@ -1730,7 +1839,7 @@
   level = Setup.RecordingDirs ? Level : -1;
   Display(); // this keeps the higher level menus from showing up briefly when pressing 'Back' during replay
   if (!Base) {
-     Interface->Status(tr("scanning recordings..."));
+     Interface->Status(tr("scanning recordings..."), Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrCyan : clrInfoLine);
      Interface->Flush();
      }
   if (Base || Recordings.Load()) {
@@ -1929,6 +2038,19 @@
   return osContinue;
 }
 
+eOSState cMenuRecordings::Rename(void)
+{
+  if (HasSubMenu() || Count() == 0)
+     return osContinue;
+  cMenuRecordingItem *ri = (cMenuRecordingItem *)Get(Current());
+  if (ri && !ri->IsDirectory()) {
+     cRecording *recording = GetRecording(ri);
+     if (recording)
+        return AddSubMenu(new cMenuRenameRecording(recording));
+     }
+  return osContinue;
+}
+
 eOSState cMenuRecordings::ProcessKey(eKeys Key)
 {
   bool HadSubMenu = HasSubMenu();
@@ -1941,6 +2063,7 @@
        case kGreen:  return Rewind();
        case kYellow: return Delete();
        case kBlue:   return Summary();
+       case k0:      return Rename();
        case k1...k9: return Commands(Key);
        default: break;
        }
@@ -1995,6 +2118,7 @@
   Add(new cMenuEditStraItem(tr("Setup.OSD$Language"),               &data.OSDLanguage, I18nNumLanguages, I18nLanguages()));
   Add(new cMenuEditIntItem( tr("Setup.OSD$Width"),                  &data.OSDwidth, MINOSDWIDTH, MAXOSDWIDTH));
   Add(new cMenuEditIntItem( tr("Setup.OSD$Height"),                 &data.OSDheight, MINOSDHEIGHT, MAXOSDHEIGHT));
+  Add(new cMenuEditIntItem( tr("Setup.OSD$Horizontal offset"),      &data.OSDxoffset, -20, 20));
   Add(new cMenuEditIntItem( tr("Setup.OSD$Message time (s)"),       &data.OSDMessageTime, 1, 60));
   Add(new cMenuEditBoolItem(tr("Setup.OSD$Channel info position"),  &data.ChannelInfoPos, tr("bottom"), tr("top")));
   Add(new cMenuEditBoolItem(tr("Setup.OSD$Info on channel switch"), &data.ShowInfoOnChSwitch));
@@ -2018,6 +2142,785 @@
   return state;
 }
 
+// --- cMenuSetupOSDThemes -----------------------------------------------------
+
+#define MAXTHEMES 5
+
+class cMenuSetupOSDThemes : public cMenuSetupBase {
+private:
+  virtual void Set(void);
+  const char * ThemeValue[MAXTHEMES];
+public:
+  cMenuSetupOSDThemes(void) { Set(); };
+  virtual eOSState ProcessKey(eKeys Key);
+  };
+
+void cMenuSetupOSDThemes::Set(void)
+{
+  int current = Current();
+
+  ThemeValue[0] = tr("Setup.Themes$Vanilla");       // themeVanilla
+  ThemeValue[1] = tr("Setup.Themes$Elchi");         // themeElchi
+  ThemeValue[2] = tr("Setup.Themes$Sascha Scroll"); // themeSaschaScroll
+  ThemeValue[3] = tr("Setup.Themes$Sascha Round");  // themeSaschaRound
+  ThemeValue[4] = NULL;
+
+  Clear();
+  SetSection(tr("OSD Themes"));
+  SetHelp("","","","");
+
+  Add(new cMenuEditStraItem(tr("Setup.Themes$Theme"), &data.Theme, MAXTHEMES - 1, ThemeValue));
+  if (data.Theme != themeVanilla) {
+     Add(new cMenuEditBoolItem(tr("Setup.Themes$Small Fonts"), &data.SmallFonts));
+     Add(new cMenuEditBoolItem(tr("Setup.Themes$Symbols in Channelinfo"), &data.Symbol));
+     Add(new cMenuEditBoolItem(tr("Setup.Themes$Timebar in Channelinfo"), &data.TimeBar));
+     Add(new cMenuEditBoolItem(tr("Setup.Themes$Progressbar in 'Whats on Now?'"), &data.ProgressBar));
+     if (data.Theme == themeSaschaRound || data.Theme == themeSaschaScroll) {
+        Add(new cMenuEditBoolItem(tr("Setup.Themes$Logo in Channelinfo"), &data.ChannelLogo));
+        if (data.ChannelLogo) {
+            Add(new cMenuEditBoolItem(tr("Setup.Themes$Color scheme for logos"), &data.LogoColorScheme));
+            }
+        }
+     }
+  Add(new cMenuEditBoolItem(tr("Setup.Themes$Show Weekdays"), &data.ShowWeekdays));
+  Add(new cMenuEditBoolItem(tr("Setup.Themes$Main Menu command position"), &data.MenuCommandPos, tr("bottom"), tr("top")));
+
+  SetCurrent(Get(current));
+  Display();
+}
+
+eOSState cMenuSetupOSDThemes::ProcessKey(eKeys Key)
+{
+  int oldTheme       = data.Theme;
+  int oldSmallFonts  = data.SmallFonts;
+  int oldChannelLogo = data.ChannelLogo;
+
+  eOSState state = cMenuSetupBase::ProcessKey(Key);
+
+  if (data.SmallFonts != oldSmallFonts) {
+     Setup.SmallFonts = data.SmallFonts;
+     Set();
+     }
+
+  if (data.ChannelLogo != oldChannelLogo) {
+     Setup.ChannelLogo = data.ChannelLogo;
+     Set();
+     }
+
+  if (data.Theme != oldTheme) {
+     Setup.Theme = data.Theme;
+     cOsd::Close();
+     cOsd::Open(Setup.OSDwidth, Setup.OSDheight, false);
+     if (Setup.Theme == themeVanilla) {
+        Setup.SmallFonts       = 0; data.SmallFonts   = Setup.SmallFonts;
+        Setup.ChannelLogo      = 0; data.ChannelLogo  = Setup.ChannelLogo;
+        Setup.Symbol           = 0; data.Symbol       = Setup.Symbol;
+        Setup.TimeBar          = 0; data.TimeBar      = Setup.TimeBar;
+        Setup.ProgressBar      = 0; data.ProgressBar  = Setup.ProgressBar;
+        Setup.ShowWeekdays     = 0; data.ShowWeekdays = Setup.ShowWeekdays;
+        bgbackground           = clrBackVanilla;
+        }
+     else if (oldTheme == themeVanilla) {
+        Setup.SmallFonts       = 1; data.SmallFonts   = Setup.SmallFonts;
+        Setup.ChannelLogo      = 1; data.ChannelLogo  = Setup.ChannelLogo;
+        Setup.Symbol           = 1; data.Symbol       = Setup.Symbol;
+        Setup.TimeBar          = 1; data.TimeBar      = Setup.TimeBar;
+        Setup.ProgressBar      = 1; data.ProgressBar  = Setup.ProgressBar;
+        Setup.ShowWeekdays     = 1; data.ShowWeekdays = Setup.ShowWeekdays;
+        bgbackground           = Setup.BgClrBackground;
+        }
+     Set();
+     }
+
+  return state;
+}
+
+// --- cMenuSetupColors --------------------------------------------------------
+
+class cMenuSetupColors : public cMenuSetupBase {
+private:
+  virtual void Set(void);
+  virtual void SetColors(void);
+  eDvbColor GetFgColor(int color);
+  eDvbColor GetBgColor(int color);
+  cColorSchemeSetup *scheme;
+  int lastcolor;
+  const char * BgColorValue[15];
+  const char * FgColorValue[24];
+  static const char * const TransparencyValue[];
+  static const char * const RedValue[];
+  static const char * const GreenValue[];
+  static const char * const BlueValue[];
+public:
+  cMenuSetupColors(cColorSchemeSetup *Scheme);
+  ~cMenuSetupColors();
+  virtual eOSState ProcessKey(eKeys Key);
+  };
+
+cMenuSetupColors::cMenuSetupColors(cColorSchemeSetup *Scheme)
+{
+  scheme = Scheme;
+
+  BgColorValue[0]  = tr("Setup.Colors$Background");
+  BgColorValue[1]  = tr("Setup.Colors$Channel Name");
+  BgColorValue[2]  = tr("Setup.Colors$Channel Number");
+  BgColorValue[3]  = tr("Setup.Colors$EPG Time");
+  BgColorValue[4]  = tr("Setup.Colors$EPG Data");
+  BgColorValue[5]  = tr("Setup.Colors$Title Line");
+  BgColorValue[6]  = tr("Setup.Colors$Scroll Line");
+  BgColorValue[7]  = tr("Setup.Colors$Red Button");
+  BgColorValue[8]  = tr("Setup.Colors$Green Button");
+  BgColorValue[9]  = tr("Setup.Colors$Yellow Button");
+  BgColorValue[10] = tr("Setup.Colors$Blue Button");
+  BgColorValue[11] = tr("Setup.Colors$Error Line");
+  BgColorValue[12] = tr("Setup.Colors$Info Line");
+  BgColorValue[13] = tr("Setup.Colors$Confirm Line");
+  BgColorValue[14] = NULL;
+
+  FgColorValue[0]  = tr("Setup.Colors$Black");
+  FgColorValue[1]  = tr("Setup.Colors$White");
+  FgColorValue[2]  = tr("Setup.Colors$Red");
+  FgColorValue[3]  = tr("Setup.Colors$Green");
+  FgColorValue[4]  = tr("Setup.Colors$Yellow");
+  FgColorValue[5]  = tr("Setup.Colors$Magenta");
+  FgColorValue[6]  = tr("Setup.Colors$Blue");
+  FgColorValue[7]  = tr("Setup.Colors$Cyan");
+  FgColorValue[8]  = tr("Setup.Colors$Grey");
+  FgColorValue[9]  = tr("Setup.Colors$Transparent");
+  FgColorValue[10] = tr("Setup.Colors$Background");
+  FgColorValue[11] = tr("Setup.Colors$Channel Name");
+  FgColorValue[12] = tr("Setup.Colors$Channel Number");
+  FgColorValue[13] = tr("Setup.Colors$EPG Time");
+  FgColorValue[14] = tr("Setup.Colors$Title Line");
+  FgColorValue[15] = tr("Setup.Colors$Scroll Line");
+  FgColorValue[16] = tr("Setup.Colors$Red Button");
+  FgColorValue[17] = tr("Setup.Colors$Green Button");
+  FgColorValue[18] = tr("Setup.Colors$Yellow Button");
+  FgColorValue[19] = tr("Setup.Colors$Blue Button");
+  FgColorValue[20] = tr("Setup.Colors$Error Line");
+  FgColorValue[21] = tr("Setup.Colors$Info Line");
+  FgColorValue[22] = tr("Setup.Colors$Confirm Line");
+  FgColorValue[23] = NULL;
+
+  Set();
+}
+
+cMenuSetupColors::~cMenuSetupColors()
+{
+  bgscrolline = scheme->BgClrScrolLine;
+  fgscrolline = GetFgColor(scheme->ClrScrolLine);
+}
+
+const char * const cMenuSetupColors::TransparencyValue[] =
+{
+  "                              ",
+  "||                            ",
+  "||||                          ",
+  "||||||                        ",
+  "||||||||                      ",
+  "||||||||||                    ",
+  "||||||||||||                  ",
+  "||||||||||||||                ",
+  "||||||||||||||||              ",
+  "||||||||||||||||||            ",
+  "||||||||||||||||||||          ",
+  "||||||||||||||||||||||        ",
+  "||||||||||||||||||||||||      ",
+  "||||||||||||||||||||||||||    ",
+  "||||||||||||||||||||||||||||  ",
+  "||||||||||||||||||||||||||||||",
+  NULL
+};
+
+const char * const cMenuSetupColors::RedValue[] =
+{
+  "                              ",
+  "||                            ",
+  "||||                          ",
+  "||||||                        ",
+  "||||||||                      ",
+  "||||||||||                    ",
+  "||||||||||||                  ",
+  "||||||||||||||                ",
+  "||||||||||||||||              ",
+  "||||||||||||||||||            ",
+  "||||||||||||||||||||          ",
+  "||||||||||||||||||||||        ",
+  "||||||||||||||||||||||||      ",
+  "||||||||||||||||||||||||||    ",
+  "||||||||||||||||||||||||||||  ",
+  "||||||||||||||||||||||||||||||",
+  NULL
+};
+
+const char * const cMenuSetupColors::GreenValue[] =
+{
+  "                              ",
+  "||                            ",
+  "||||                          ",
+  "||||||                        ",
+  "||||||||                      ",
+  "||||||||||                    ",
+  "||||||||||||                  ",
+  "||||||||||||||                ",
+  "||||||||||||||||              ",
+  "||||||||||||||||||            ",
+  "||||||||||||||||||||          ",
+  "||||||||||||||||||||||        ",
+  "||||||||||||||||||||||||      ",
+  "||||||||||||||||||||||||||    ",
+  "||||||||||||||||||||||||||||  ",
+  "||||||||||||||||||||||||||||||",
+  NULL
+};
+
+const char * const cMenuSetupColors::BlueValue[] =
+{
+  "                              ",
+  "||                            ",
+  "||||                          ",
+  "||||||                        ",
+  "||||||||                      ",
+  "||||||||||                    ",
+  "||||||||||||                  ",
+  "||||||||||||||                ",
+  "||||||||||||||||              ",
+  "||||||||||||||||||            ",
+  "||||||||||||||||||||          ",
+  "||||||||||||||||||||||        ",
+  "||||||||||||||||||||||||      ",
+  "||||||||||||||||||||||||||    ",
+  "||||||||||||||||||||||||||||  ",
+  "||||||||||||||||||||||||||||||",
+  NULL
+};
+
+eDvbColor cMenuSetupColors::GetBgColor(int color)
+{
+  switch (color) {
+    case 0:  return clrBackground;
+    case 1:  return clrChannelName;
+    case 2:  return clrChannelDate;
+    case 3:  return clrEpgTime;
+    case 4:  return clrEpgData;
+    case 5:  return clrTitleLine;
+    case 6:  return clrScrolLine;
+    case 7:  return clrHelpRed;
+    case 8:  return clrHelpGreen;
+    case 9:  return clrHelpYellow;
+    case 10: return clrHelpBlue;
+    case 11: return clrErrorLine;
+    case 12: return clrInfoLine;
+    case 13: return clrConfirmLine;
+    default: break;
+    }
+  return clrBackground;
+}
+
+eDvbColor cMenuSetupColors::GetFgColor(int color)
+{
+  switch (color) {
+    case 0:  return clrBlack;
+    case 1:  return clrWhite;
+    case 2:  return clrRed;
+    case 3:  return clrGreen;
+    case 4:  return clrYellow;
+    case 5:  return clrMagenta;
+    case 6:  return clrBlue;
+    case 7:  return clrCyan;
+    case 8:  return clrGrey;
+    case 9:  return clrTransparent;
+    case 10: return clrBackground;
+    case 11: return clrChannelName;
+    case 12: return clrChannelDate;
+    case 13: return clrEpgTime;
+    case 14: return clrTitleLine;
+    case 15: return clrScrolLine;
+    case 16: return clrHelpRed;
+    case 17: return clrHelpGreen;
+    case 18: return clrHelpYellow;
+    case 19: return clrHelpBlue;
+    case 20: return clrErrorLine;
+    case 21: return clrInfoLine;
+    case 22: return clrConfirmLine;
+    default: break;
+    }
+  return clrBlack;
+}
+
+void cMenuSetupColors::SetColors(void)
+{
+  lastcolor = (data.Red                ) | (data.Red           <<  4) |
+              (data.Green         <<  8) | (data.Green         << 12) |
+              (data.Blue          << 16) | (data.Blue          << 20) |
+              (data.Transparency  << 24) | (data.Transparency  << 28);
+
+  (eDvbColor)fgchannelname = GetFgColor(scheme->ClrChannelName);
+  (eDvbColor)fgchanneldate = GetFgColor(scheme->ClrChannelDate);
+  (eDvbColor)fgepgtime     = GetFgColor(scheme->ClrEpgTime);
+  (eDvbColor)fgtitle       = GetFgColor(scheme->ClrTitle);
+  (eDvbColor)fgsubtitle    = GetFgColor(scheme->ClrSubTitle);
+  (eDvbColor)fgmenufont    = GetFgColor(scheme->ClrMenuFont);
+  (eDvbColor)fgtitleline   = GetFgColor(scheme->ClrTitleLine);
+  (eDvbColor)fgscrolline   = GetFgColor(scheme->ClrScrolLine);
+  (eDvbColor)volumebar     = GetFgColor(scheme->ClrVolumeBar);
+  (eDvbColor)timebar1      = GetFgColor(scheme->ClrTimeBar1);
+  (eDvbColor)timebar2      = GetFgColor(scheme->ClrTimeBar2);
+  (eDvbColor)fgsymbolon    = GetFgColor(scheme->ClrSymbolOn);
+  (eDvbColor)fgsymboloff   = GetFgColor(scheme->ClrSymbolOff);
+  (eDvbColor)fgerrorfont   = GetFgColor(scheme->ClrErrorFont);
+  (eDvbColor)fginfofont    = GetFgColor(scheme->ClrInfoFont);
+  (eDvbColor)fgconfirmfont = GetFgColor(scheme->ClrConfirmFont);
+
+  switch (data.BgColor) {
+    case 0:
+         // clrBackground
+         bgbackground = Setup.Theme == themeVanilla ? clrBackVanilla : lastcolor;
+         scheme->BgClrBackground = (eDvbColor)bgbackground;
+         bgscrolline = scheme->BgClrScrolLine;
+         break;
+    case 1:
+         // clrChannelName
+         bgchannelname = lastcolor;
+         scheme->BgClrChannelName = (eDvbColor)bgchannelname;
+         bgscrolline = bgchannelname;
+         fgscrolline = fgchannelname;
+         break;
+    case 2:
+         // clrChannelDate
+         bgchanneldate = lastcolor;
+         scheme->BgClrChannelDate = (eDvbColor)bgchanneldate;
+         bgscrolline = bgchanneldate;
+         fgscrolline = fgchanneldate;
+         break;
+    case 3:
+         // clrEpgTime
+         bgepgtime = lastcolor;
+         scheme->BgClrEpgTime = (eDvbColor)bgepgtime;
+         bgscrolline = bgepgtime;
+         fgscrolline = fgepgtime;
+         break;
+    case 4:
+         // clrEpgData
+         bgepgdata = lastcolor;
+         scheme->BgClrEpgData = (eDvbColor)bgepgdata;
+         bgscrolline = bgepgdata;
+         fgscrolline = fgtitle;
+         break;
+    case 5:
+         // clrTitleLine
+         bgtitleline = lastcolor; 
+         scheme->BgClrTitleLine = (eDvbColor)bgtitleline;
+         bgscrolline = bgtitleline;
+         fgscrolline = fgtitleline;
+         break;
+    case 6:
+         // clrScrolLine
+         bgscrolline = lastcolor;
+         scheme->BgClrScrolLine = (eDvbColor)bgscrolline;
+         break;
+    case 7:
+         // clrHelpRed
+         bghelpred = lastcolor;
+         scheme->BgClrHelpRed = (eDvbColor)bghelpred;
+         bgscrolline = bghelpred;
+         fgscrolline = clrWhite;
+         break;
+    case 8:
+         // clrHelpGreen
+         bghelpgreen = lastcolor;
+         scheme->BgClrHelpGreen = (eDvbColor)bghelpgreen;
+         bgscrolline = bghelpgreen;
+         fgscrolline = clrBlack;
+         break;
+    case 9:
+         // clrHelpYellow
+         bghelpyellow = lastcolor;
+         scheme->BgClrHelpYellow = (eDvbColor)bghelpyellow;
+         bgscrolline = bghelpyellow;
+         fgscrolline = clrBlack;
+         break;
+    case 10:
+         // clrHelpBlue
+         bghelpblue = lastcolor;
+         scheme->BgClrHelpBlue = (eDvbColor)bghelpblue;
+         bgscrolline = bghelpblue;
+         fgscrolline = clrWhite;
+         break;
+    case 11:
+         // clrErrorLine
+         bgerrorline = lastcolor;
+         scheme->BgClrErrorLine = (eDvbColor)bgerrorline;
+         bgscrolline = bgerrorline;
+         fgscrolline = fgerrorfont;
+         break;
+    case 12:
+         // clrInfoLine
+         bginfoline = lastcolor;
+         scheme->BgClrInfoLine = (eDvbColor)bginfoline;
+         bgscrolline = bginfoline;
+         fgscrolline = fginfofont;
+         break;
+    case 13:
+         // clrConfirmLine
+         bgconfirmline = lastcolor;
+         scheme->BgClrConfirmLine = (eDvbColor)bgconfirmline;
+         bgscrolline = bgconfirmline;
+         fgscrolline = fgconfirmfont;
+         break;
+    default:
+         break;
+    }
+}
+
+void cMenuSetupColors::Set(void)
+{
+  int current = Current();
+
+  if (data.BgColor == 6)
+     lastcolor      = scheme->BgClrScrolLine;
+  else
+     lastcolor      = GetBgColor(data.BgColor);
+  data.Red          = (lastcolor & 0x0000000F);
+  data.Green        = (lastcolor & 0x00000F00) >>  8;
+  data.Blue         = (lastcolor & 0x000F0000) >> 16;
+  data.Transparency = (lastcolor & 0x0F000000) >> 24;
+
+  Clear();
+  SetSection(tr("Colors"));
+
+  Add(new cMenuEditStrItem( tr("Setup.Colors$Default Description"),   scheme->Description,   MaxFileName, tr(FileNameChars)));
+  Add(new cMenuEditStrItem( tr("Setup.Colors$Localized Description"), scheme->DescriptionX,  MaxFileName, tr(FileNameChars)));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Volumebar"),             &scheme->ClrVolumeBar, 23, FgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Symbol Light Active"),   &scheme->ClrSymbolOn,  23, FgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Symbol Light Off"),      &scheme->ClrSymbolOff, 23, FgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Timebar Background"),    &scheme->ClrTimeBar1,  23, FgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Timebar Variable"),      &scheme->ClrTimeBar2,  23, FgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$Variable Colors"),       &data.BgColor,         14, BgColorValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$  Transparency Value"),  &data.Transparency,    16, TransparencyValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$  Red Value"),           &data.Red,             16, RedValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$  Green Value"),         &data.Green,           16, GreenValue));
+  Add(new cMenuEditStraItem(tr("Setup.Colors$  Blue Value"),          &data.Blue,            16, BlueValue));
+  switch (data.BgColor) {
+    case 0:
+         // clrBackground
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Main Menu"), &scheme->ClrMenuFont, 23, FgColorValue));
+         break;
+    case 1:
+         // clrChannelName
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Channel Name"), &scheme->ClrChannelName, 23, FgColorValue));
+         break;
+    case 2:
+         // clrChannelDate
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Channel Number"), &scheme->ClrChannelDate, 23, FgColorValue));
+         break;
+    case 3:
+         // clrEpgTime
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor EPG Time"), &scheme->ClrEpgTime, 23, FgColorValue));
+         break;
+    case 4:
+         // clrEpgData
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor EPG Title"),    &scheme->ClrTitle,    23, FgColorValue));
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor EPG Subtitle"), &scheme->ClrSubTitle, 23, FgColorValue));
+         break;
+    case 5:
+         // clrTitleLine
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Title Line"), &scheme->ClrTitleLine, 23, FgColorValue));
+         break;
+    case 6:
+         // clrScrolLine
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Scroll Line"), &scheme->ClrScrolLine, 23, FgColorValue));
+         break;
+    case 7:
+         // clrHelpRed
+         break;
+    case 8:
+         // clrHelpGreen
+         break;
+    case 9:
+         // clrHelpYellow
+         break;
+    case 10:
+         // clrHelpBlue
+         break;
+    case 11:
+         // clrErrorLine
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Error Line"), &scheme->ClrErrorFont, 23, FgColorValue));
+         break;
+    case 12:
+         // clrInfoLine
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Info Line"), &scheme->ClrInfoFont, 23, FgColorValue));
+         break;
+    case 13:
+         // clrConfirmLine
+         Add(new cMenuEditStraItem(tr("Setup.Colors$Fontcolor Confirm Line"), &scheme->ClrConfirmFont, 23, FgColorValue));
+         break;
+    default:
+         break;
+    }
+
+  SetHelp("","","","");
+  SetCurrent(Get(current));
+}
+
+eOSState cMenuSetupColors::ProcessKey(eKeys Key)
+{  
+  int osdBgColor = data.BgColor;
+
+  eOSState state = cMenuSetupBase::ProcessKey(Key);
+
+  if (data.BgColor != osdBgColor) {
+     Setup.BgColor = data.BgColor;
+     Set();
+     }
+
+  if ((Key != kNone) && (Current() > 1)) {
+     SetColors();
+     Display();
+     }
+
+  return state;
+}
+
+// --- cMenuSetupColorSchemes ---------------------------------------------------
+
+#define SCHEMESDIR "/schemes"
+#define SCHEMESEXT "*.scheme"
+#define MAXCOLORSCHEMES 30
+
+class cMenuSetupColorSchemes : public cMenuSetupBase {
+private:
+  cColorSchemeSetup *pArray[MAXCOLORSCHEMES];
+public:
+  cMenuSetupColorSchemes(void);
+  ~cMenuSetupColorSchemes();
+  void Preview(int index);
+  void SaveColors(int index);
+  void SaveScheme(int index);
+  virtual eOSState ProcessKey(eKeys Key);
+  };
+
+cMenuSetupColorSchemes::cMenuSetupColorSchemes(void)
+{
+  char *buffer = NULL;
+  int index = 0;
+
+  Clear();
+  SetSection(tr("Color Schemes"));
+  SetHelp(tr("Edit"), "", "", tr("Setup.Scheme$Save"));
+
+  for (int i = 0; i < MAXCOLORSCHEMES; i++)
+      pArray[i] = NULL;
+
+  pArray[0] = new cColorSchemeSetup;
+  strn0cpy(pArray[0]->Description, "Current Color Scheme", MaxFileName);
+  strn0cpy(pArray[0]->DescriptionX, tr("Setup.Scheme$Current Color Scheme"), MaxFileName);
+  pArray[0]->BgClrBackground  = bgbackground;
+  pArray[0]->BgClrChannelName = bgchannelname;
+  pArray[0]->BgClrChannelDate = bgchanneldate;
+  pArray[0]->BgClrEpgTime     = bgepgtime;
+  pArray[0]->BgClrEpgData     = bgepgdata;
+  pArray[0]->BgClrTitleLine   = bgtitleline;
+  pArray[0]->BgClrScrolLine   = bgscrolline;
+  pArray[0]->BgClrHelpRed     = bghelpred;
+  pArray[0]->BgClrHelpGreen   = bghelpgreen;
+  pArray[0]->BgClrHelpYellow  = bghelpyellow;
+  pArray[0]->BgClrHelpBlue    = bghelpblue;
+  pArray[0]->BgClrErrorLine   = bgerrorline;
+  pArray[0]->BgClrInfoLine    = bginfoline;
+  pArray[0]->BgClrConfirmLine = bgconfirmline;
+  pArray[0]->ClrChannelName   = Setup.ClrChannelName;
+  pArray[0]->ClrChannelDate   = Setup.ClrChannelDate;
+  pArray[0]->ClrEpgTime       = Setup.ClrEpgTime;
+  pArray[0]->ClrTitle         = Setup.ClrTitle;
+  pArray[0]->ClrSubTitle      = Setup.ClrSubTitle;
+  pArray[0]->ClrMenuFont      = Setup.ClrMenuFont;
+  pArray[0]->ClrTitleLine     = Setup.ClrTitleLine;
+  pArray[0]->ClrScrolLine     = Setup.ClrScrolLine;
+  pArray[0]->ClrVolumeBar     = Setup.ClrVolumeBar;
+  pArray[0]->ClrTimeBar1      = Setup.ClrTimeBar1;
+  pArray[0]->ClrTimeBar2      = Setup.ClrTimeBar2;
+  pArray[0]->ClrSymbolOn      = Setup.ClrSymbolOn;
+  pArray[0]->ClrSymbolOff     = Setup.ClrSymbolOff;
+  pArray[0]->ClrErrorFont     = Setup.ClrErrorFont;
+  pArray[0]->ClrInfoFont      = Setup.ClrInfoFont;
+  pArray[0]->ClrConfirmFont   = Setup.ClrConfirmFont;
+  Add(new cOsdItem(pArray[0]->DescriptionX));
+  index++;
+
+  asprintf(&buffer, "find %s%s -follow -type f -name '%s' |sort", ConfigDirectory, SCHEMESDIR, SCHEMESEXT);
+  FILE *p = popen(buffer, "r");
+  free(buffer);
+  if (p) {
+     char *s;
+     while (((s = readline(p)) != NULL) && (index < MAXCOLORSCHEMES)) {
+           pArray[index] = new cColorSchemeSetup;
+           pArray[index]->Load(s);
+           asprintf(&buffer, "%s", isempty(pArray[index]->DescriptionX) ? isempty(pArray[index]->Description) ? (s + strlen(ConfigDirectory) + strlen(SCHEMESDIR) + 1) : pArray[index]->Description : pArray[index]->DescriptionX);
+           Add(new cOsdItem(buffer));
+           free(buffer);
+           index++;
+           }
+     }
+}
+
+cMenuSetupColorSchemes::~cMenuSetupColorSchemes()
+{
+  for (int i = 0; i < MAXCOLORSCHEMES; i++) {
+      if (pArray[i]) {
+         free(pArray[i]);
+         }
+      }
+
+  (eDvbColor)bgbackground  = Setup.BgClrBackground;
+  (eDvbColor)bgchannelname = Setup.BgClrChannelName;
+  (eDvbColor)bgchanneldate = Setup.BgClrChannelDate;
+  (eDvbColor)bgepgtime     = Setup.BgClrEpgTime;
+  (eDvbColor)bgepgdata     = Setup.BgClrEpgData;
+  (eDvbColor)bgtitleline   = Setup.BgClrTitleLine;
+  (eDvbColor)bgscrolline   = Setup.BgClrScrolLine;
+  (eDvbColor)bghelpred     = Setup.BgClrHelpRed;
+  (eDvbColor)bghelpgreen   = Setup.BgClrHelpGreen;
+  (eDvbColor)bghelpyellow  = Setup.BgClrHelpYellow;
+  (eDvbColor)bghelpblue    = Setup.BgClrHelpBlue;
+  (eDvbColor)bgerrorline   = Setup.BgClrErrorLine;
+  (eDvbColor)bginfoline    = Setup.BgClrInfoLine;
+  (eDvbColor)bgconfirmline = Setup.BgClrConfirmLine;
+
+  (eDvbColor)fgchannelname = LookupColor(Setup.ClrChannelName);
+  (eDvbColor)fgchanneldate = LookupColor(Setup.ClrChannelDate);
+  (eDvbColor)fgepgtime     = LookupColor(Setup.ClrEpgTime);
+  (eDvbColor)fgtitle       = LookupColor(Setup.ClrTitle);
+  (eDvbColor)fgsubtitle    = LookupColor(Setup.ClrSubTitle);
+  (eDvbColor)fgmenufont    = LookupColor(Setup.ClrMenuFont);
+  (eDvbColor)fgtitleline   = LookupColor(Setup.ClrTitleLine);
+  (eDvbColor)fgscrolline   = LookupColor(Setup.ClrScrolLine);
+  (eDvbColor)volumebar     = LookupColor(Setup.ClrVolumeBar);
+  (eDvbColor)timebar1      = LookupColor(Setup.ClrTimeBar1);
+  (eDvbColor)timebar2      = LookupColor(Setup.ClrTimeBar2);
+  (eDvbColor)fgsymbolon    = LookupColor(Setup.ClrSymbolOn);
+  (eDvbColor)fgsymboloff   = LookupColor(Setup.ClrSymbolOff);
+  (eDvbColor)fgerrorfont   = LookupColor(Setup.ClrErrorFont);
+  (eDvbColor)fginfofont    = LookupColor(Setup.ClrInfoFont);
+  (eDvbColor)fgconfirmfont = LookupColor(Setup.ClrConfirmFont);
+}
+
+void cMenuSetupColorSchemes::Preview(int index)
+{
+  (eDvbColor)bgbackground  = pArray[index]->BgClrBackground;
+  (eDvbColor)bgchannelname = pArray[index]->BgClrChannelName;
+  (eDvbColor)bgchanneldate = pArray[index]->BgClrChannelDate;
+  (eDvbColor)bgepgtime     = pArray[index]->BgClrEpgTime;
+  (eDvbColor)bgepgdata     = pArray[index]->BgClrEpgData;
+  (eDvbColor)bgtitleline   = pArray[index]->BgClrTitleLine;
+  (eDvbColor)bgscrolline   = pArray[index]->BgClrScrolLine;
+  (eDvbColor)bghelpred     = pArray[index]->BgClrHelpRed;
+  (eDvbColor)bghelpgreen   = pArray[index]->BgClrHelpGreen;
+  (eDvbColor)bghelpyellow  = pArray[index]->BgClrHelpYellow;
+  (eDvbColor)bghelpblue    = pArray[index]->BgClrHelpBlue;
+  (eDvbColor)bgerrorline   = pArray[index]->BgClrErrorLine;
+  (eDvbColor)bginfoline    = pArray[index]->BgClrInfoLine;
+  (eDvbColor)bgconfirmline = pArray[index]->BgClrConfirmLine;
+
+  (eDvbColor)fgchannelname = LookupColor(pArray[index]->ClrChannelName);
+  (eDvbColor)fgchanneldate = LookupColor(pArray[index]->ClrChannelDate);
+  (eDvbColor)fgepgtime     = LookupColor(pArray[index]->ClrEpgTime);
+  (eDvbColor)fgtitle       = LookupColor(pArray[index]->ClrTitle);
+  (eDvbColor)fgsubtitle    = LookupColor(pArray[index]->ClrSubTitle);
+  (eDvbColor)fgmenufont    = LookupColor(pArray[index]->ClrMenuFont);
+  (eDvbColor)fgtitleline   = LookupColor(pArray[index]->ClrTitleLine);
+  (eDvbColor)fgscrolline   = LookupColor(pArray[index]->ClrScrolLine);
+  (eDvbColor)volumebar     = LookupColor(pArray[index]->ClrVolumeBar);
+  (eDvbColor)timebar1      = LookupColor(pArray[index]->ClrTimeBar1);
+  (eDvbColor)timebar2      = LookupColor(pArray[index]->ClrTimeBar2);
+  (eDvbColor)fgsymbolon    = LookupColor(pArray[index]->ClrSymbolOn);
+  (eDvbColor)fgsymboloff   = LookupColor(pArray[index]->ClrSymbolOff);
+  (eDvbColor)fgerrorfont   = LookupColor(pArray[index]->ClrErrorFont);
+  (eDvbColor)fginfofont    = LookupColor(pArray[index]->ClrInfoFont);
+  (eDvbColor)fgconfirmfont = LookupColor(pArray[index]->ClrConfirmFont);
+
+  Display();
+}
+
+void cMenuSetupColorSchemes::SaveColors(int index)
+{
+  data.BgClrBackground  = pArray[index]->BgClrBackground;
+  data.BgClrChannelName = pArray[index]->BgClrChannelName;
+  data.BgClrChannelDate = pArray[index]->BgClrChannelDate;
+  data.BgClrEpgTime     = pArray[index]->BgClrEpgTime;
+  data.BgClrEpgData     = pArray[index]->BgClrEpgData;
+  data.BgClrTitleLine   = pArray[index]->BgClrTitleLine;
+  data.BgClrScrolLine   = pArray[index]->BgClrScrolLine;
+  data.BgClrHelpRed     = pArray[index]->BgClrHelpRed;
+  data.BgClrHelpGreen   = pArray[index]->BgClrHelpGreen;
+  data.BgClrHelpYellow  = pArray[index]->BgClrHelpYellow;
+  data.BgClrHelpBlue    = pArray[index]->BgClrHelpBlue;
+  data.BgClrErrorLine   = pArray[index]->BgClrErrorLine;
+  data.BgClrInfoLine    = pArray[index]->BgClrInfoLine;
+  data.BgClrConfirmLine = pArray[index]->BgClrConfirmLine;
+
+  data.ClrChannelName   = pArray[index]->ClrChannelName;
+  data.ClrChannelDate   = pArray[index]->ClrChannelDate;
+  data.ClrEpgTime       = pArray[index]->ClrEpgTime;
+  data.ClrTitle         = pArray[index]->ClrTitle;
+  data.ClrSubTitle      = pArray[index]->ClrSubTitle;
+  data.ClrMenuFont      = pArray[index]->ClrMenuFont;
+  data.ClrTitleLine     = pArray[index]->ClrTitleLine;
+  data.ClrScrolLine     = pArray[index]->ClrScrolLine;
+  data.ClrVolumeBar     = pArray[index]->ClrVolumeBar;
+  data.ClrTimeBar1      = pArray[index]->ClrTimeBar1;
+  data.ClrTimeBar2      = pArray[index]->ClrTimeBar2;
+  data.ClrSymbolOn      = pArray[index]->ClrSymbolOn;
+  data.ClrSymbolOff     = pArray[index]->ClrSymbolOff;
+  data.ClrErrorFont     = pArray[index]->ClrErrorFont;
+  data.ClrInfoFont      = pArray[index]->ClrInfoFont;
+  data.ClrConfirmFont   = pArray[index]->ClrConfirmFont;
+
+  Preview(index);
+  Store();
+}
+
+void cMenuSetupColorSchemes::SaveScheme(int index)
+{
+  SaveColors(index);
+  if (index) {
+     if (pArray[index]->Save())
+        Interface->Info(tr("Setup.Scheme$Color scheme saved."));
+     else
+        Interface->Error(tr("Setup.Scheme$Error while saving color scheme!"));
+     }
+}
+
+eOSState cMenuSetupColorSchemes::ProcessKey(eKeys Key)
+{
+  int OldIndex, NewIndex;
+
+  OldIndex = Current();
+  eOSState state = cOsdMenu::ProcessKey(Key);
+  NewIndex = Current();
+
+  if (OldIndex != NewIndex) {
+     Preview(NewIndex);
+  }
+
+  if (state == osUnknown) {
+     switch (Key) {
+       case kRed:
+            return AddSubMenu(new cMenuSetupColors(pArray[NewIndex]));
+       case kOk:
+            SaveColors(NewIndex);
+            return osBack;
+       case kBlue:
+            SaveScheme(NewIndex);
+            return osContinue;
+       default:
+            break;
+       }
+     }
+
+  return state;
+}
+
 // --- cMenuSetupEPG ---------------------------------------------------------
 
 class cMenuSetupEPG : public cMenuSetupBase {
@@ -2227,6 +3130,9 @@
   Add(new cMenuEditBoolItem(tr("Setup.Recording$Record Dolby Digital"),      &data.RecordDolbyDigital));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Max. video file size (MB)"), &data.MaxVideoFileSize, MINVIDEOFILESIZE, MAXVIDEOFILESIZE));
   Add(new cMenuEditBoolItem(tr("Setup.Recording$Split edited files"),        &data.SplitEditedFiles));
+  Add(new cMenuEditBoolItem(tr("Setup.Recording$Show Date"),                 &data.ShowRecDate));
+  Add(new cMenuEditBoolItem(tr("Setup.Recording$Show Time"),                 &data.ShowRecTime));
+  Add(new cMenuEditBoolItem(tr("Setup.Recording$Show Length"),               &data.ShowRecLength));
 }
 
 // --- cMenuSetupReplay ------------------------------------------------------
@@ -2360,6 +3266,8 @@
   Add(new cOsdItem(hk(tr("Miscellaneous")), osUser8));
   if (cPluginManager::HasPlugins())
   Add(new cOsdItem(hk(tr("Plugins")),       osUser9));
+  Add(new cOsdItem(hk(tr("OSD Themes")),    osUser11));
+  Add(new cOsdItem(hk(tr("Color Schemes")), osUser12));
   Add(new cOsdItem(hk(tr("Restart")),       osUser10));
 }
 
@@ -2387,6 +3295,8 @@
     case osUser7: return AddSubMenu(new cMenuSetupReplay);
     case osUser8: return AddSubMenu(new cMenuSetupMisc);
     case osUser9: return AddSubMenu(new cMenuSetupPlugins);
+    case osUser11: return AddSubMenu(new cMenuSetupOSDThemes);
+    case osUser12: return AddSubMenu(new cMenuSetupColorSchemes);
     case osUser10: return Restart();
     default: ;
     }
@@ -2464,9 +3374,41 @@
   int Minutes = int(double(FreeMB) / MB_PER_MINUTE);
   int Hours = Minutes / 60;
   Minutes %= 60;
+  if (Setup.Theme != themeVanilla)
+  snprintf(buffer, sizeof(buffer), "%s   %s %d%%   %2d:%02d %s", tr("VDR"), tr("Disk"), Percent, Hours, Minutes, tr("free"));
+  else
   snprintf(buffer, sizeof(buffer), "%s  -  %s %d%%  -  %2d:%02d %s", tr("VDR"), tr("Disk"), Percent, Hours, Minutes, tr("free"));
   SetTitle(buffer);
 
+  if (Setup.MenuCommandPos) {
+  // Replay control:
+
+  if (replaying)
+     Add(new cOsdItem(tr(" Stop replaying"), osStopReplay));
+
+  // Record control:
+
+  if (cRecordControls::StopPrimary()) {
+     char *buffer = NULL;
+     asprintf(&buffer, "%s%s", STOP_RECORDING, ON_PRIMARY_INTERFACE);
+     Add(new cOsdItem(buffer, osStopRecord));
+     free(buffer);
+     }
+
+  const char *s = NULL;
+  while ((s = cRecordControls::GetInstantId(s)) != NULL) {
+        char *buffer = NULL;
+        asprintf(&buffer, "%s%s", STOP_RECORDING, s);
+        Add(new cOsdItem(buffer, osStopRecord));
+        free(buffer);
+        }
+
+  // Editing control:
+
+  if (cCutter::Active())
+     Add(new cOsdItem(tr(" Cancel editing"), osCancelEdit));
+  }
+
   // Basic menu items:
 
   Add(new cOsdItem(hk(tr("Schedule")),   osSchedule));
@@ -2493,6 +3435,7 @@
   if (Commands.Count())
      Add(new cOsdItem(hk(tr("Commands")),  osCommands));
 
+  if (!Setup.MenuCommandPos) {
   // Replay control:
 
   if (replaying)
@@ -2519,6 +3462,7 @@
 
   if (cCutter::Active())
      Add(new cOsdItem(tr(" Cancel editing"), osCancelEdit));
+  }
 
   // Color buttons:
 
@@ -2629,10 +3573,16 @@
   group = -1;
   withInfo = !Switched || Setup.ShowInfoOnChSwitch;
   int EpgLines = withInfo ? 5 : 1;
+  if (Setup.Symbol) EpgLines++;
   lines = 0;
   number = 0;
   cChannel *channel = Channels.GetByNumber(Number);
-  Interface->Open(Setup.OSDwidth, Setup.ChannelInfoPos ? EpgLines : -EpgLines);
+  theme = new cDisplayChannelTheme;
+  if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)
+     Interface->Open(cDisplayChannelTheme::Width(), Setup.ChannelInfoPos ? cDisplayChannelTheme::Height(withInfo) : -cDisplayChannelTheme::Height(withInfo), true);
+  else
+     Interface->Open(Setup.OSDwidth, Setup.ChannelInfoPos ? EpgLines : -EpgLines, true);
+  Interface->Flush();
   if (channel) {
      DisplayChannel(channel);
      DisplayInfo();
@@ -2648,18 +3598,29 @@
   number = 0;
   lastTime = time_ms();
   withInfo = Setup.ShowInfoOnChSwitch;
-  int EpgLines = withInfo ? 5 : 1;
-  Interface->Open(Setup.OSDwidth, Setup.ChannelInfoPos ? EpgLines : -EpgLines);
+  int EpgLines = withInfo ? Setup.Symbol ? 2 : 1 : Setup.Symbol ? 2 : 1;
+  theme = new cDisplayChannelTheme;
+  if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)
+     Interface->Open(cDisplayChannelTheme::Width(), Setup.ChannelInfoPos ? cDisplayChannelTheme::Height(false) : -cDisplayChannelTheme::Height(false), true);
+  else
+     Interface->Open(Setup.OSDwidth, Setup.ChannelInfoPos ? EpgLines : -EpgLines, true);
+  Interface->Flush();
   ProcessKey(FirstKey);
 }
 
 cDisplayChannel::~cDisplayChannel()
 {
   Interface->Close();
+  if (theme) delete theme;
 }
 
 void cDisplayChannel::DisplayChannel(const cChannel *Channel)
 {
+  if (theme && (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)) {
+     theme->DrawChannel(Channel, number);
+     Interface->SetBitmap(0, 0, *theme);
+     return;
+     }
   int BufSize = Width() + 1;
   char buffer[BufSize];
   *buffer = 0;
@@ -2667,22 +3628,75 @@
      if (Channel->GroupSep())
         snprintf(buffer, BufSize, "%s", Channel->Name());
      else
+        if (Setup.Theme == themeElchi)
+        snprintf(buffer, BufSize, " %d%s  %s ", Channel->Number(), number ? "-" : "", Channel->Name());
+        else
         snprintf(buffer, BufSize, "%d%s  %s", Channel->Number(), number ? "-" : "", Channel->Name());
      }
   else if (number)
+     if (Setup.Theme == themeElchi)
+     snprintf(buffer, BufSize, " %d- ", number);
+     else
      snprintf(buffer, BufSize, "%d-", number);
   else
      snprintf(buffer, BufSize, "%s", tr("*** Invalid Channel ***"));
+  if (Setup.Theme == themeVanilla) {
   Interface->Fill(0, 0, Setup.OSDwidth, 1, clrBackground);
   Interface->Write(0, 0, buffer);
   const char *date = DayDateTime();
   Interface->Write(-strlen(date), 0, date);
   cStatus::MsgOsdChannel(buffer);
+  }
+  else {
+     const char *date = DayDateTime();
+     if (Setup.Symbol && Channel) {
+        Interface->Fill(0, 1, Setup.OSDwidth, 1, clrBackground);
+        Interface->Write(0, 1, buffer, (eDvbColor)fgchannelname, clrChannelName);
+        bool isrec = cRecordControls::Active();
+        eDvbFont OldFont = Interface->SetFont(fontSym);
+        Interface->Fill(0, 0, Setup.OSDwidth, 1, clrTransparent);
+        Interface->Fill(-strlen(date), 0, Setup.OSDwidth, 1, clrBackground);
+        char symbol[3] = "";
+        snprintf(symbol, sizeof(symbol), "%c%c", FSYM_WAVE_UP1, FSYM_WAVE_UP2);
+        Interface->Write(-strlen(date), 0, symbol, clrBackground, clrTransparent);
+        if (Channel->Vpid()) {
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_TELETEXT);
+           Interface->Write(-strlen(date) +  4, 1, symbol, Channel->Tpid()  ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff);
+           }
+        else {
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_MUSIC);
+           Interface->Write(-strlen(date) +  4, 1, symbol, (eDvbColor)fgsymbolon);
+           }
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_AUDIO);
+        Interface->Write(-strlen(date) +  7, 1, symbol, Channel->Apid2() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_DDIGITAL);
+        Interface->Write(-strlen(date) + 10, 1, symbol, Channel->Dpid1() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_ENCRYPTION);
+        Interface->Write(-strlen(date) + 13, 1, symbol, Channel->Ca()    ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_RECORD);
+        Interface->Write(-strlen(date) + 16, 1, symbol, isrec ? clrWhite : (eDvbColor)fgsymboloff, isrec ? clrRed : clrBackground);
+        Interface->SetFont(OldFont);
+        }
+     else {
+        Interface->Fill(0, Setup.Symbol ? 1 : 0, Setup.OSDwidth, 1, clrBackground);
+        Interface->Write(0, Setup.Symbol ? 1 : 0, buffer, (eDvbColor)fgchannelname, clrChannelName);  
+        }
+     eDvbFont OldFont = Interface->SetFont(fontSml);
+     Interface->Write(-strlen(date) + 5, 0, date, (eDvbColor)fgchanneldate, clrChannelName);  
+     Interface->SetFont(OldFont);
+     cStatus::MsgOsdChannel(buffer + 1);
+  }
 }
 
 void cDisplayChannel::DisplayInfo(void)
 {
   if (withInfo) {
+     if (theme && (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)) {
+        if (theme->DrawInfo())
+           lastTime = time_ms();
+        Interface->SetBitmap(0, 0, *theme);
+        return;
+        }
      const cEventInfo *Present = NULL, *Following = NULL;
      cMutexLock MutexLock;
      const cSchedules *Schedules = cSIProcessor::Schedules(MutexLock);
@@ -2708,25 +3722,56 @@
                  Lines++;
               }
            if (Lines > lines) {
-              const int t = 6;
-              int l = 1;
-              Interface->Fill(0, 1, Setup.OSDwidth, Lines, clrBackground);
+              const int t = 7;
+              int l = 0;
+              if (Setup.Symbol) l++;
+              Interface->Fill(0, l + 1, Setup.OSDwidth, Lines, clrBackground);
+              if (Setup.Theme != themeVanilla) Interface->Fill(0, l + 1, 6, 4, clrEpgTime);
               if (!isempty(PresentTitle)) {
-                 Interface->Write(0, l, Present->GetTimeString(), clrYellow, clrBackground);
-                 Interface->Write(t, l, PresentTitle, clrCyan, clrBackground);
-                 l++;
+                 Interface->Write(0, l + 1, Present->GetTimeString(), Setup.Theme == themeVanilla ? clrYellow : (eDvbColor)fgepgtime, Setup.Theme == themeVanilla ? clrBackground : clrEpgTime);
+                 Interface->Write(t, l + 1, PresentTitle, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgtitle, clrBackground);
                  }
               if (!isempty(PresentSubtitle)) {
-                 Interface->Write(t, l, PresentSubtitle, clrCyan, clrBackground);
-                 l++;
+                 eDvbFont OldFont = Interface->SetFont(fontSml);
+                 Interface->Write(t, l + 2, PresentSubtitle, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgsubtitle, clrBackground);
+                 Interface->SetFont(OldFont);
                  }
               if (!isempty(FollowingTitle)) {
-                 Interface->Write(0, l, Following->GetTimeString(), clrYellow, clrBackground);
-                 Interface->Write(t, l, FollowingTitle, clrCyan, clrBackground);
-                 l++;
+                 Interface->Write(0, l + 3, Following->GetTimeString(), Setup.Theme == themeVanilla ? clrYellow : (eDvbColor)fgepgtime, Setup.Theme == themeVanilla ? clrBackground : clrEpgTime);
+                 Interface->Write(t, l + 3, FollowingTitle, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgtitle, clrBackground);
                  }
               if (!isempty(FollowingSubtitle)) {
-                 Interface->Write(t, l, FollowingSubtitle, clrCyan, clrBackground);
+                 eDvbFont OldFont = Interface->SetFont(fontSml);
+                 Interface->Write(t, l + 4, FollowingSubtitle, Setup.Theme == themeVanilla ? clrCyan : (eDvbColor)fgsubtitle, clrBackground);
+                 Interface->SetFont(OldFont);
+                 }
+              if (Setup.TimeBar) {
+                 if (Present) {
+                    cBitmap *timeBar;
+                    int height = 108;
+                    int width = 10;
+                    float percent = 0;
+                    timeBar = NULL;
+                    timeBar = new cBitmap(width, height, 4);
+                    if (Present->GetDuration() != 0) {
+                       percent =  (float)(time(NULL) - Present->GetTime()) / (float)(Present->GetDuration());
+                       }
+                    if (percent < 0) percent = 0;
+                    if (percent > 1.0) percent = 1.0;
+                    // Draw the bar
+                    for (int x = 1; x < width - 1; x++) {
+                        for (int y = height - 1; y > 0; y--) {
+                            if ( y > (int)(percent*(float)height)) {
+                               timeBar->SetPixel(x, y, (eDvbColor)timebar1);
+                               } else {
+                               timeBar->SetPixel(x, y, (eDvbColor)timebar2);
+                               }
+                            }
+                        }
+                    Interface->SetBitmap(65, Setup.Symbol ? 54 : 27, *timeBar);
+                    if (timeBar)
+                       delete timeBar;
+                    }
                  }
               Interface->Flush();
               lines = Lines;
@@ -2741,7 +3786,9 @@
 void cDisplayChannel::Refresh(void)
 {
   Interface->Clear();
+  if (theme && (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)) theme->Reset();
   DisplayChannel(Channels.GetByNumber(cDevice::CurrentChannel()));
+  if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) return;
   lastTime = time_ms();
   lines = 0;
 }
@@ -2866,13 +3913,45 @@
   };
 
 cVolumeBar::cVolumeBar(int Width, int Height, int Current, int Total, const char *Prompt)
-:cBitmap(Width, Height, 2)
+:cBitmap(Width, Height, (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) ? 3 : 2)
 {
+  if (Setup.Theme == themeVanilla) {
   int l = Prompt ? cBitmap::Width(Prompt) : 0;
   int p = (Width - l) * Current / Total;
   Text(0, 0, Prompt, clrGreen);
   Fill(l, 0, p, Height - 1, clrGreen);
   Fill(l + p, 0, Width - 1, Height - 1, clrWhite);
+  }
+  else if (Setup.Theme == themeElchi) {
+     int l = Prompt ? cBitmap::Width(Prompt) : 0;
+     int p = (Width - l) * Current / Total;
+     Text(0, 0, Prompt, (eDvbColor)volumebar, clrTransparent);
+     Fill(l, 0, p, Height - 1, (eDvbColor)volumebar);
+     Fill(l + p, 0, Width - 1, Height - 1, clrTransparent);
+     }
+  else {
+     char symbol[3] = "";
+     int p = (Width - 56) * Current / Total;
+     // XXX: no way to tell char width in cBitmap-Font 
+     eDvbFont oldFont = SetFont(fontSym);
+     // clear area
+     Fill(0, 0, Width - 1, Height - 1, clrTransparent);
+     // volume bar w/ borders
+     Fill(14, Height - 27, Width - 1, Height - 1, clrBackground);
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+     Text(14, Height - 27, symbol, clrBackground, clrTransparent);
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT);
+     Text(Width - 14, Height - 27, symbol, clrBackground, clrTransparent);
+     Fill(28 + 2, Height - 23, 28 + p + 2, Height - 4, clrBlack);
+     Fill(28, Height - 24, 28 + p, Height - 5, (eDvbColor)volumebar);
+     // text area
+     SetFont(fontSml);
+     int pw = cBitmap::Width(Prompt);
+     Fill(1, 14, pw + 6, Height - 18, clrBlack);
+     Fill(0, 12, pw + 4, Height - 20, clrWhite);
+     Text(4, 12, Prompt, (eDvbColor)volumebar, clrWhite);
+     SetFont(oldFont);
+     }
 }
 
 // --- cDisplayVolume --------------------------------------------------------
@@ -2887,7 +3966,7 @@
 {
   displayVolume = this;
   timeout = time_ms() + (cDevice::PrimaryDevice()->IsMute() ? MUTETIMEOUT : VOLUMETIMEOUT);
-  Interface->Open(Setup.OSDwidth, -1);
+  Interface->Open(Setup.OSDwidth, (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) ? -2 : -1);
   Show();
 }
 
@@ -2902,7 +3981,10 @@
   cDevice *device = cDevice::PrimaryDevice();
   if (device->IsMute()) {
      Interface->Fill(0, 0, Width(), 1, clrTransparent);
+     if (Setup.Theme == themeVanilla)
      Interface->Write(0, 0, tr("Mute"), clrGreen);
+     else
+     Interface->Write(0, 0, tr("Mute"), clrWhite, clrRed);
      }
   else {
      int Current = cDevice::CurrentVolume();
@@ -2915,8 +3997,14 @@
      Interface->Fill(l, 0, p, 1, clrGreen);
      Interface->Fill(l + p, 0, Width() - l - p, 1, clrWhite);
 #else
+     if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) {
+        cVolumeBar VolumeBar2(Width() * cOsd::CellWidth(), 2 * cOsd::LineHeight(), Current, Total, Prompt);
+        Interface->SetBitmap(0, 0, VolumeBar2);
+        }
+     else {
      cVolumeBar VolumeBar(Width() * cOsd::CellWidth(), cOsd::LineHeight(), Current, Total, Prompt);
      Interface->SetBitmap(0, 0, VolumeBar);
+     }
 #endif
      }
 }
@@ -3166,7 +4254,7 @@
 bool cRecordControls::PauseLiveVideo(void)
 {
   Interface->Open(Setup.OSDwidth, -1);
-  Interface->Status(tr("Pausing live video..."));
+  Interface->Status(tr("Pausing live video..."), Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrCyan : clrInfoLine);
   Interface->Flush();
   cReplayControl::SetRecording(NULL, NULL); // make sure the new cRecordControl will set cReplayControl::LastReplayed()
   if (Start(NULL, true)) {
@@ -3232,15 +4320,6 @@
 
 // --- cProgressBar ----------------------------------------------------------
 
-class cProgressBar : public cBitmap {
-protected:
-  int total;
-  int Pos(int p) { return p * width / total; }
-  void Mark(int x, bool Start, bool Current);
-public:
-  cProgressBar(int Width, int Height, int Current, int Total, const cMarks &Marks);
-  };
-
 cProgressBar::cProgressBar(int Width, int Height, int Current, int Total, const cMarks &Marks)
 :cBitmap(Width, Height, 2)
 {
@@ -3286,6 +4365,7 @@
   lastCurrent = lastTotal = -1;
   timeoutShow = 0;
   timeSearchActive = false;
+  theme = new cReplayControlTheme;
   marks.Load(fileName);
   cRecording Recording(fileName);
   cStatus::MsgReplaying(this, Recording.Name());
@@ -3296,6 +4376,7 @@
   Hide();
   cStatus::MsgReplaying(this, NULL);
   Stop();
+  delete theme;
 }
 
 void cReplayControl::SetRecording(const char *FileName, const char *Title)
@@ -3357,6 +4438,9 @@
      Interface->Fill(12, 2, Width() - 22, 1, clrBackground);
 }
 
+int ffwdSymbols[] = { FSYM_FFWD, FSYM_FFWD1, FSYM_FFWD2, FSYM_FFWD3 };
+int rewSymbols[]  = { FSYM_REW,  FSYM_REW1,  FSYM_REW2,  FSYM_REW3  };
+
 void cReplayControl::ShowMode(void)
 {
   if (Setup.ShowReplayMode && !timeSearchActive) {
@@ -3373,12 +4457,16 @@
            Interface->Open(9, -1);
            Interface->Clear();
            XXX*/
+           if (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll)
+              Interface->Open(Setup.OSDwidth, -4); //XXX remove when displaying replay mode differently
+		   else
            Interface->Open(0, -1); //XXX remove when displaying replay mode differently
            visible = modeOnly = true;
            }
 
         if (modeOnly && !timeoutShow && NormalPlay)
            timeoutShow = time(NULL) + MODETIMEOUT;
+        if (Setup.Theme == themeVanilla) {
         const char *Mode;
         if (Speed == -1) Mode = Play    ? "  >  " : " ||  ";
         else if (Play)   Mode = Forward ? " X>> " : " <<X ";
@@ -3392,8 +4480,48 @@
         eDvbFont OldFont = Interface->SetFont(fontFix);
         DisplayAtBottom(buf);
         Interface->SetFont(OldFont);
+        } 
+        else if (Setup.Theme == themeElchi) {
+           char buf[16];
+           int i=0;
+           if (!(Width() & 1)) buf[i++] = ' ';
+           buf[i] = FSYM_EMPTY; if (Speed >= 0 && !Forward) buf[i] = rewSymbols[Speed];
+           i++;
+           buf[i++] = Play ? (Speed == -1 ? FSYM_PLAY : FSYM_EMPTY) : FSYM_PAUSE;
+           buf[i] = FSYM_EMPTY; if (Speed>=0 && Forward) buf[i] = ffwdSymbols[Speed];
+           i++;
+           if (!(Width() & 1)) buf[i++] = ' ';
+           buf[i] = 0;
+
+           eDvbFont OldFont = Interface->SetFont(fontSym);
+           DisplayAtBottom(buf);
+           Interface->SetFont(OldFont);
+           }
+         else if (theme && ((Setup.Theme == themeSaschaScroll) || (Setup.Theme == themeSaschaRound))) {
+           int mode;
+           if (Speed == -1)
+              mode = Play ? MODE_PLAY : MODE_PAUSE;
+           else if (Play)
+              mode = Forward ? MODE_FFWD : MODE_REW;
+           else if (!Play)
+              mode = Forward ? MODE_SFWD : MODE_SREW;
+           if (Speed > 0 && (mode == MODE_FFWD || mode == MODE_REW || mode == MODE_SFWD || mode == MODE_SREW)) {
+              switch (mode) {
+                 case MODE_FFWD: mode = MODE_FFWD1; break;
+                 case MODE_REW:  mode = MODE_REW1;  break;
+                 case MODE_SFWD: mode = MODE_SFWD1; break;
+                 case MODE_SREW: mode = MODE_SREW1; break;
+                 }
+              mode += Speed - 1;
+              }
+           theme->DrawMode(mode, modeOnly);
+           }
         }
      }
+#ifndef DEBUG_OSD
+  if ((Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) && !timeSearchActive)
+     Interface->SetBitmap(0, Setup.ShowReplayMode ? 0 : cOsd::LineHeight(), *theme);
+#endif
 }
 
 bool cReplayControl::ShowProgress(bool Initial)
@@ -3402,16 +4530,19 @@
 
   if (GetIndex(Current, Total) && Total > 0) {
      if (!visible) {
-        Interface->Open(Setup.OSDwidth, -3);
+        Interface->Open(Setup.OSDwidth, (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll) ? -4 : -3);
         needsFastResponse = visible = true;
         }
      if (Initial) {
+        if ((Setup.Theme == themeVanilla) || (Setup.Theme == themeElchi)) {
         Interface->Clear();
         if (title)
            Interface->Write(0, 0, title);
+        }
         lastCurrent = lastTotal = -1;
         }
      if (Total != lastTotal) {
+        if ((Setup.Theme == themeVanilla) || (Setup.Theme == themeElchi))
         Interface->Write(-7, 2, IndexToHMSF(Total));
         if (!Initial)
            Interface->Flush();
@@ -3422,11 +4553,16 @@
         Interface->Fill(0, 1, p, 1, clrGreen);
         Interface->Fill(p, 1, Width() - p, 1, clrWhite);
 #else
+        if (theme && (Setup.Theme == themeSaschaRound || Setup.Theme == themeSaschaScroll))
+           theme->DrawProgress(Current, Total, displayFrames, marks, title);
+        else {
         cProgressBar ProgressBar(Width() * cOsd::CellWidth(), cOsd::LineHeight(), Current, Total, marks);
         Interface->SetBitmap(0, cOsd::LineHeight(), ProgressBar);
         if (!Initial)
            Interface->Flush();
+        }
 #endif
+        if ((Setup.Theme == themeVanilla) || (Setup.Theme == themeElchi))
         Interface->Write(0, 2, IndexToHMSF(Current, displayFrames));
         Interface->Flush();
         lastCurrent = Current;
@@ -3695,7 +4831,8 @@
     }
   if (DoShowMode)
      ShowMode();
-  if (DisplayedFrames && !displayFrames)
+  if (DisplayedFrames && !displayFrames &&
+      (Setup.Theme == themeVanilla || Setup.Theme == themeElchi))
      Interface->Fill(0, 2, 11, 1, clrBackground);
   return osContinue;
 }
diff -Nur vdr.orig/menu.h vdr/menu.h
--- vdr.orig/menu.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/menu.h	2004-08-01 13:40:47.000000000 +0200
@@ -16,6 +16,7 @@
 #include "dvbplayer.h"
 #include "recorder.h"
 #include "recording.h"
+#include "theme.h"
 
 class cMenuMain : public cOsdMenu {
 private:
@@ -29,10 +30,22 @@
   static cOsdObject *PluginOsdObject(void);
   };
 
+class cDisplayChannelTheme;
+
+class cProgressBar : public cBitmap {
+protected:
+  int total;
+  int Pos(int p) { return p * width / total; }
+  void Mark(int x, bool Start, bool Current);
+public:
+  cProgressBar(int Width, int Height, int Current, int Total, const cMarks &Marks);
+  };
+
 class cDisplayChannel : public cOsdObject {
 private:
   int group;
   bool withInfo;
+  cDisplayChannelTheme *theme;
   int lines;
   int lastTime;
   int number;
@@ -102,6 +115,7 @@
   eOSState Delete(void);
   eOSState Summary(void);
   eOSState Commands(eKeys Key = kNone);
+  eOSState Rename(void);
 public:
   cMenuRecordings(const char *Base = NULL, int Level = 0, bool OpenSubMenus = false);
   ~cMenuRecordings();
@@ -145,9 +159,12 @@
   static void Shutdown(void);
   };
 
+class cReplayControlTheme;
+
 class cReplayControl : public cDvbPlayerControl {
 private:
   cMarks marks;
+  cReplayControlTheme *theme;
   bool visible, modeOnly, shown, displayFrames;
   int lastCurrent, lastTotal;
   time_t timeoutShow;
diff -Nur vdr.orig/menuitems.c vdr/menuitems.c
--- vdr.orig/menuitems.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/menuitems.c	2004-08-01 13:40:47.000000000 +0200
@@ -12,6 +12,9 @@
 #include "i18n.h"
 #include "plugin.h"
 #include "status.h"
+#include "theme.h"
+
+#define SHIFTTIMEOUT 2
 
 const char *FileNameChars = " abcdefghijklmnopqrstuvwxyz0123456789-.#~";
 
@@ -224,6 +227,9 @@
   pos = -1;
   insert = uppercase = false;
   newchar = true;
+  ieCurChr = 0;
+  lastKey = kNone;
+  lastActivity = time(NULL);
   Set();
 }
 
@@ -301,12 +307,24 @@
 
 eOSState cMenuEditStrItem::ProcessKey(eKeys Key)
 {
+  const char c1[] = "-.#~,/_@1";
+  const char c2[] = "abcäåá2";
+  const char c3[] = "defé3";
+  const char c4[] = "ghi4";
+  const char c5[] = "jkl5";
+  const char c6[] = "mnoöñó6";
+  const char c7[] = "pqrs7";
+  const char c8[] = "tuvüú8";
+  const char c9[] = "wxyz9";
+  const char c0[] = " 0";
+
   switch (Key) {
     case kRed:   // Switch between upper- and lowercase characters
                  if (pos >= 0 && (!insert || !newchar)) {
                     uppercase = !uppercase;
                     value[pos] = uppercase ? toupper(value[pos]) : tolower(value[pos]);
                     }
+                 lastKey = Key;
                  break;
     case kGreen: // Toggle insert/overwrite modes
                  if (pos >= 0) {
@@ -314,6 +332,7 @@
                     newchar = true;
                     }
                  SetHelpKeys();
+                 lastKey = Key;
                  break;
     case kYellow|k_Repeat:
     case kYellow: // Remove the character at current position; in insert mode it is the character to the right of cursor
@@ -331,6 +350,7 @@
                        uppercase = isupper(value[pos]);
                     newchar = true;
                     }
+                 lastKey = Key;
                  break;
     case kLeft|k_Repeat:
     case kLeft:  if (pos > 0) {
@@ -340,6 +360,7 @@
                     }
                  if (!insert && isalpha(value[pos]))
                     uppercase = isupper(value[pos]);
+                 lastKey = Key;
                  break;
     case kRight|k_Repeat:
     case kRight: if (pos < length - 2 && pos < int(strlen(value)) ) {
@@ -357,6 +378,7 @@
                     uppercase = isupper(value[pos]);
                  if (pos == 0)
                     SetHelpKeys();
+                 lastKey = Key;
                  break;
     case kUp|k_Repeat:
     case kUp:
@@ -377,9 +399,151 @@
                     }
                  else
                     return cMenuEditItem::ProcessKey(Key);
+                 lastKey = Key;
+                 break;
+    case k0|k_Repeat ... k9|k_Repeat:
+    case k0 ... k9: if ((Key != lastKey) || ((Key == lastKey) && (time(NULL) - lastActivity > SHIFTTIMEOUT)) ) {
+                    ieCurChr = 0;
+                    if (!newchar) {
+                       // kRight
+                       if (pos < length - 2 && pos < int(strlen(value)) ) {
+                          if (++pos >= int(strlen(value))) {
+                             if (pos >= 2 && value[pos - 1] == ' ' && value[pos - 2] == ' ')
+                                pos--; // allow only two blanks at the end
+                             else {
+                                value[pos] = ' ';
+                                value[pos + 1] = 0;
+                                }
+                             }
+                          }
+                       newchar = true;
+                       if (!insert && isalpha(value[pos]))
+                          uppercase = isupper(value[pos]);
+                       }
+                    }
+                 // kUp/kDown
+                 if (pos >= 0) {
+                    if (insert && newchar) {
+                       // create a new character in insert mode
+                       if (int(strlen(value)) < length - 1) {
+                          memmove(value + pos + 1, value + pos, strlen(value) - pos + 1);
+                          value[pos] = ' ';
+                          }
+                       }
+                    }
+                 else
+                    return cMenuEditItem::ProcessKey(Key);
+                 switch (Key) {
+                    case k1:
+                         if (uppercase)
+                            value[pos] = toupper(c1[ieCurChr]);
+                         else
+                            value[pos] =         c1[ieCurChr];
+                         if (c1[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k2:
+                         if (uppercase)
+                            value[pos] = toupper(c2[ieCurChr]);
+                         else
+                            value[pos] =         c2[ieCurChr];
+                         if (c2[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k3:
+                         if (uppercase)
+                            value[pos] = toupper(c3[ieCurChr]);
+                         else
+                            value[pos] =         c3[ieCurChr];
+                         if (c3[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k4:
+                         if (uppercase)
+                            value[pos] = toupper(c4[ieCurChr]);
+                         else
+                            value[pos] =         c4[ieCurChr];
+                         if (c4[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k5:
+                         if (uppercase)
+                            value[pos] = toupper(c5[ieCurChr]);
+                         else
+                            value[pos] =         c5[ieCurChr];
+                         if (c5[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k6:
+                         if (uppercase)
+                            value[pos] = toupper(c6[ieCurChr]);
+                         else
+                            value[pos] =         c6[ieCurChr];
+                         if (c6[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k7:
+                         if (uppercase)
+                            value[pos] = toupper(c7[ieCurChr]);
+                         else
+                            value[pos] =         c7[ieCurChr];
+                         if (c7[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k8:
+                         if (uppercase)
+                            value[pos] = toupper(c8[ieCurChr]);
+                         else
+                            value[pos] =         c8[ieCurChr];
+                         if (c8[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k9:
+                         if (uppercase)
+                            value[pos] = toupper(c9[ieCurChr]);
+                         else
+                            value[pos] =         c9[ieCurChr];
+                         if (c9[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    case k0:
+                         if (uppercase)
+                            value[pos] = toupper(c0[ieCurChr]);
+                         else
+                            value[pos] =         c0[ieCurChr];
+                         if (c0[ieCurChr+1] == 0)
+                            ieCurChr = 0;
+                         else
+                            ieCurChr++;
+                         break;
+                    default:
+                         break;
+                    }
+                 lastKey = Key;
+                 newchar = false;
+                 lastActivity = time(NULL);
                  break;
     case kOk:    if (pos >= 0) {
                     pos = -1;
+                    lastKey = Key;
                     newchar = true;
                     stripspace(value);
                     SetHelpKeys();
@@ -447,9 +611,9 @@
 
 cMenuTextItem::cMenuTextItem(const char *Text, int X, int Y, int W, int H, eDvbColor FgColor, eDvbColor BgColor, eDvbFont Font)
 {
-  x = X;
+  x = ((Setup.Theme == themeSaschaScroll) || (Setup.Theme == themeSaschaRound)) ? X + 1 : X;
   y = Y;
-  w = W;
+  w = ((Setup.Theme == themeSaschaScroll) || (Setup.Theme == themeSaschaRound)) ? W - 2 : W;
   h = H;
   fgColor = FgColor;
   bgColor = BgColor;
diff -Nur vdr.orig/menuitems.h vdr/menuitems.h
--- vdr.orig/menuitems.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/menuitems.h	2004-08-01 13:40:47.000000000 +0200
@@ -75,6 +75,9 @@
   void SetHelpKeys(void);
   virtual void Set(void);
   char Inc(char c, bool Up);
+  int ieCurChr;  
+  eKeys lastKey;
+  time_t lastActivity;
 public:
   cMenuEditStrItem(const char *Name, char *Value, int Length, const char *Allowed);
   ~cMenuEditStrItem();
diff -Nur vdr.orig/osdbase.c vdr/osdbase.c
--- vdr.orig/osdbase.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/osdbase.c	2004-08-01 13:40:47.000000000 +0200
@@ -14,6 +14,75 @@
 #include <sys/stat.h>
 #include <sys/unistd.h>
 #include "tools.h"
+#include "config.h"
+
+#define ABORT        { fclose(InFile); return false; }
+
+int bgbackground     = 0x88000000;
+int bgchannelname    = bgbackground;
+int bgchanneldate    = bgbackground;
+int bgepgtime        = bgbackground;
+int bgepgdata        = bgbackground;
+int bgtitleline      = 0xFFFFFF00;
+int bgscrolline      = 0xFFFFFF00;
+int bghelpred        = 0xFF1111CC;
+int bghelpgreen      = 0xFF22CC22;
+int bghelpyellow     = 0xFF22BBCC;
+int bghelpblue       = 0xFFCC0000;
+int bgerrorline      = 0xFF1111CC;
+int bginfoline       = 0xFF22CC22;
+int bgconfirmline    = 0xFF22BBCC;
+int fgchannelname    = 0xFFDDDDDD;
+int fgchanneldate    = 0xFFDDDDDD;
+int fgepgtime        = 0xFF22BBCC;
+int fgtitle          = 0xFFFCFC00;
+int fgsubtitle       = 0xFFFCFC00;
+int volumebar        = 0xFF22CC22;
+int timebar1         = 0xFF000000;
+int timebar2         = 0xFF5F5F5F;
+int fgtitleline      = 0xFF000000;
+int fgscrolline      = fgtitleline;
+int fgmenufont       = 0xFFDDDDDD;
+int fgsymbolon       = 0xFF22BBCC;
+int fgsymboloff      = timebar2;
+int fgerrorfont      = 0xFFDDDDDD;
+int fginfofont       = 0xFF000000;
+int fgconfirmfont    = 0xFF000000;
+
+eDvbColor LookupColor(int index)
+{
+  eDvbColor colortable[23] =
+  {
+    clrBlack,
+    clrWhite,
+    clrRed,
+    clrGreen,
+    clrYellow,
+    clrMagenta,
+    clrBlue,
+    clrCyan,
+    clrGrey,
+    clrTransparent,
+    (eDvbColor)Setup.BgClrBackground,
+    (eDvbColor)Setup.BgClrChannelName,
+    (eDvbColor)Setup.BgClrChannelDate,
+    (eDvbColor)Setup.BgClrEpgTime,
+    (eDvbColor)Setup.BgClrTitleLine,
+    (eDvbColor)Setup.BgClrScrolLine,
+    (eDvbColor)Setup.BgClrHelpRed,
+    (eDvbColor)Setup.BgClrHelpGreen,
+    (eDvbColor)Setup.BgClrHelpYellow,
+    (eDvbColor)Setup.BgClrHelpBlue,
+    (eDvbColor)Setup.BgClrErrorLine,
+    (eDvbColor)Setup.BgClrInfoLine,
+    (eDvbColor)Setup.BgClrConfirmLine
+  };
+
+  if ((index >= 0) && (index < 23))
+     return colortable[index];
+  else
+     return colortable[0];
+}
 
 // --- cPalette --------------------------------------------------------------
 
@@ -274,6 +343,170 @@
   return &bitmap[y * width + x];
 }
 
+#define XPM_EXT ".xpm"
+
+bool cBitmap::LoadXpm(const char *FileName, eDvbColor NoneColor)
+{
+  bool bRet = false;
+  FILE *infile;
+  char *logofileS;
+
+  logofileS = MALLOC(char, strlen(ConfigDirectory) + 7 + strlen(FileName) + strlen(XPM_EXT) + 1);
+  char *ptr = logofileS;
+  ptr = stpcpy(ptr, ConfigDirectory);
+  ptr = stpcpy(ptr, "/logos/");
+  ptr = stpcpy(ptr, FileName);
+  ptr = stpcpy(ptr, XPM_EXT);
+
+  infile = fopen(logofileS, "r");
+  if (infile) {
+     bool ok = true;
+     char buf[512];
+     char *ptr;
+     int state = 0;
+     int width, height, colors, colwidth, cnt = 0;
+     int temp;
+     uint pal[65536];
+
+     while (ok && fgets(buf, sizeof(buf), infile) != NULL) {
+       int len = strlen(buf);
+       ptr = buf;
+       if (ptr[len - 1] == '\n')
+          ptr[--len] = '\0';
+
+       if (state > 0 && strncmp(ptr, "/*", 2) == 0) {
+          continue;
+          }
+
+       switch (state) {
+         case 0:
+              if (strcmp(ptr, "/* XPM */") != 0) {
+                 esyslog("ERROR: loading xpm %s failed: invalid header", FileName);
+                 ok = false;
+                 break;
+                 }
+              ++state;
+              break;
+         case 1:
+              ++state;
+              break;
+         case 2:
+              sscanf(ptr, "\"%d %d %d %d\",", &width, &height, &colors, &colwidth);
+              if (colwidth > 2) {
+                 esyslog("ERROR: wrong colorwidth in xpm %s", FileName);
+                 ok = false;
+                 break;
+                 }
+              cnt = 0;
+              ++state;
+              break;
+         case 3:
+              ++ptr;
+              temp = 0;
+              for (int i = 0; i < colwidth; ++i) {
+                  temp <<= 8;
+                  temp += (int)*ptr;
+                  ++ptr;
+                  }
+              ++ptr;
+              if (strncmp(ptr, "c ", 2) != 0) {
+                 esyslog("ERROR: wrong character in xpm %s", FileName);
+                 ok = false;
+                 break;
+                 }
+              ptr += 2;
+              if (*ptr == '#') {
+                 int col = strtoul(++ptr, NULL, 16);
+                 pal[temp] = 0xff000000 | ((col & 0xff) << 16) | (col & 0xff00) | ((col & 0xff0000) >> 16);
+                 }
+              else {
+                 pal[temp] = NoneColor;
+                 }
+              if (++cnt == colors) {
+                 cnt = 0;
+                 ++state;
+                 }
+              break;
+         case 4:
+              ++ptr;
+              for (int p = 0; p < width; ++p) {
+                  temp = 0;
+                  for (int i = 0; i < colwidth; ++i) {
+                      temp <<= 8;
+                      temp += (int)*ptr;
+                      ++ptr;
+                      }
+                  SetPixel(p, cnt, (eDvbColor)pal[temp]);
+                  }
+              if (++cnt == height) {
+                 ++state;
+                 bRet = true;
+                 }
+              break;
+         default:
+              break;
+         }
+       }
+     fclose(infile);
+     }
+  free(logofileS);
+  return bRet;
+}
+
+#define LOGOFILE_EXT ".logo"
+
+bool cBitmap::LoadLogo(const char *FileName)
+{
+  bool bRet = false;
+  FILE *InFile;
+  char *logofileS;
+
+  logofileS = MALLOC(char, strlen(ConfigDirectory) + 7 + strlen(FileName) + strlen(LOGOFILE_EXT) + 1);
+  strcpy(logofileS, ConfigDirectory);
+  strcat(logofileS, "/logos/");
+  strcat(logofileS, FileName);
+  strcat(logofileS, LOGOFILE_EXT);
+
+  InFile = fopen(logofileS, "rb");
+  if (InFile) {
+     char *pBitmap = (char*)malloc(height * width);
+     if (pBitmap) {
+        if (fread(pBitmap, height * width, 1, InFile) != 1) {
+           free(pBitmap);
+           ABORT;
+           }
+        free(bitmap);
+        bitmap = MALLOC(char, height * width);
+        for (int y = 0; y < height; ++y)
+            for (int x = 0; x < width; ++x) {
+                eDvbColor col;
+                switch (pBitmap[y * width + x]) {
+                   case '0': col = clrTransparent; break;
+                   case '1': col = clrBlack;       break;
+                   case '2': col = clrWhite;       break;
+                   case '3': col = clrRed;         break;
+                   case '4': col = clrMagenta;     break;
+                   case '5': col = clrGreen;       break;
+                   case '6': col = clrBlue;        break;
+                   case '7': col = clrYellow;      break;
+                   case '8': col = clrCyan;        break;
+                   case '9': col = clrGrey;        break;
+                   case '.': col = Setup.LogoColorScheme ? (eDvbColor)bgchanneldate : clrWhite; break;
+                   default:  col = clrBackground;
+                   }
+                SetPixel(x, y, col);
+                }
+        free(pBitmap);
+        bRet = true;
+        }
+     else
+       esyslog("malloc failed (cBitmap::Load).");
+     fclose(InFile);
+     }
+  free(logofileS);
+  return bRet;
+}
+
 // --- cWindow ---------------------------------------------------------------
 
 cWindow::cWindow(int Handle, int x, int y, int w, int h, int Bpp, bool ClearWithBackground, bool Tiled)
diff -Nur vdr.orig/osdbase.h vdr/osdbase.h
--- vdr.orig/osdbase.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/osdbase.h	2004-08-01 13:40:47.000000000 +0200
@@ -13,7 +13,7 @@
 #include <stdio.h>
 #include "font.h"
 
-#define MAXNUMCOLORS 16
+#define MAXNUMCOLORS 256
 
 enum eDvbColor {
 #ifdef DEBUG_OSD
@@ -29,18 +29,44 @@
   clrWhite,
 #else
   clrTransparent = 0x00000000,
-  clrBackground  = 0x7F000000, // 50% gray
+  clrBackVanilla = 0x7F000000, // 50% gray
+  clrGrey        = 0xFF5F5F5F,
   clrBlack       = 0xFF000000,
-  clrRed         = 0xFF1414FC,
-  clrGreen       = 0xFF24FC24,
-  clrYellow      = 0xFF24C0FC,
+  clrRed         = 0xFF1111CC,
+  clrGreen       = 0xFF22CC22,
+  clrYellow      = 0xFF22BBCC,
   clrMagenta     = 0xFFFC00B0,
-  clrBlue        = 0xFFFC0000,
+  clrBlue        = 0xFFCC0000,
   clrCyan        = 0xFFFCFC00,
-  clrWhite       = 0xFFFCFCFC,
+  clrWhite       = 0xFFDDDDDD,
 #endif
   };
 
+extern int bgbackground, bgchannelname, bgchanneldate, bgepgtime, bgepgdata,
+           bgtitleline, bgscrolline, bghelpred, bghelpgreen, bghelpyellow, bghelpblue,
+           bgerrorline, bginfoline, bgconfirmline;
+
+#define clrBackground    ((eDvbColor)bgbackground)
+#define clrChannelName   ((eDvbColor)bgchannelname)
+#define clrChannelDate   ((eDvbColor)bgchanneldate)
+#define clrEpgTime       ((eDvbColor)bgepgtime)
+#define clrEpgData       ((eDvbColor)bgepgdata)
+#define clrTitleLine     ((eDvbColor)bgtitleline)
+#define clrScrolLine     ((eDvbColor)bgscrolline)
+#define clrHelpRed       ((eDvbColor)bghelpred)
+#define clrHelpGreen     ((eDvbColor)bghelpgreen)
+#define clrHelpYellow    ((eDvbColor)bghelpyellow)
+#define clrHelpBlue      ((eDvbColor)bghelpblue)
+#define clrErrorLine     ((eDvbColor)bgerrorline)
+#define clrInfoLine      ((eDvbColor)bginfoline)
+#define clrConfirmLine   ((eDvbColor)bgconfirmline)
+
+extern int fgchannelname, fgchanneldate, fgepgtime, fgtitle, fgsubtitle, fgtitleline, fgscrolline,
+           fgmenufont, volumebar, timebar1, timebar2, fgsymbolon, fgsymboloff,
+           fgerrorfont, fginfofont, fgconfirmfont;
+
+eDvbColor LookupColor(int index);
+
 class cPalette {
 private:
   eDvbColor color[MAXNUMCOLORS];
@@ -98,6 +124,8 @@
   void Clean(void);
   void Clear(void);
   const char *Data(int x, int y);
+  bool LoadXpm(const char *FileName, eDvbColor NoneColor = clrTransparent);
+  bool LoadLogo(const char *FileName);
   };
 
 #define MAXNUMWINDOWS 7 // OSD windows are counted 1...7
diff -Nur vdr.orig/osd.c vdr/osd.c
--- vdr.orig/osd.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/osd.c	2004-08-01 13:42:59.000000000 +0200
@@ -12,6 +12,7 @@
 #include "device.h"
 #include "i18n.h"
 #include "status.h"
+#include "theme.h"
 
 // --- cOsd ------------------------------------------------------------------
 
@@ -20,6 +21,7 @@
   int cOsd::colorPairs[MaxColorPairs] = { 0 };
 #else
   cOsdBase *cOsd::osd = NULL;
+  tWindowHandle cOsd::logowin = -1;
 #endif
   int cOsd::cols = 0;
   int cOsd::rows = 0;
@@ -71,6 +73,11 @@
 
 void cOsd::Open(int w, int h)
 {
+  Open(w, h, true);
+}
+
+void cOsd::Open(int w, int h, bool logo)
+{
   int d = (h < 0) ? Setup.OSDheight + h : 0;
   h = abs(h);
   cols = w;
@@ -91,17 +98,20 @@
   SETCOLOR(clrMagenta,     0xB0, 0x00, 0xFC, 255);
   SETCOLOR(clrWhite,       0xFC, 0xFC, 0xFC, 255);
 #else
+  logowin = -1;
   w *= charWidth;
   h *= lineHeight;
   d *= lineHeight;
-  int x = (720 - w + charWidth) / 2; //TODO PAL vs. NTSC???
+  int x = ((720 - w + charWidth) / 2) + Setup.OSDxoffset; //TODO PAL vs. NTSC???
   int y = (576 - Setup.OSDheight * lineHeight) / 2 + d;
   //XXX
   osd = OpenRaw(x, y);
   //XXX TODO this should be transferred to the places where the individual windows are requested (there's too much detailed knowledge here!)
   if (!osd)
      return;
-  if (h / lineHeight == 5) { //XXX channel display
+  if (((Setup.Theme == themeSaschaScroll || Setup.Theme == themeSaschaRound) && ((h / lineHeight) == cDisplayChannelTheme::Height(false) || (h / lineHeight) == cDisplayChannelTheme::Height(true))) || (h / lineHeight) == (Setup.Symbol ? 6 : 5)) { //XXX channel display
+     if ((Setup.Theme == themeSaschaScroll || Setup.Theme == themeSaschaRound) && Setup.ChannelLogo && logo)
+        logowin = osd->Create(0, 0, 64, 48, 4, false, false);
      osd->Create(0,              0, w, h, 4);
      }
   else if (h / lineHeight == 1) { //XXX info display
@@ -109,11 +119,20 @@
      }
   else if (d == 0) { //XXX full menu
      osd->Create(0,                            0, w,                         lineHeight, 2);
+     if (Setup.Theme == themeSaschaScroll)
+     osd->Create(charWidth, lineHeight, w - 2 * charWidth, (Setup.OSDheight - 3) * lineHeight, 2);
+     else
      osd->Create(0,                   lineHeight, w, (Setup.OSDheight - 3) * lineHeight, 2);
      osd->AddColor(clrBackground);
-     osd->AddColor(clrCyan);
-     osd->AddColor(clrWhite);
-     osd->AddColor(clrBlack);
+     osd->AddColor(Setup.Theme == themeVanilla ? clrCyan  : clrScrolLine);
+     osd->AddColor(Setup.Theme == themeVanilla ? clrWhite : (eDvbColor)fgmenufont);
+     osd->AddColor(Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgscrolline);
+     if (Setup.Theme == themeSaschaScroll) {
+        osd->Create(charWidth, (Setup.OSDheight - 2) * lineHeight, w - 2 * charWidth, 1 * lineHeight, 4);
+        osd->Fill(0, 0, w - 2 * charWidth, 1 * lineHeight, clrBlack, LAST_CREATED_WINDOW); // only to clear the status line
+        osd->Create(0, (Setup.OSDheight - 1) * lineHeight, w, 1 * lineHeight, 4);
+        }
+     else
      osd->Create(0, (Setup.OSDheight - 2) * lineHeight, w,               2 * lineHeight, 4);
      }
   else { //XXX progress display
@@ -135,6 +154,7 @@
      window = 0;
      }
 #else
+  logowin = -1;
   delete osd;
   osd = NULL;
 #endif
@@ -177,6 +197,26 @@
 #endif
 }
 
+void cOsd::SetLogo(int x, int y, const cBitmap &Bitmap)
+{
+#ifndef DEBUG_OSD
+  if (osd && logowin != -1) {
+     osd->Hide(logowin);
+     osd->Clear(logowin);
+     osd->SetBitmap(x, y, Bitmap, logowin);
+     osd->Show(logowin);
+     }
+#endif
+}
+
+void cOsd::HideLogo(void)
+{
+#ifndef DEBUG_OSD
+  if (osd && logowin != -1)
+     osd->Hide(logowin);
+#endif
+}
+
 void cOsd::ClrEol(int x, int y, eDvbColor color)
 {
   Fill(x, y, cols - x, 1, color);
@@ -297,8 +337,8 @@
 void cOsdItem::Display(int Offset, eDvbColor FgColor, eDvbColor BgColor)
 {
   if (Offset < 0) {
-     FgColor = clrBlack;
-     BgColor = clrCyan;
+     FgColor = Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fgscrolline;
+     BgColor = Setup.Theme == themeVanilla ? clrCyan : clrScrolLine;
      }
   fresh |= Offset >= 0;
   if (Offset >= 0)
@@ -318,6 +358,8 @@
 {
   isMenu = true;
   digit = 0;
+  key_nr = -1;
+  lastActivity = time(NULL);
   hasHotkeys = false;
   visible = false;
   title = NULL;
@@ -348,13 +390,11 @@
 {
   static char buffer[64];
   if (s && hasHotkeys) {
-     if (digit == 0 && '1' <= *s && *s <= '9' && *(s + 1) == ' ')
-        digit = -1; // prevents automatic hotkeys - input already has them
-     if (digit >= 0) {
-        digit++;
-        snprintf(buffer, sizeof(buffer), " %c %s", (digit < 10) ? '0' + digit : ' ' , s);
-        s = buffer;
-        }
+     if (++digit > 9)
+        snprintf(buffer, sizeof(buffer), " %2d %s", digit, s);
+     else
+        snprintf(buffer, sizeof(buffer), " %2d  %s", digit, s);
+     s = buffer;
      }
   return s;
 }
@@ -370,7 +410,7 @@
   free(status);
   status = s ? strdup(s) : NULL;
   if (visible)
-     Interface->Status(status);
+     Interface->Status(status, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrCyan : clrInfoLine);
 }
 
 void cOsdMenu::SetTitle(const char *Title, bool ShowDate)
@@ -447,7 +487,10 @@
      for (int i = first; i < count; i++) {
          cOsdItem *item = Get(i);
          if (item) {
-            item->Display(i - first, i == current ? clrBlack : clrWhite, i == current ? clrCyan : clrBackground);
+            if (Setup.Theme == themeVanilla)
+               item->Display(i - first, i == current ? clrBlack : clrWhite, i == current ? clrCyan : clrBackground);
+            else
+               item->Display(i - first, i == current ? (eDvbColor)fgscrolline : (eDvbColor)fgmenufont, i == current ? clrScrolLine : clrBackground);
             if (i == current)
                cStatus::MsgOsdCurrentItem(item->Text());
             }
@@ -456,7 +499,7 @@
          }
      }
   if (!isempty(status))
-     Interface->Status(status);
+     Interface->Status(status, Setup.Theme == themeVanilla ? clrBlack : (eDvbColor)fginfofont, Setup.Theme == themeVanilla ? clrCyan : clrInfoLine);
 }
 
 void cOsdMenu::SetCurrent(cOsdItem *Item)
@@ -475,7 +518,10 @@
 {
   cOsdItem *item = Get(current);
   if (item) {
-     item->Display(current - first, Current ? clrBlack : clrWhite, Current ? clrCyan : clrBackground);
+     if (Setup.Theme == themeVanilla)
+        item->Display(current - first, Current ? clrBlack : clrWhite, Current ? clrCyan : clrBackground);
+     else
+        item->Display(current - first, Current ? (eDvbColor)fgscrolline : (eDvbColor)fgmenufont, Current ? clrScrolLine : clrBackground);
      if (Current)
         cStatus::MsgOsdCurrentItem(item->Text());
      }
@@ -582,18 +628,78 @@
      }
 }
 
+#define MENUKEYTIMEOUT 1
+
 eOSState cOsdMenu::HotKey(eKeys Key)
 {
-  for (cOsdItem *item = First(); item; item = Next(item)) {
+  bool match = false;
+  bool highlight = false;
+  int  item_nr;
+  int  i;
+  //static char text[5];
+
+  if (Key == kNone) {
+     //if ((key_nr == -1) && (status != NULL)) {
+     //   SetStatus(NULL);
+     //   Display();
+     //   }
+     if ((time(NULL) - lastActivity) >= MENUKEYTIMEOUT)
+        Key = kOk;
+     else
+        return osContinue;
+     }
+  else {
+     lastActivity = time(NULL);
+     //if ((Key != kOk) && (key_nr == -1)) {
+     //   snprintf(text, sizeof(text), "%1d-", (Key - k0));
+     //   SetStatus(text);
+     //   }
+     }
+
+  for (cOsdItem *item = Last(); item; item = Prev(item)) {
       const char *s = item->Text();
-      if (s && (s = skipspace(s)) != NULL) {
-         if (*s == Key - k1 + '1') {
+      i = 0;
+      item_nr = 0;
+      if (s && (s = skipspace(s)) != '\0' && '0' <= s[i] && s[i] <= '9') {
+         do {
+            item_nr = item_nr * 10 + (s[i] - '0');
+            }
+         while ( !((s[++i] == '\t')||(s[i] == ' ')) && (s[i] != '\0') && ('0' <= s[i]) && (s[i] <= '9'));
+         if ((Key == kOk) && (item_nr == key_nr)) {
             current = item->Index();
             cRemote::Put(kOk, true);
+            //SetStatus(NULL);
+            //Display();
+            key_nr = -1;
             break;
             }
+         else if (Key != kOk) {
+            if (!highlight && (item_nr == (Key - k0))) {
+               highlight = true;
+               current = item->Index();
+               //Display();
+               }
+            if (!match && (key_nr == -1) && ((item_nr / 10) == (Key - k0))) {
+               match = true;
+               key_nr = (Key - k0);
+               }
+            else if (((key_nr == -1) && (item_nr == (Key - k0))) || (!match && (key_nr >= 0) && (item_nr == (10 * key_nr + Key - k0)))) {
+               current = item->Index();
+               //Display();
+               cRemote::Put(kOk, true);
+               key_nr = -1;
+               break;
+               }
+            }
          }
       }
+
+  if ((!match) && (Key != kNone)) {
+     key_nr = -1;
+     //SetStatus(NULL);
+     //Display();
+     }
+
   return osContinue;
 }
 
@@ -630,7 +736,8 @@
         return state;
      }
   switch (Key) {
-    case k1...k9: return hasHotkeys ? HotKey(Key) : osUnknown;
+    case kNone:
+    case k0...k9: return hasHotkeys ? HotKey(Key) : osUnknown;
     case kUp|k_Repeat:
     case kUp:   CursorUp();   break;
     case kDown|k_Repeat:
diff -Nur vdr.orig/osd.h vdr/osd.h
--- vdr.orig/osd.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/osd.h	2004-08-01 13:42:59.000000000 +0200
@@ -50,6 +50,8 @@
                 osUser8,
                 osUser9,
                 osUser10,
+                osUser11,
+                osUser12,
               };
 
 class cOsd {
@@ -64,6 +66,7 @@
   static void SetColor(eDvbColor colorFg, eDvbColor colorBg = clrBackground);
 #else
   static cOsdBase *osd;
+  static tWindowHandle logowin;
 #endif
   static int cols, rows;
 public:
@@ -74,10 +77,13 @@
        // If the "normal" OSD is currently in use, NULL will be returned.
        // The caller must delete this object before the "normal" OSD is used again!
   static void Open(int w, int h);
+  static void Open(int w, int h, bool logo);
   static void Close(void);
   static void Clear(void);
   static void Fill(int x, int y, int w, int h, eDvbColor color = clrBackground);
   static void SetBitmap(int x, int y, const cBitmap &Bitmap);
+  static void SetLogo(int x, int y, const cBitmap &Bitmap);
+  static void HideLogo(void);
   static void ClrEol(int x, int y, eDvbColor color = clrBackground);
   static int CellWidth(void);
   static int LineHeight(void);
@@ -137,6 +143,8 @@
   char *status;
   int digit;
   bool hasHotkeys;
+  int key_nr;
+  time_t lastActivity;
 protected:
   bool visible;
   const char *hk(const char *s);
diff -Nur vdr.orig/recorder.c vdr/recorder.c
--- vdr.orig/recorder.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/recorder.c	2004-08-01 13:40:47.000000000 +0200
@@ -14,7 +14,7 @@
 
 // The size of the array used to buffer video data:
 // (must be larger than MINVIDEODATA - see remux.h)
-#define VIDEOBUFSIZE  MEGABYTE(5)
+#define VIDEOBUFSIZE  MEGABYTE(8)
 
 // The maximum time we wait before assuming that a recorded video data stream
 // is broken:
diff -Nur vdr.orig/recording.c vdr/recording.c
--- vdr.orig/recording.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/recording.c	2004-08-01 13:40:47.000000000 +0200
@@ -45,8 +45,9 @@
 #define RESUMEFILESUFFIX  "/resume%s%s.vdr"
 #define SUMMARYFILESUFFIX "/summary.vdr"
 #define MARKSFILESUFFIX   "/marks.vdr"
+#define INDEXFILESUFFIX   "/index.vdr" 
 
-#define FINDCMD      "cd '%s' && find '%s' -follow -type d -name '%s' 2> /dev/null"
+#define FINDCMD      "cd '%s' && find '%s' -follow -type d -name '%s' -print -prune -o -follow -type d -name '%s' -prune 2> /dev/null"
 
 #define MINDISKSPACE 1024 // MB
 
@@ -490,6 +491,12 @@
 
 const char *cRecording::Title(char Delimiter, bool NewIndicator, int Level)
 {
+  struct tIndex { int offset; uchar type; uchar number; short reserved; };
+  tIndex *index;
+  char RecLength[20] = "";
+  char RecDate[5] = "";
+  char RecTime[5] = "";
+  char RecDelimiter[1] = "";
   char New = NewIndicator && IsNew() ? '*' : ' ';
   free(titleBuffer);
   titleBuffer = NULL;
@@ -501,14 +508,47 @@
         s++;
      else
         s = name;
-     asprintf(&titleBuffer, "%02d.%02d%c%02d:%02d%c%c%s",
-                            t->tm_mday,
-                            t->tm_mon + 1,
-                            Delimiter,
-                            t->tm_hour,
-                            t->tm_min,
+     if (Setup.ShowRecLength) {
+        char *filename = NULL;
+        int last = -1;
+        index = NULL;
+        if (FileName()) {
+           filename = MALLOC(char, strlen(FileName()) + strlen(INDEXFILESUFFIX) + 1);
+           if (filename) {
+              strcpy(filename, FileName());
+              char *pFileExt = filename + strlen(filename);
+              strcpy(pFileExt, INDEXFILESUFFIX);
+              int delta = 0;
+              if (access(filename, R_OK) == 0) {
+                 struct stat buf;
+                 if (stat(filename, &buf) == 0) {
+                    delta = buf.st_size % sizeof(tIndex);
+                    if (delta) {
+                       delta = sizeof(tIndex) - delta;
+                       esyslog("ERROR: invalid file size (%ld) in '%s'", buf.st_size, filename);
+                       }
+                    last = (buf.st_size + delta) / sizeof(tIndex) - 1;
+                    char hour[2] = ""; char min[3] = "";
+                    sprintf(RecLength, "%s", IndexToHMSF(last, true));
+                    sprintf(hour, "%c", RecLength[0]);
+                    sprintf(min, "%c%c", RecLength[2], RecLength[3]);	  
+                    sprintf(RecLength, "%3d´", (atoi(hour) * 60) + atoi(min));
+                    }
+                 }
+              }
+           }
+        }
+     sprintf(RecDate,"%02d.%02d", t->tm_mday, t->tm_mon + 1);
+     sprintf(RecTime,"%02d:%02d", t->tm_hour, t->tm_min);
+     sprintf(RecDelimiter,"%c", Delimiter);
+     asprintf(&titleBuffer, "%s%s%s%c%s%s%s%s",
+                            (Setup.ShowRecDate ? RecDate                               : ""),
+                            (Setup.ShowRecDate ? Setup.ShowRecTime ? RecDelimiter : "" : ""),
+                            (Setup.ShowRecTime ? RecTime                               : ""),
                             New,
-                            Delimiter,
+                            (Setup.ShowRecTime   ? RecDelimiter : Setup.ShowRecDate ? RecDelimiter : ""),
+                            (Setup.ShowRecLength ? RecLength    : ""),
+                            (Setup.ShowRecLength ? RecDelimiter : ""),
                             s);
      // let's not display a trailing '~':
      stripspace(titleBuffer);
@@ -614,6 +654,32 @@
   return RemoveVideoFile(FileName());
 }
 
+bool cRecording::Rename(char *newName, int *newPriority, int *newLifetime)
+{
+  bool result = true;
+  char *newFileName;
+  struct tm tm_r;
+  struct tm *t = localtime_r(&start, &tm_r);
+  asprintf(&newFileName, NAMEFORMAT, VideoDirectory, ExchangeChars(newName, true), t->tm_year + 1900, t->tm_mon + 1, t->tm_mday, t->tm_hour, t->tm_min, *newPriority, *newLifetime);
+  if (strcmp(FileName(), newFileName)) {
+     if (access(newFileName, F_OK) == 0) {
+        isyslog("recording %s already exists", newFileName);
+        }
+     else {
+        isyslog("renaming recording %s to %s", FileName(), newFileName);
+        result = MakeDirs(newFileName, true);
+        if (result)
+           result = RenameVideoFile(FileName(), newFileName);
+        if (result) {
+           free(fileName);
+           fileName = strdup(newFileName);
+           }
+        }
+     }
+  free(newFileName);
+  return result;
+}
+
 // --- cRecordings -----------------------------------------------------------
 
 bool cRecordings::Load(bool Deleted)
@@ -621,7 +687,7 @@
   Clear();
   bool result = false;
   char *cmd = NULL;
-  asprintf(&cmd, FINDCMD, VideoDirectory, VideoDirectory, Deleted ? "*" DELEXT : "*" RECEXT);
+  asprintf(&cmd, FINDCMD, VideoDirectory, VideoDirectory, Deleted ? "*" DELEXT : "*" RECEXT, Deleted ? "*" RECEXT : "*" DELEXT);
   FILE *p = popen(cmd, "r");
   if (p) {
      char *s;
@@ -773,7 +839,6 @@
 //XXX+ somewhere else???
 // --- cIndexFile ------------------------------------------------------------
 
-#define INDEXFILESUFFIX     "/index.vdr"
 
 // The number of frames to stay off the end in case of time shift:
 #define INDEXSAFETYLIMIT 150 // frames
diff -Nur vdr.orig/recording.h vdr/recording.h
--- vdr.orig/recording.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/recording.h	2004-08-01 13:40:47.000000000 +0200
@@ -66,6 +66,9 @@
   bool Remove(void);
        // Actually removes the file from the disk
        // Returns false in case of error
+  bool Rename(char *newName, int *newPriority, int *newLifetime);
+       // Changes the file name
+       // Returns false in case of error
   };
 
 class cRecordings : public cList<cRecording> {
@@ -113,7 +116,7 @@
 #define FRAMESPERSEC 25
 
 // The maximum size of a single frame:
-#define MAXFRAMESIZE  KILOBYTE(192)
+#define MAXFRAMESIZE  KILOBYTE(512)
 
 // The maximum file size is limited by the range that can be covered
 // with 'int'. 4GB might be possible (if the range is considered
diff -Nur vdr.orig/remux.c vdr/remux.c
--- vdr.orig/remux.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/remux.c	2004-08-01 13:40:47.000000000 +0200
@@ -106,7 +106,7 @@
 #define ADAPT_FIELD    0x20
 
 #define MAX_PLENGTH  0xFFFF          // the maximum PES packet length (theoretically)
-#define MMAX_PLENGTH (8*MAX_PLENGTH) // some stations send PES packets that are extremely large, e.g. DVB-T in Finland
+#define MMAX_PLENGTH (64*MAX_PLENGTH) // some stations send PES packets that are extremely large, e.g. DVB-T in Finland
 
 #define IPACKS 2048
 
diff -Nur vdr.orig/theme.c vdr/theme.c
--- vdr.orig/theme.c	1970-01-01 01:00:00.000000000 +0100
+++ vdr/theme.c	2004-08-01 13:40:47.000000000 +0200
@@ -0,0 +1,370 @@
+/*
+ * theme.c: Theme implementations
+ *
+ * See the main source file 'vdr.c' for copyright information and
+ * how to reach the author.
+ *
+ */
+
+#include "osd.h"
+#include "menu.h"
+#include "status.h"
+#include "config.h"
+#include "theme.h"
+
+cDisplayChannelTheme::cDisplayChannelTheme(void)
+:cBitmap(Width() * cOsd::CellWidth(), Height(true) * cOsd::LineHeight(), 5)
+{
+  lines = 0;
+}
+
+void cDisplayChannelTheme::Reset(void) 
+{
+  lines = 0;
+}
+
+void cDisplayChannelTheme::DrawChannel(const cChannel *Channel, int Number)
+{
+  char symbol[3] = "";
+  int bufSize = 28;
+  bool hasLogo = false;
+  char channel[bufSize];
+  char number[bufSize];
+
+  cBitmap logo(64, 48, 4);
+  int width = Width() * cOsd::CellWidth();
+  int height = Height(true) * cOsd::LineHeight();
+  const char *date = DayDateTime();
+  hasLogo = Setup.ChannelLogo && Channel && (logo.LoadXpm(Channel->Name(), Setup.LogoColorScheme ? (eDvbColor)bgchanneldate : clrTransparent) || logo.LoadLogo(Channel->Name()));
+  if (!hasLogo) {
+     bufSize += 4;
+     cOsd::HideLogo();
+     }
+
+  *channel = 0;
+  if (Channel)
+     snprintf(channel, bufSize, "%s", Channel->Name());
+  else if (Number == 0)
+     snprintf(channel, bufSize, "%s", "*** Invalid Channel ***");
+
+  *number = 0;
+  if (Channel && !Channel->GroupSep())
+     snprintf(number, bufSize, "%d%s", Channel->Number(), Number ? "-" : "");
+  else if (Number)
+     snprintf(number, bufSize, "%d-", Number);
+
+  eDvbFont oldFont = SetFont(fontSym);
+
+  // clean area
+  Fill(0, 0, width - 1, height - 1, clrTransparent);
+
+  // symbols area w/ upper right corner
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT1);
+  Fill(10, 10, width - 1, 63, clrBackground);
+  Text(width - 28, 10, symbol, clrBackground, clrTransparent);
+
+  // channel number and date, with round corner
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT);
+  Fill(10, 10, 315, 36, (eDvbColor)bgchanneldate);
+  Text(316, 10, symbol, (eDvbColor)bgchanneldate, clrBackground);
+
+  // separator line
+  Fill(10, 37, 315, 38, clrBlack);
+
+  // channel name, with round corner
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT);
+  Fill(10, 39, 350, 64, (eDvbColor)bgchannelname);
+  Text(351, 39, symbol, (eDvbColor)bgchannelname, clrBackground);
+
+  if (Channel && !Channel->GroupSep()) {
+     if (Setup.Symbol) {
+        if (Channel->Vpid()) {
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_TELETEXT);
+           Text(width - 33,  25, symbol, Channel->Tpid() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+           }
+        else {
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_MUSIC);
+           Text(width - 33,  25, symbol, (eDvbColor)fgsymbolon, clrBackground);
+           }                                                                                          
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_AUDIO);
+        Text(width - 75,  25, symbol, Channel->Apid2() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_DDIGITAL);
+        Text(width - 117, 25, symbol, Channel->Dpid1() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_ENCRYPTION);
+        Text(width - 159, 25, symbol, Channel->Ca() ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+        snprintf(symbol, sizeof(symbol), "%c", FSYM_RECORD);
+        Text(width - 201, 25, symbol, cRecordControls::Active() ? clrWhite : (eDvbColor)fgsymboloff, cRecordControls::Active() ? clrRed : clrBackground);
+        }
+     if (hasLogo) {
+        Fill(10, 10, 65, 49, clrBlack);
+        cOsd::SetLogo(0, 0, logo);
+        }
+     }
+
+  SetFont(fontSml);
+  Text(hasLogo ? 70 : 16, 12, number, (eDvbColor)fgchanneldate, (eDvbColor)bgchanneldate);
+  Text(hasLogo ? 70 : 16, 39, channel, (eDvbColor)fgchannelname, (eDvbColor)bgchannelname);
+  Text(315 - cBitmap::Width(date), 12, date, (eDvbColor)fgchanneldate, (eDvbColor)bgchanneldate);
+  SetFont(oldFont);
+
+  char *fullchan = MALLOC(char, strlen(number) + strlen(channel) + 2);
+  strcpy(fullchan, number);
+  strcat(fullchan, " ");
+  strcat(fullchan, channel);
+  cStatus::MsgOsdChannel(fullchan);
+}
+
+bool cDisplayChannelTheme::DrawInfo(void) 
+{
+  char symbol[3] = "";
+  bool Res = false;
+  const cEventInfo *Present = NULL, *Following = NULL;
+  cMutexLock MutexLock;
+  const cSchedules *Schedules = cSIProcessor::Schedules(MutexLock);
+  if (Schedules) {
+     const cSchedule *Schedule = Schedules->GetSchedule();
+     if (Schedule) {
+        const char *PresentTitle = NULL, *PresentSubtitle = NULL, *FollowingTitle = NULL, *FollowingSubtitle = NULL;
+        int Lines = 0;
+        if ((Present = Schedule->GetPresentEvent()) != NULL) {
+           PresentTitle = Present->GetTitle();
+           if (!isempty(PresentTitle))
+              Lines++;
+           PresentSubtitle = Present->GetSubtitle();
+           if (!isempty(PresentSubtitle))
+              Lines++;
+           }
+        if ((Following = Schedule->GetFollowingEvent()) != NULL) {
+           FollowingTitle = Following->GetTitle();
+           if (!isempty(FollowingTitle))
+              Lines++;
+           FollowingSubtitle = Following->GetSubtitle();
+           if (!isempty(FollowingSubtitle))
+              Lines++;
+           }
+        if (Lines > lines) {
+           int y = 68;
+           SetFont(fontSym);
+           // epg time area
+           Fill(10, 64, 83, 64 + 4 * cOsd::LineHeight(), (eDvbColor)bgepgtime);
+           Fill(84, 64, width - 1, 64 + 4 * cOsd::LineHeight(), (eDvbColor)bgepgdata);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT2);
+           Text(10, 38 + 4 * cOsd::LineHeight(), symbol, (eDvbColor)bgepgtime, clrTransparent);
+           snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT2);
+           Text(width - 28, 38 + 4 * cOsd::LineHeight(), symbol, (eDvbColor)bgepgdata, clrTransparent);
+           SetFont(fontSml);
+           if (!isempty(PresentTitle)) {
+              Text(20, y, Present->GetTimeString(), (eDvbColor)fgepgtime, (eDvbColor)bgepgtime);
+              Text(90, y, PresentTitle, (eDvbColor)fgtitle, (eDvbColor)bgepgdata);
+              }
+           y += cOsd::LineHeight();
+           if (!isempty(PresentSubtitle)) {
+              Text(90, y, PresentSubtitle, (eDvbColor)fgsubtitle, (eDvbColor)bgepgdata);
+              }
+           y += cOsd::LineHeight();
+           if (!isempty(FollowingTitle)) {
+              Text(20, y, Following->GetTimeString(), (eDvbColor)fgepgtime, (eDvbColor)bgepgtime);
+              Text(90, y, FollowingTitle, (eDvbColor)fgtitle, (eDvbColor)bgepgdata);
+              }
+           y += cOsd::LineHeight();
+           if (!isempty(FollowingSubtitle)) {
+              Text(90, y, FollowingSubtitle, (eDvbColor)fgsubtitle, (eDvbColor)bgepgdata);
+              }
+
+           if (Setup.TimeBar) {
+              if (Present) {
+                 int h = 4 * cOsd::LineHeight();
+                 int w = 10;
+                 float percent = 0;
+                 cBitmap timeBar(w, h, 2);
+                 if (Present->GetDuration() != 0) {
+                    percent =  (float)(time(NULL) - Present->GetTime()) / (float)(Present->GetDuration());
+                    }
+                 if (percent < 0) percent = 0;
+                 if (percent > 1.0) percent = 1.0;
+                 // Draw the bar
+                 for (int x = 1; x < w- 1; x++) {
+                     for (int y = h- 1; y > 0; y--) {
+                         if (y > (int)(percent*(float)h))
+                            timeBar.SetPixel(x, y, (eDvbColor)timebar1);
+                         else
+                            timeBar.SetPixel(x, y, (eDvbColor)timebar2);
+                         }
+                     }
+                  SetBitmap(74, 64, timeBar);
+                  }
+              }
+           lines = Lines;
+           Res = true;
+           cStatus::MsgOsdProgramme(Present ? Present->GetTime() : 0, PresentTitle, PresentSubtitle, Following ? Following->GetTime() : 0, FollowingTitle, FollowingSubtitle);
+           }
+        }
+     }
+  return Res;
+}
+
+cDisplayChannelTheme::~cDisplayChannelTheme(void)
+{
+}
+
+int cDisplayChannelTheme::Height(bool WithInfo)
+{
+  int height = 3;
+  if (WithInfo)
+     height += 4;
+  return height;
+}
+
+cReplayControlTheme::cReplayControlTheme(void)
+:cBitmap(Width() * cOsd::CellWidth(), Height(true) * cOsd::LineHeight(), 3)
+{
+}
+
+cReplayControlTheme::~cReplayControlTheme(void)
+{
+}
+
+void cReplayControlTheme::DrawMode(int Mode, bool ModeOnly)
+{
+  char symbol[3] = "";
+  eDvbFont oldFont = SetFont(fontSym);
+	
+  // clean area
+  if (ModeOnly)
+     Fill(0, 0, width - 1, height - 1, clrTransparent);
+  else
+     Fill(0, height - 27, width - 1, height - 1, clrTransparent);
+
+  // replay controls frame
+  Fill(width - 201, height - 27, width - 1, height - 1, clrBackground);
+  if (ModeOnly) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+     Text(width - 215, height - 27, symbol, clrBackground, clrTransparent);
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_LEFT);
+     Text(width - 14, height - 27, symbol, clrBackground, clrTransparent);
+     }
+  else {
+     snprintf(symbol, sizeof(symbol), "%c%c", FSYM_WAVE_DOWN1, FSYM_WAVE_DOWN2);
+     Text(width - 257, height - 27, symbol, clrBackground, clrTransparent);
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT2);
+     Text(width - 28, height - 27, symbol, clrBackground, clrTransparent);
+     }
+
+  if (Mode == MODE_REW1 || Mode == MODE_REW2 || Mode == MODE_REW3) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_REW1_SMALL + Mode - MODE_REW1);
+     Text(width - 201, height - 23, symbol, (eDvbColor)fgsymbolon, clrBackground);
+     }
+  else {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_REW_SMALL);
+     Text(width - 201, height - 23, symbol, Mode == MODE_REW ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+     }
+
+  if (Mode == MODE_SREW1 || Mode == MODE_SREW2 || Mode == MODE_SREW3) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_SREW1 + Mode - MODE_SREW1);
+     Text(width - 168, height - 23, symbol, (eDvbColor)fgsymbolon, clrBackground);
+     }
+  else {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_SREW);
+     Text(width - 168, height - 23, symbol, Mode == MODE_SREW ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+     }
+
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_PLAY_SMALL);
+  Text(width - 135, height - 23, symbol, Mode == MODE_PLAY ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_PAUSE_SMALL);
+  Text(width - 102, height - 23, symbol, Mode == MODE_PAUSE ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+
+  if (Mode == MODE_SFWD1 || Mode == MODE_SFWD2 || Mode == MODE_SFWD3) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_SFWD1 + Mode - MODE_SFWD1);
+     Text(width - 69, height - 23, symbol, (eDvbColor)fgsymbolon, clrBackground);
+     }
+  else {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_SFWD);
+     Text(width - 69, height - 23, symbol, Mode == MODE_SFWD ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+     }
+
+  if (Mode == MODE_FFWD1 || Mode == MODE_FFWD2 || Mode == MODE_FFWD3) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_FFWD1_SMALL + Mode - MODE_FFWD1);
+     Text(width - 36, height - 23, symbol, (eDvbColor)fgsymbolon, clrBackground);
+     }
+  else {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_FFWD_SMALL);
+     Text(width - 36, height - 23, symbol, Mode == MODE_FFWD ? (eDvbColor)fgsymbolon : (eDvbColor)fgsymboloff, clrBackground);
+     }
+
+  SetFont(oldFont);
+}
+
+void cReplayControlTheme::DrawProgress(int Current, int Total, bool DisplayFrames, const cMarks &Marks, const char *Title)
+{
+  char symbol[3] = "";
+  eDvbFont oldFont = SetFont(fontSml);
+  char *title = 0;
+  int tw = -1;
+
+  if (Title) {
+     tw = cBitmap::Width(Title);
+     if (tw > width - 256) {
+        int pw = cBitmap::Width("00.00 ...");
+        const char *ptr = Title + 12;
+	while (*ptr != '\0' && (tw = cBitmap::Width(ptr) + pw) > width - 256) ++ptr;
+        title = MALLOC(char, strlen(ptr) + 10);
+        strncpy(title, Title, 6);
+        stpcpy(stpcpy(title + 6, "..."), ptr);
+        }
+     else
+        title = strdup(Title);
+     }
+
+  SetFont(fontSym);
+  /* clear area */
+  Fill(0, 0, width - 1, height - 28, clrTransparent);
+
+  /* time area */
+  int ty;
+  if (tw > width - 200) 
+     ty = height - 97;
+  else
+     ty = height - 81;
+  Fill(width - 200, ty, width - 1, height - 46, clrBackground);
+  snprintf(symbol, sizeof(symbol), "%c%c", FSYM_WAVE_UP1, FSYM_WAVE_UP2);
+  Text(width - 256, ty, symbol, clrBackground, clrTransparent);
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT1);
+  Text(width - 28, ty, symbol, clrBackground, clrTransparent);
+  SetFont(fontSml);
+  char *timestr = NULL;
+  asprintf(&timestr, "%s", IndexToHMSF(Current, DisplayFrames));
+  asprintf(&timestr, "%s  /  %s ", timestr, IndexToHMSF(Total));
+  Text(width - cBitmap::Width(timestr) - 14, ty + 3, timestr, clrWhite, clrBackground);
+  free(timestr);
+  SetFont(fontSym);
+
+  /* frame w/ three corners */
+  Fill(14, height - 54, width - 1, height - 28, clrBackground);
+  snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT);
+  Text(14, height - 54, symbol, clrBackground, clrTransparent);
+  if (!Setup.ShowReplayMode) {
+     snprintf(symbol, sizeof(symbol), "%c", FSYM_ROUND_RIGHT2);
+     Text(width - 28, height - 54, symbol, clrBackground, clrTransparent);
+     }
+  Fill(30, height - 46, width - 12, height - 31, clrBlack);
+  cProgressBar progressBar(width - 42, 15, Current, Total, Marks);
+  SetBitmap(28, height - 48, progressBar);
+  SetFont(fontSml);
+
+  /* title */
+  if (title) {
+     Fill(2, height - 70, tw + 8, height - 49, clrBlack);
+     Fill(0, height - 72, tw + 6, height - 51, clrWhite);
+     Text(4, height - 72, title, clrBlack, clrWhite);
+     free(title);
+     }
+  SetFont(oldFont);
+}
+
+int cReplayControlTheme::Height(bool WithInfo)
+{
+  int height = 1;
+  if (WithInfo)
+     height += 3;
+  return height;
+}
diff -Nur vdr.orig/theme.h vdr/theme.h
--- vdr.orig/theme.h	1970-01-01 01:00:00.000000000 +0100
+++ vdr/theme.h	2004-08-01 13:40:47.000000000 +0200
@@ -0,0 +1,123 @@
+/*
+ * theme.h: Theme implementation
+ *
+ * See the main source file 'vdr.c' for copyright information and
+ * how to reach the author.
+ *
+ * 
+ */
+
+#ifndef __THEME_H
+#define __THEME_H
+
+#include "interface.h"
+#include "config.h"
+
+enum eOSDTheme {
+  themeVanilla,
+  themeElchi,
+  themeSaschaScroll,
+  themeSaschaRound
+};
+
+#define MODE_PLAY   0
+#define MODE_FFWD1  1
+#define MODE_FFWD2  2
+#define MODE_FFWD3  3
+#define MODE_PAUSE  4
+#define MODE_REW1   5
+#define MODE_REW2   6
+#define MODE_REW3   7
+#define MODE_FFWD   8
+#define MODE_REW    9
+#define MODE_SFWD1 10
+#define MODE_SFWD2 11
+#define MODE_SFWD3 12
+#define MODE_SREW1 13
+#define MODE_SREW2 14
+#define MODE_SREW3 15
+#define MODE_SFWD  16
+#define MODE_SREW  17
+
+#define FSYM_THINSPACE        32 /* " " */
+
+#define FSYM_DDIGITAL         33 /* "!" */
+#define FSYM_TELETEXT         34 /* """ */
+#define FSYM_ENCRYPTION       35 /* "#" */
+#define FSYM_AUDIO            36 /* "$" */
+#define FSYM_RECORD           37 /* "%" */
+#define FSYM_MUSIC            38 /* "&" */
+
+#define FSYM_WAVE_UP1         41 /* ")" */
+#define FSYM_WAVE_UP2         42 /* "*" */
+#define FSYM_WAVE_DOWN1       43 /* "+" */
+#define FSYM_WAVE_DOWN2       44 /* "," */
+#define FSYM_ROUND_LEFT1      45 /* "-" */
+#define FSYM_ROUND_LEFT2      46 /* "." */
+#define FSYM_ROUND_RIGHT1     47 /* "/" */
+#define FSYM_ROUND_RIGHT2     48 /* "0" */
+#define FSYM_ROUND_LEFT       49 /* "1" */
+#define FSYM_ROUND_RIGHT      50 /* "2" */
+#define FSYM_THINROUND_RIGHT  51 /* "3" */
+#define FSYM_THINROUND_RIGHT1 52 /* "4" */
+#define FSYM_THINROUND_RIGHT2 53 /* "5" */
+#define FSYM_TRIANGLE         54 /* "6" */
+
+#define FSYM_PLAY             57 /* "9" */
+#define FSYM_FFWD1            58 /* ":" */
+#define FSYM_FFWD2            59 /* ";" */
+#define FSYM_FFWD3            60 /* "<" */
+#define FSYM_PAUSE            61 /* "=" */
+#define FSYM_REW1             62 /* ">" */
+#define FSYM_REW2             63 /* "?" */
+#define FSYM_REW3             64 /* "@" */
+#define FSYM_EMPTY            65 /* "A" */
+#define FSYM_FFWD             66 /* "B" */
+#define FSYM_REW              67 /* "C" */
+
+#define FSYM_PLAY_SMALL       70 /* "F" */
+#define FSYM_FFWD1_SMALL      71 /* "G" */
+#define FSYM_FFWD2_SMALL      72 /* "H" */
+#define FSYM_FFWD3_SMALL      73 /* "I" */
+#define FSYM_PAUSE_SMALL      74 /* "J" */
+#define FSYM_REW1_SMALL       75 /* "K" */
+#define FSYM_REW2_SMALL       76 /* "L" */
+#define FSYM_REW3_SMALL       77 /* "M" */
+#define FSYM_EMPTY_SMALL      78 /* "N" */
+#define FSYM_FFWD_SMALL       79 /* "O" */
+#define FSYM_REW_SMALL        80 /* "P" */
+
+#define FSYM_SFWD1            83 /* "S" */
+#define FSYM_SFWD2            84 /* "T" */
+#define FSYM_SFWD3            85 /* "U" */
+#define FSYM_SREW1            86 /* "V" */
+#define FSYM_SREW2            87 /* "W" */
+#define FSYM_SREW3            88 /* "X" */
+#define FSYM_SFWD             89 /* "Y" */
+#define FSYM_SREW             90 /* "Z" */
+
+class cDisplayChannelTheme : public cBitmap {
+private:
+	int lines;
+public:
+	cDisplayChannelTheme(void);
+	virtual ~cDisplayChannelTheme();
+	void Reset(void);
+	void DrawChannel(const cChannel *Channel, int Number);
+	bool DrawInfo(void);
+	static int Width(void) { return Setup.OSDwidth; }
+	static int Height(bool WithInfo);
+};
+
+class cReplayControlTheme : public cBitmap {
+public:
+	cReplayControlTheme(void);
+	virtual ~cReplayControlTheme();
+	void DrawMode(int Mode, bool ModeOnly);
+	void DrawProgress(int Current, int Total, bool DisplayFrames,
+	const cMarks &Marks, const char *Title);
+	static int Width(void) { return Setup.OSDwidth; }
+	static int Height(bool WithInfo);
+};
+
+#endif // __THEME_H
diff -Nur vdr.orig/timers.c vdr/timers.c
--- vdr.orig/timers.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/timers.c	2004-08-01 13:40:47.000000000 +0200
@@ -253,6 +253,16 @@
   return weekday == 0 ? 6 : weekday - 1; // we start with monday==0!
 }
 
+const char * cTimer::GetWDayString(time_t t)
+{
+  static char WDay[4];
+
+  struct tm tm_r;
+  strn0cpy(WDay, WeekDayName(localtime_r(&t, &tm_r)->tm_wday), sizeof(WDay));
+
+  return WDay;
+}
+
 bool cTimer::DayMatches(time_t t)
 {
   return IsSingleEvent() ? GetMDay(t) == day : (day & (1 << GetWDay(t))) != 0;
diff -Nur vdr.orig/timers.h vdr/timers.h
--- vdr.orig/timers.h	2004-07-17 17:27:25.000000000 +0200
+++ vdr/timers.h	2004-08-01 13:40:47.000000000 +0200
@@ -61,6 +61,7 @@
   bool IsSingleEvent(void);
   int GetMDay(time_t t);
   int GetWDay(time_t t);
+  const char *GetWDayString(time_t t);
   bool DayMatches(time_t t);
   static time_t IncDay(time_t t, int Days);
   static time_t SetTime(time_t t, int SecondsFromMidnight);
diff -Nur vdr.orig/tools.c vdr/tools.c
--- vdr.orig/tools.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/tools.c	2004-08-01 13:40:47.000000000 +0200
@@ -17,6 +17,7 @@
 #include <time.h>
 #include <unistd.h>
 #include "i18n.h"
+#include "theme.h"
 
 int SysLogLevel = 3;
 
@@ -494,6 +495,9 @@
      time(&t);
   struct tm tm_r;
   tm *tm = localtime_r(&t, &tm_r);
+  if (Setup.Theme != themeVanilla)
+  snprintf(buffer, sizeof(buffer), " %s %02d.%02d   %02d:%02d ", WeekDayName(tm->tm_wday), tm->tm_mday, tm->tm_mon + 1, tm->tm_hour, tm->tm_min);
+  else
   snprintf(buffer, sizeof(buffer), "%s %2d.%02d %02d:%02d", WeekDayName(tm->tm_wday), tm->tm_mday, tm->tm_mon + 1, tm->tm_hour, tm->tm_min);
   return buffer;
 }
diff -Nur vdr.orig/transfer.c vdr/transfer.c
--- vdr.orig/transfer.c	2004-07-17 17:27:25.000000000 +0200
+++ vdr/transfer.c	2004-08-01 13:40:47.000000000 +0200
@@ -12,8 +12,8 @@
 //XXX+ also used in recorder.c - find a better place???
 // The size of the array used to buffer video data:
 // (must be larger than MINVIDEODATA - see remux.h)
-#define VIDEOBUFSIZE  MEGABYTE(1)
-#define POLLTIMEOUTS_BEFORE_DEVICECLEAR 3
+#define VIDEOBUFSIZE  MEGABYTE(4)
+#define POLLTIMEOUTS_BEFORE_DEVICECLEAR (1000 /* ms */ * 31 /* 2 GOPs + 1 additional frame */ / 25 /* frames per second */ / 100 /* ms poll timeout */)
 
 // --- cTransfer -------------------------------------------------------------
 
diff -Nur vdr.orig/vdr.c vdr/vdr.c
--- vdr.orig/vdr.c	2004-07-22 20:19:11.000000000 +0200
+++ vdr/vdr.c	2004-08-01 13:40:47.000000000 +0200
@@ -96,7 +96,6 @@
 
   int SVDRPport = DEFAULTSVDRPPORT;
   const char *AudioCommand = NULL;
-  const char *ConfigDirectory = NULL;
   bool DisplayHelp = false;
   bool DisplayVersion = false;
   bool DaemonMode = false;
@@ -330,7 +329,7 @@
      HasStdin = true;
      }
 
-  isyslog("VDR version %s started", VDRVERSION);
+  isyslog("VDR version %s (ElchiAIO%d%c) started", VDRVERSION, ELCHIAIOVERSION / 100, ELCHIAIOVERSION % 100 ? char(87 + (ELCHIAIOVERSION % 100)) : ' ');
 
   // Load plugins:
 
@@ -358,6 +357,39 @@
         ))
      return 2;
 
+  // SetColors:
+
+  bgbackground    = Setup.Theme == themeVanilla ? clrBackVanilla : Setup.BgClrBackground;
+  bgchannelname   = Setup.BgClrChannelName;
+  bgchanneldate   = Setup.BgClrChannelDate;
+  bgepgtime       = Setup.BgClrEpgTime;
+  bgepgdata       = Setup.BgClrEpgData;
+  bgtitleline     = Setup.BgClrTitleLine;
+  bgscrolline     = Setup.BgClrScrolLine;
+  bghelpred       = Setup.BgClrHelpRed;
+  bghelpgreen     = Setup.BgClrHelpGreen;
+  bghelpyellow    = Setup.BgClrHelpYellow;
+  bghelpblue      = Setup.BgClrHelpBlue;
+  bgerrorline     = Setup.BgClrErrorLine;
+  bginfoline      = Setup.BgClrInfoLine;
+  bgconfirmline   = Setup.BgClrConfirmLine;
+  fgchannelname   = LookupColor(Setup.ClrChannelName);
+  fgchanneldate   = LookupColor(Setup.ClrChannelDate);
+  fgepgtime       = LookupColor(Setup.ClrEpgTime);
+  fgtitle         = LookupColor(Setup.ClrTitle);
+  fgsubtitle      = LookupColor(Setup.ClrSubTitle);
+  fgmenufont      = LookupColor(Setup.ClrMenuFont);
+  fgtitleline     = LookupColor(Setup.ClrTitleLine);
+  fgscrolline     = LookupColor(Setup.ClrScrolLine);
+  volumebar       = LookupColor(Setup.ClrVolumeBar);
+  timebar1        = LookupColor(Setup.ClrTimeBar1);
+  timebar2        = LookupColor(Setup.ClrTimeBar2);
+  fgsymbolon      = LookupColor(Setup.ClrSymbolOn);
+  fgsymboloff     = LookupColor(Setup.ClrSymbolOff);
+  fgerrorfont     = LookupColor(Setup.ClrErrorFont);
+  fginfofont      = LookupColor(Setup.ClrInfoFont);
+  fgconfirmfont   = LookupColor(Setup.ClrConfirmFont);
+
   // DVB interfaces:
 
   cDvbDevice::Initialize();
