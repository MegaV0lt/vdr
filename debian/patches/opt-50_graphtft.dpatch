#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-50_graphtft.dpatch by Jörg Wendel (Horchi)
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Patch from teh Graphtft plugin version 0.0.15
## DP: http://www.jwendel.de/vdr/

@DPATCH@
diff -urNad vdr-1.4.6~/menu.c vdr-1.4.6/menu.c
--- vdr-1.4.6~/menu.c	2007-03-10 21:46:00.000000000 +0100
+++ vdr-1.4.6/menu.c	2007-03-10 21:46:01.000000000 +0100
@@ -226,6 +226,7 @@
 public:
   cMenuEditChannel(cChannel *Channel, bool New = false);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omEditChannel; }
   };
 
 cMenuEditChannel::cMenuEditChannel(cChannel *Channel, bool New)
@@ -451,6 +452,7 @@
   cMenuChannels(void);
   ~cMenuChannels();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omChannels; }
   };
 
 cMenuChannels::cMenuChannels(void)
@@ -949,6 +951,7 @@
   virtual ~cMenuTimers();
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omTimers; }
   };
 
 cMenuTimers::cMenuTimers(void)
@@ -1479,6 +1482,7 @@
   cMenuSchedule(void);
   virtual ~cMenuSchedule();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omSchedule; }
   };
 
 cMenuSchedule::cMenuSchedule(void)
@@ -1751,6 +1755,7 @@
   cMenuCommands(const char *Title, cCommands *Commands, const char *Parameters = NULL);
   virtual ~cMenuCommands();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omCommands; }
   };
 
 cMenuCommands::cMenuCommands(const char *Title, cCommands *Commands, const char *Parameters)
@@ -1986,6 +1991,7 @@
   cMenuRecording(const cRecording *Recording, bool WithButtons = false);
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omRecording; }
 };
 
 cMenuRecording::cMenuRecording(const cRecording *Recording, bool WithButtons)
@@ -3097,6 +3103,7 @@
 public:
   cMenuSetupPlugins(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omSetupPage; }
   };
 
 cMenuSetupPlugins::cMenuSetupPlugins(void)
@@ -3150,6 +3157,7 @@
 public:
   cMenuSetup(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omSetup; }
   };
 
 cMenuSetup::cMenuSetup(void)
diff -urNad vdr-1.4.6~/menu.h vdr-1.4.6/menu.h
--- vdr-1.4.6~/menu.h	2007-03-10 21:46:00.000000000 +0100
+++ vdr-1.4.6/menu.h	2007-03-10 21:46:01.000000000 +0100
@@ -30,6 +30,7 @@
   void SetText(const char *Text);
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omText; }
   };
 
 class cMenuEditTimer : public cOsdMenu {
@@ -46,6 +47,7 @@
   cMenuEditTimer(cTimer *Timer, bool New = false);
   virtual ~cMenuEditTimer();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omTimerEdit; }
   };
 
 class cMenuEvent : public cOsdMenu {
@@ -55,6 +57,7 @@
   cMenuEvent(const cEvent *Event, bool CanSwitch = false, bool Buttons = false);
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omEvent; }
   };
 
 class cMenuMain : public cOsdMenu {
@@ -74,6 +77,7 @@
   cMenuMain(eOSState State = osUnknown);
   virtual eOSState ProcessKey(eKeys Key);
   static cOsdObject *PluginOsdObject(void);
+  virtual eOsdMenuKind MenuKind() { return omMain; }
   };
 
 class cDisplayChannel : public cOsdObject {
@@ -143,6 +147,7 @@
   cMenuCam(cCiMenu *CiMenu);
   virtual ~cMenuCam();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omCam; }
   };
 
 class cMenuCamEnquiry : public cOsdMenu {
@@ -155,6 +160,7 @@
   cMenuCamEnquiry(cCiEnquiry *CiEnquiry);
   virtual ~cMenuCamEnquiry();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omCamEnquiry; }
   };
 
 cOsdObject *CamControl(void);
@@ -182,6 +188,7 @@
   cMenuRecordings(const char *Base = NULL, int Level = 0, bool OpenSubMenus = false);
   ~cMenuRecordings();
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omRecordings; }
   };
 
 class cRecordControl {
diff -urNad vdr-1.4.6~/menuitems.h vdr-1.4.6/menuitems.h
--- vdr-1.4.6~/menuitems.h	2007-03-10 21:45:57.000000000 +0100
+++ vdr-1.4.6/menuitems.h	2007-03-10 21:46:01.000000000 +0100
@@ -179,6 +179,7 @@
   cMenuSetupPage(void);
   virtual eOSState ProcessKey(eKeys Key);
   void SetPlugin(cPlugin *Plugin);
+  eOsdMenuKind MenuKind() { return omSetupPage; }
   };
 
 #endif //__MENUITEMS_H
diff -urNad vdr-1.4.6~/osdbase.c vdr-1.4.6/osdbase.c
--- vdr-1.4.6~/osdbase.c	2007-03-10 21:45:57.000000000 +0100
+++ vdr-1.4.6/osdbase.c	2007-03-10 21:46:01.000000000 +0100
@@ -100,6 +100,7 @@
   free(status);
   displayMenu->Clear();
   cStatus::MsgOsdClear();
+  cStatus::MsgOsdMenuDestroy();
   if (!--displayMenuCount)
      DELETENULL(displayMenu);
 }
@@ -195,6 +196,7 @@
   displayMenu->SetMessage(mtStatus, NULL);
   displayMenu->Clear();
   cStatus::MsgOsdClear();
+  cStatus::MsgOsdMenuDisplay(MenuKind());
   displayMenu->SetTabs(cols[0], cols[1], cols[2], cols[3], cols[4]);//XXX
   displayMenu->SetTitle(title);
   cStatus::MsgOsdTitle(title);
@@ -510,6 +512,7 @@
      eOSState state = subMenu->ProcessKey(Key);
      if (state == osBack)
         return CloseSubMenu();
+
      return state;
      }
 
diff -urNad vdr-1.4.6~/osdbase.h vdr-1.4.6/osdbase.h
--- vdr-1.4.6~/osdbase.h	2007-03-10 21:45:57.000000000 +0100
+++ vdr-1.4.6/osdbase.h	2007-03-10 21:46:01.000000000 +0100
@@ -46,6 +46,30 @@
                 osUser10,
               };
 
+enum eOsdMenuKind { omUnknown,
+                    omMain,
+                    omText,
+                    omTimerEdit,
+                    omEvent,
+                    omCam,
+                    omCamEnquiry,
+                    omSetupPage,
+                    omEditChannel,
+                    omChannels,
+                    omCommands,
+                    omTimers,
+                    omWhatsOn,
+                    omWhatsOnElse = omWhatsOn,
+                    omWhatsOnNow,
+                    omWhatsOnNext,
+                    omSchedule,
+                    omRecording,
+                    omRecordings,
+                    omRenameRecording,
+                    omSetup
+                  };
+                 
+
 class cOsdItem : public cListObject {
 private:
   char *text;
@@ -127,6 +151,7 @@
   void Ins(cOsdItem *Item, bool Current = false, cOsdItem *Before = NULL);
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+  virtual eOsdMenuKind MenuKind() { return omUnknown; }
   };
 
 #endif //__OSDBASE_H
diff -urNad vdr-1.4.6~/status.c vdr-1.4.6/status.c
--- vdr-1.4.6~/status.c	2007-03-10 21:46:00.000000000 +0100
+++ vdr-1.4.6/status.c	2007-03-10 21:46:01.000000000 +0100
@@ -164,3 +164,15 @@
          return true;
       return false;
 }
+
+void cStatus::MsgOsdMenuDisplay(eOsdMenuKind kind)
+{
+  for (cStatus *sm = statusMonitors.First(); sm; sm = statusMonitors.Next(sm))
+     sm->OsdMenuDisplay(kind);
+}
+
+void cStatus::MsgOsdMenuDestroy()
+{
+  for (cStatus *sm = statusMonitors.First(); sm; sm = statusMonitors.Next(sm))
+     sm->OsdMenuDestroy();
+}
diff -urNad vdr-1.4.6~/status.h vdr-1.4.6/status.h
--- vdr-1.4.6~/status.h	2007-03-10 21:46:00.000000000 +0100
+++ vdr-1.4.6/status.h	2007-03-10 21:48:17.000000000 +0100
@@ -84,6 +84,10 @@
                // report user action
   virtual bool MenuItemProtected(const char* Name, int menuView = false)  { return false; }                // PIN PATCH
                // Checks if a menu entry is protected.
+  virtual void OsdMenuDisplay(eOsdMenuKind kind) {}
+               // report menu creation
+  virtual void OsdMenuDestroy() {}
+               // report menu destruvtion
 
 
 public:
@@ -113,6 +117,8 @@
   static bool MsgPluginProtected(cPlugin* Plugin, int menuView = false);                           // PIN PATCH
   static void MsgUserAction(const eKeys key, const cOsdObject* Interact);
   static bool MsgMenuItemProtected(const char* Name, int menuView = false);                        // PIN PATCH
+  static void MsgOsdMenuDisplay(const eOsdMenuKind kind);
+  static void MsgOsdMenuDestroy();
 
   };
 
