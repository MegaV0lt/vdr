#! /bin/sh debian/make-special-vdr.sh
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# To use dpatch uncomment the following line and set Build-Depends to dpatch
DPATCH=yes

ifdef DPATCH
include /usr/share/dpatch/dpatch.make
else
patch:
patch-stamp:
unpatch:
endif

DB2MAN = /usr/share/sgml/docbook/stylesheet/xsl/nwalsh/manpages/docbook.xsl
MANPAGES = debian/vdrdbg-buildpackage.1 debian/debugvdr.1 debian/vdr-dbg.1 \
           debian/vdrleaktest.1

MAKE_OPTIONS = REMOTE=LIRC CONFDIR=/var/lib/vdr LOCDIR=/usr/share/locale \
               VIDEODIR=/var/lib/video.00 PLUGINLIBDIR=/usr/lib/vdr/plugins

%.1: %.1.xml
	xsltproc -o $@ --nonet $(DB2MAN) $<

configure: configure-stamp
configure-stamp: patch-stamp
	dh_testdir
	touch configure-stamp

build: build-stamp $(MANPAGES)
build-stamp: configure-stamp
	dh_testdir

	# build unoptimized vdr with debugging symbols
	touch po/vdr.pot po/*.po
	$(MAKE) all $(MAKE_OPTIONS) BUILDVDR=yes VDRDEBUG=yes
	cp vdr vdr-dbg
	$(MAKE) -o .dependencies clean $(MAKE_OPTIONS)

	# build "productive" vdr
	touch po/vdr.pot po/*.po
	$(MAKE) all $(MAKE_OPTIONS) BUILDVDR=yes
	ln -f vdr vdr-kbd

	# plugins
	mkdir -p PLUGINS/lib
	$(MAKE) plugins $(MAKE_OPTIONS)

	cp newplugin vdr-newplugin

	gcc -o debian/vdr-shutdown.wrapper debian/vdr-shutdown-wrapper.c

	touch build-stamp

patchlevel:
	sh debian/patchlevel.sh make
	sh debian/extract-patchinfo >debian/patchinfo

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	$(MAKE) -o .dependencies clean-plugins $(MAKE_OPTIONS)
	$(MAKE) -o .dependencies clean $(MAKE_OPTIONS)
	rm -f vdr-dbg
	rm -f vdr-kbd
	rm -rf PLUGINS/lib
	rm -f vdr-newplugin
	rm -f debian/vdr-shutdown.wrapper
	sh debian/patchlevel.sh clean
	rm -f debian/patchinfo
	rm -f $(MANPAGES)
	dh_clean

install: build patchlevel
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	dh_install
	chmod +x $(CURDIR)/debian/vdr/usr/lib/vdr/vdr-*

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i
	dh_installdocs -i
	dh_installexamples -i
#	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
	dh_installman -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs -i HISTORY
	dh_link -i
	dh_strip -i
	dh_compress -i
	dh_fixperms -i
#	dh_makeshlibs -i
	dh_installdeb -i
	dh_perl -i
	dh_shlibdeps -i
	sh debian/patchlevel.sh subst
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installdebconf -a
	dh_installdocs -a -Nvdr-dbg -Nvdr-plugin-examples
	dh_installexamples -a
	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
	dh_installinit -a
#	dh_installcron -a
	dh_installman -a
#	dh_installinfo -a
#	dh_undocumented -a
	dh_installchangelogs -pvdr HISTORY
	dh_installchangelogs -pvdr-plugin-sky PLUGINS/src/sky/HISTORY
	dh_installchangelogs -pvdr-plugin-pictures PLUGINS/src/pictures/HISTORY
	dh_link -a
	dh_strip -a -Xvdr-dbg
	dh_compress -a
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
	dh_perl -a
	dh_shlibdeps -a
	sh debian/patchlevel.sh subst
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure \
        clean-patched patch unpatch
